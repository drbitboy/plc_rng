(*********************************************

  Import-Export
  Version   := RSLogix 5000 v20.04
  Owner     := FAS, FAS
  Exported  := Mon Dec 30 17:16:33 2019

  Note:  File encoded in UTF-8.  Only edit file in a program 
         which supports UTF-8 (like Notepad, not Wordpad).

**********************************************)
IE_VER := 2.11;

CONTROLLER Compact_AOI_Test (ProcessorType := "1768-L45",
                             Major := 20,
                             CompatibilityMode := V20.01,
                             TimeSlice := 18,
                             ShareUnusedTimeSlice := 0,
                             RedundancyEnabled := 0,
                             KeepTestEditsOnSwitchOver := 0,
                             DataTablePadPercentage := 50,
                             SecurityCode := 0,
                             ChangesToDetect := 16#ffff_ffff_ffff_ffff,
                             SFCExecutionControl := "CurrentActive",
                             SFCRestartPosition := "MostRecent",
                             SFCLastScan := "DontScan",
                             SerialNumber := 16#4051_3d5c,
                             MatchProjectToController := No,
                             CanUseRPIFromProducer := No,
                             InhibitAutomaticFirmwareUpdate := 0)
	DATATYPE P_DescList (Description := "Code / Description List Entry",
	                     FamilyType := NoFamily)
		DINT Code (Description := "Code for which to look up Description");
		STRING_40 Desc (Description := "Description for given Code");
	END_DATATYPE

	DATATYPE P_E300Ovld_Inp (Description := "E300 Overload (193-ECM-ETR)$NInput Structure",
	                         FamilyType := NoFamily)
		DINT Fault (Radix := Binary);
		INT DeviceStatus0 (Description := "Device Status 0 - Parameter 20",
		                  Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld2 (Hidden := 1);
		BIT TripPresent ZZZZZZZZZZP_E300Ovld2 : 0 (Description := "Motor Overload Tripped");
		BIT WarningPresent ZZZZZZZZZZP_E300Ovld2 : 1;
		BIT InvalidConfiguration ZZZZZZZZZZP_E300Ovld2 : 2;
		BIT MotorCurrentPresent ZZZZZZZZZZP_E300Ovld2 : 3;
		BIT GroundFaultCurrentPresent ZZZZZZZZZZP_E300Ovld2 : 4;
		BIT MotorVoltagePresent ZZZZZZZZZZP_E300Ovld2 : 5;
		BIT EmergencyStartEnabled ZZZZZZZZZZP_E300Ovld2 : 6;
		BIT DeviceLogixEnabled ZZZZZZZZZZP_E300Ovld2 : 7;
		SINT ZZZZZZZZZZP_E300Ovld11 (Hidden := 1);
		BIT FeedbackTimeoutEnabled ZZZZZZZZZZP_E300Ovld11 : 0;
		BIT OperatorStationPresent ZZZZZZZZZZP_E300Ovld11 : 1;
		BIT VoltageSensingPresent ZZZZZZZZZZP_E300Ovld11 : 2;
		BIT InternalGroundFaultSensingPresent ZZZZZZZZZZP_E300Ovld11 : 3;
		BIT ExternalGroundFaultSensingPresent ZZZZZZZZZZP_E300Ovld11 : 4;
		BIT PTCSensingPresent ZZZZZZZZZZP_E300Ovld11 : 5;
		BIT Ready ZZZZZZZZZZP_E300Ovld11 : 6;
		INT DeviceStatus1 (Description := "Device Status 1 - Parameter 21",
		                  Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld20 (Hidden := 1);
		BIT ContolModule24VDCPresent ZZZZZZZZZZP_E300Ovld20 : 0;
		BIT ControlModule120VACPresent ZZZZZZZZZZP_E300Ovld20 : 1;
		BIT ControlModule240VACPresent ZZZZZZZZZZP_E300Ovld20 : 2;
		BIT SensingModule30APresent ZZZZZZZZZZP_E300Ovld20 : 3;
		BIT SensingModule60APresent ZZZZZZZZZZP_E300Ovld20 : 4;
		BIT SensingModule100APresent ZZZZZZZZZZP_E300Ovld20 : 5;
		BIT SensingModule200APresent ZZZZZZZZZZP_E300Ovld20 : 6;
		BIT DigitalModule1Present ZZZZZZZZZZP_E300Ovld20 : 7;
		SINT ZZZZZZZZZZP_E300Ovld29 (Hidden := 1);
		BIT DigitalModule2Present ZZZZZZZZZZP_E300Ovld29 : 0;
		BIT DigitalModule3Present ZZZZZZZZZZP_E300Ovld29 : 1;
		BIT DigitalModule4Present ZZZZZZZZZZP_E300Ovld29 : 2;
		BIT AnalogModule1Present ZZZZZZZZZZP_E300Ovld29 : 3;
		BIT AnalogModule2Present ZZZZZZZZZZP_E300Ovld29 : 4;
		BIT AnalogModule3Present ZZZZZZZZZZP_E300Ovld29 : 5;
		BIT AnalogModule4Present ZZZZZZZZZZP_E300Ovld29 : 6;
		INT InputStatus0 (Description := "Input Status 0 - Parameter 16",
		                 Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld38 (Hidden := 1);
		BIT Pt00Data ZZZZZZZZZZP_E300Ovld38 : 0 (Description := "Motor Running AUX Feedback");
		BIT Pt01Data ZZZZZZZZZZP_E300Ovld38 : 1;
		BIT Pt02Data ZZZZZZZZZZP_E300Ovld38 : 2;
		BIT Pt03Data ZZZZZZZZZZP_E300Ovld38 : 3;
		BIT Pt04Data ZZZZZZZZZZP_E300Ovld38 : 4;
		BIT Pt05Data ZZZZZZZZZZP_E300Ovld38 : 5;
		INT InputStatus1 (Description := "Input Status 1 - Parameter 17",
		                 Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld46 (Hidden := 1);
		BIT Digital1Pt00Data ZZZZZZZZZZP_E300Ovld46 : 0;
		BIT Digital1Pt01Data ZZZZZZZZZZP_E300Ovld46 : 1;
		BIT Digital1Pt02Data ZZZZZZZZZZP_E300Ovld46 : 2;
		BIT Digital1Pt03Data ZZZZZZZZZZP_E300Ovld46 : 3;
		BIT Digital2Pt00Data ZZZZZZZZZZP_E300Ovld46 : 4;
		BIT Digital2Pt01Data ZZZZZZZZZZP_E300Ovld46 : 5;
		BIT Digital2Pt02Data ZZZZZZZZZZP_E300Ovld46 : 6;
		BIT Digital2Pt03Data ZZZZZZZZZZP_E300Ovld46 : 7;
		SINT ZZZZZZZZZZP_E300Ovld55 (Hidden := 1);
		BIT Digital3Pt00Data ZZZZZZZZZZP_E300Ovld55 : 0;
		BIT Digital3Pt01Data ZZZZZZZZZZP_E300Ovld55 : 1;
		BIT Digital3Pt02Data ZZZZZZZZZZP_E300Ovld55 : 2;
		BIT Digital3Pt03Data ZZZZZZZZZZP_E300Ovld55 : 3;
		BIT Digital4Pt00Data ZZZZZZZZZZP_E300Ovld55 : 4;
		BIT Digital4Pt01Data ZZZZZZZZZZP_E300Ovld55 : 5;
		BIT Digital4Pt02Data ZZZZZZZZZZP_E300Ovld55 : 6;
		BIT Digital4Pt03Data ZZZZZZZZZZP_E300Ovld55 : 7;
		INT OutputStatus (Description := "Output Status - Parameter 18",
		                 Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld65 (Hidden := 1);
		BIT Pt00Readback ZZZZZZZZZZP_E300Ovld65 : 0;
		BIT Pt01Readback ZZZZZZZZZZP_E300Ovld65 : 1;
		BIT Pt02Readback ZZZZZZZZZZP_E300Ovld65 : 2;
		BIT Digital1Pt00Readback ZZZZZZZZZZP_E300Ovld65 : 3;
		BIT Digital1Pt01Readback ZZZZZZZZZZP_E300Ovld65 : 4;
		BIT Digital2Pt00Readback ZZZZZZZZZZP_E300Ovld65 : 5;
		BIT Digital2Pt01Readback ZZZZZZZZZZP_E300Ovld65 : 6;
		BIT Digital3Pt00Readback ZZZZZZZZZZP_E300Ovld65 : 7;
		SINT ZZZZZZZZZZP_E300Ovld74 (Hidden := 1);
		BIT Digital3Pt01Readback ZZZZZZZZZZP_E300Ovld74 : 0;
		BIT Digital4Pt00Readback ZZZZZZZZZZP_E300Ovld74 : 1;
		BIT Digital4Pt01Readback ZZZZZZZZZZP_E300Ovld74 : 2;
		INT OperatorStation (Description := "Operator Station Status - Parameter 19",
		                    Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld79 (Hidden := 1);
		BIT OperatorStationStart1 ZZZZZZZZZZP_E300Ovld79 : 0;
		BIT OperatorStationStart2 ZZZZZZZZZZP_E300Ovld79 : 1;
		BIT OperatorStationLocalRemote ZZZZZZZZZZP_E300Ovld79 : 2;
		BIT OperatorStationStop ZZZZZZZZZZP_E300Ovld79 : 3;
		BIT OperatorStationReset ZZZZZZZZZZP_E300Ovld79 : 4;
		BIT OperatorStationStart1LEDReadback ZZZZZZZZZZP_E300Ovld79 : 5;
		BIT OperatorStationStart2LEDReadback ZZZZZZZZZZP_E300Ovld79 : 6;
		BIT OperatorStationLocalLEDReadback ZZZZZZZZZZP_E300Ovld79 : 7;
		SINT ZZZZZZZZZZP_E300Ovld88 (Hidden := 1);
		BIT OperatorStationRemoteLEDReadback ZZZZZZZZZZP_E300Ovld88 : 0;
		BIT OperatorStationStopLEDReadback ZZZZZZZZZZP_E300Ovld88 : 1;
		INT CurrentTripStatus (Description := "Current Trip Status - Parameter 4",
		                      Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld92 (Hidden := 1);
		BIT OverloadTrip ZZZZZZZZZZP_E300Ovld92 : 0;
		BIT PhaseLossTrip ZZZZZZZZZZP_E300Ovld92 : 1;
		BIT GroundFaultCurrentTrip ZZZZZZZZZZP_E300Ovld92 : 2;
		BIT StallTrip ZZZZZZZZZZP_E300Ovld92 : 3;
		BIT JamTrip ZZZZZZZZZZP_E300Ovld92 : 4;
		BIT UnderloadTrip ZZZZZZZZZZP_E300Ovld92 : 5;
		BIT CurrentImbalanceTrip ZZZZZZZZZZP_E300Ovld92 : 6;
		BIT L1UnderCurrentTrip ZZZZZZZZZZP_E300Ovld92 : 7;
		SINT ZZZZZZZZZZP_E300Ovld101 (Hidden := 1);
		BIT L2UnderCurrentTrip ZZZZZZZZZZP_E300Ovld101 : 0;
		BIT L3UnderCurrentTrip ZZZZZZZZZZP_E300Ovld101 : 1;
		BIT L1OverCurrentTrip ZZZZZZZZZZP_E300Ovld101 : 2;
		BIT L2OverCurrentTrip ZZZZZZZZZZP_E300Ovld101 : 3;
		BIT L3OverCurrentTrip ZZZZZZZZZZP_E300Ovld101 : 4;
		BIT L1LineLossTrip ZZZZZZZZZZP_E300Ovld101 : 5;
		BIT L2LineLossTrip ZZZZZZZZZZP_E300Ovld101 : 6;
		BIT L3LineLossTrip ZZZZZZZZZZP_E300Ovld101 : 7;
		INT CurrentWarningStatus (Description := "Current Warning Status - Parameter 10",
		                         Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld111 (Hidden := 1);
		BIT OverloadWarning ZZZZZZZZZZP_E300Ovld111 : 0;
		BIT GroundFaultCurrentWarning ZZZZZZZZZZP_E300Ovld111 : 1;
		BIT JamWarning ZZZZZZZZZZP_E300Ovld111 : 2;
		BIT UnderloadWarning ZZZZZZZZZZP_E300Ovld111 : 3;
		BIT CurrentImbalanceWarning ZZZZZZZZZZP_E300Ovld111 : 4;
		BIT L1UnderCurrentWarning ZZZZZZZZZZP_E300Ovld111 : 5;
		BIT L2UnderCurrentWarning ZZZZZZZZZZP_E300Ovld111 : 6;
		BIT L3UnderCurrentWarning ZZZZZZZZZZP_E300Ovld111 : 7;
		SINT ZZZZZZZZZZP_E300Ovld120 (Hidden := 1);
		BIT L1OverCurrentWarning ZZZZZZZZZZP_E300Ovld120 : 0;
		BIT L2OverCurrentWarning ZZZZZZZZZZP_E300Ovld120 : 1;
		BIT L3OverCurrentWarning ZZZZZZZZZZP_E300Ovld120 : 2;
		BIT L1LineLossWarning ZZZZZZZZZZP_E300Ovld120 : 3;
		BIT L2LineLossWarning ZZZZZZZZZZP_E300Ovld120 : 4;
		BIT L3LineLossWarning ZZZZZZZZZZP_E300Ovld120 : 5;
		INT VoltageTripStatus (Description := "Voltage Trip Status - Parameter 5",
		                      Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld128 (Hidden := 1);
		BIT UnderVoltageTrip ZZZZZZZZZZP_E300Ovld128 : 0;
		BIT OverVoltageTrip ZZZZZZZZZZP_E300Ovld128 : 1;
		BIT VoltageImbalanceTrip ZZZZZZZZZZP_E300Ovld128 : 2;
		BIT PhaseRotationMismatchTrip ZZZZZZZZZZP_E300Ovld128 : 3;
		BIT UnderFrequencyTrip ZZZZZZZZZZP_E300Ovld128 : 4;
		BIT OverFrequencyTrip ZZZZZZZZZZP_E300Ovld128 : 5;
		INT VoltageWarningStatus (Description := "Voltage Warning Status - Parameter 11",
		                         Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld136 (Hidden := 1);
		BIT UnderVoltageWarning ZZZZZZZZZZP_E300Ovld136 : 0;
		BIT OverVoltageWarning ZZZZZZZZZZP_E300Ovld136 : 1;
		BIT VoltageUnbalWarning ZZZZZZZZZZP_E300Ovld136 : 2;
		BIT PhaseRotationMismatchWarning ZZZZZZZZZZP_E300Ovld136 : 3;
		BIT UnderFrequencyWarning ZZZZZZZZZZP_E300Ovld136 : 4;
		BIT OverFrequencyWarning ZZZZZZZZZZP_E300Ovld136 : 5;
		INT PowerTripStatus (Description := "Power Trip Status - Parameter 6",
		                    Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld144 (Hidden := 1);
		BIT UnderRealPowerTrip ZZZZZZZZZZP_E300Ovld144 : 0;
		BIT OverRealPowerTrip ZZZZZZZZZZP_E300Ovld144 : 1;
		BIT UnderReactivePowerConsumedTrip ZZZZZZZZZZP_E300Ovld144 : 2;
		BIT OverReactivePowerConsumedTrip ZZZZZZZZZZP_E300Ovld144 : 3;
		BIT UnderReactivePowerGeneratedTrip ZZZZZZZZZZP_E300Ovld144 : 4;
		BIT OverReactivePowerGeneratedTrip ZZZZZZZZZZP_E300Ovld144 : 5;
		BIT UnderApparentPowerTrip ZZZZZZZZZZP_E300Ovld144 : 6;
		BIT OverApparentPowerTrip ZZZZZZZZZZP_E300Ovld144 : 7;
		SINT ZZZZZZZZZZP_E300Ovld153 (Hidden := 1);
		BIT UnderPowerFactorLaggingTrip ZZZZZZZZZZP_E300Ovld153 : 0;
		BIT OverPowerFactorLaggingTrip ZZZZZZZZZZP_E300Ovld153 : 1;
		BIT UnderPowerFactorLeadingTrip ZZZZZZZZZZP_E300Ovld153 : 2;
		BIT OverPowerFactorLeadingTrip ZZZZZZZZZZP_E300Ovld153 : 3;
		INT PowerWarningStatus (Description := "Power Warning Status - Parameter 12",
		                       Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld159 (Hidden := 1);
		BIT UnderRealPowerWarning ZZZZZZZZZZP_E300Ovld159 : 0;
		BIT OverRealPowerWarning ZZZZZZZZZZP_E300Ovld159 : 1;
		BIT UnderReactivePowerConsumedWarning ZZZZZZZZZZP_E300Ovld159 : 2;
		BIT OverReactivePowerConsumedWarning ZZZZZZZZZZP_E300Ovld159 : 3;
		BIT UnderReactivePowerGeneratedWarning ZZZZZZZZZZP_E300Ovld159 : 4;
		BIT OverReactivePowerGeneratedWarning ZZZZZZZZZZP_E300Ovld159 : 5;
		BIT UnderApparentPowerWarning ZZZZZZZZZZP_E300Ovld159 : 6;
		BIT OverApparentPowerWarning ZZZZZZZZZZP_E300Ovld159 : 7;
		SINT ZZZZZZZZZZP_E300Ovld168 (Hidden := 1);
		BIT UnderPowerFactorLaggingWarning ZZZZZZZZZZP_E300Ovld168 : 0;
		BIT OverPowerFactorLaggingWarning ZZZZZZZZZZP_E300Ovld168 : 1;
		BIT UnderPowerFactorLeadingWarning ZZZZZZZZZZP_E300Ovld168 : 2;
		BIT OverPowerFactorLeadingWarning ZZZZZZZZZZP_E300Ovld168 : 3;
		INT ControlTripStatus (Description := "Control Trip Status - Parameter 7",
		                      Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld174 (Hidden := 1);
		BIT TestTrip ZZZZZZZZZZP_E300Ovld174 : 0;
		BIT PTCTrip ZZZZZZZZZZP_E300Ovld174 : 1;
		BIT DeviceLogixTrip ZZZZZZZZZZP_E300Ovld174 : 2;
		BIT OperatorStationTrip ZZZZZZZZZZP_E300Ovld174 : 3;
		BIT RemoteTrip ZZZZZZZZZZP_E300Ovld174 : 4;
		BIT BlockedStartTrip ZZZZZZZZZZP_E300Ovld174 : 5;
		BIT HardwareFaultTrip ZZZZZZZZZZP_E300Ovld174 : 6;
		BIT ConfigurationTrip ZZZZZZZZZZP_E300Ovld174 : 7;
		SINT ZZZZZZZZZZP_E300Ovld183 (Hidden := 1);
		BIT ModuleMismatchTrip ZZZZZZZZZZP_E300Ovld183 : 0;
		BIT DeviceLogixFBTimeoutTrip ZZZZZZZZZZP_E300Ovld183 : 1;
		BIT ExpansionBusTrip ZZZZZZZZZZP_E300Ovld183 : 2;
		BIT NVMErrorTrip ZZZZZZZZZZP_E300Ovld183 : 3;
		INT ControlWarningStatus (Description := "Control Warning Status - Parameter 13",
		                         Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld189 (Hidden := 1);
		BIT PTCWarn ZZZZZZZZZZP_E300Ovld189 : 0;
		BIT DeviceLogixWarning ZZZZZZZZZZP_E300Ovld189 : 1;
		BIT ModuleMismatchWarning ZZZZZZZZZZP_E300Ovld189 : 2;
		BIT DeviceLogixFBTimeoutWarning ZZZZZZZZZZP_E300Ovld189 : 3;
		BIT ExpansionBusWarning ZZZZZZZZZZP_E300Ovld189 : 4;
		BIT NumberOfStartsWarning ZZZZZZZZZZP_E300Ovld189 : 5;
		BIT OperatingHoursWarning ZZZZZZZZZZP_E300Ovld189 : 6;
		INT AnalogTripStatus (Description := "Analog Trip Status - Parameter 8",
		                     Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld198 (Hidden := 1);
		BIT Analog1Pt00Trip ZZZZZZZZZZP_E300Ovld198 : 0;
		BIT Analog1Pt01Trip ZZZZZZZZZZP_E300Ovld198 : 1;
		BIT Analog1Pt02Trip ZZZZZZZZZZP_E300Ovld198 : 2;
		BIT Analog2Pt00Trip ZZZZZZZZZZP_E300Ovld198 : 3;
		BIT Analog2Pt01Trip ZZZZZZZZZZP_E300Ovld198 : 4;
		BIT Analog2Pt02Trip ZZZZZZZZZZP_E300Ovld198 : 5;
		BIT Analog3Pt00Trip ZZZZZZZZZZP_E300Ovld198 : 6;
		BIT Analog3Pt01Trip ZZZZZZZZZZP_E300Ovld198 : 7;
		SINT ZZZZZZZZZZP_E300Ovld207 (Hidden := 1);
		BIT Analog3Pt02Trip ZZZZZZZZZZP_E300Ovld207 : 0;
		BIT Analog4Pt00Trip ZZZZZZZZZZP_E300Ovld207 : 1;
		BIT Analog4Pt01Trip ZZZZZZZZZZP_E300Ovld207 : 2;
		BIT Analog4Pt02Trip ZZZZZZZZZZP_E300Ovld207 : 3;
		INT AnalogWarningStatus (Description := "Analog Warning Status - Parameter 14",
		                        Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld213 (Hidden := 1);
		BIT Analog1Pt00Warning ZZZZZZZZZZP_E300Ovld213 : 0;
		BIT Analog1Pt01Warning ZZZZZZZZZZP_E300Ovld213 : 1;
		BIT Analog1Pt02Warning ZZZZZZZZZZP_E300Ovld213 : 2;
		BIT Analog2Pt00Warning ZZZZZZZZZZP_E300Ovld213 : 3;
		BIT Analog2Pt01Warning ZZZZZZZZZZP_E300Ovld213 : 4;
		BIT Analog2Pt02Warning ZZZZZZZZZZP_E300Ovld213 : 5;
		BIT Analog3Pt00Warning ZZZZZZZZZZP_E300Ovld213 : 6;
		BIT Analog3Pt01Warning ZZZZZZZZZZP_E300Ovld213 : 7;
		SINT ZZZZZZZZZZP_E300Ovld222 (Hidden := 1);
		BIT Analog3Pt02Warning ZZZZZZZZZZP_E300Ovld222 : 0;
		BIT Analog4Pt00Warning ZZZZZZZZZZP_E300Ovld222 : 1;
		BIT Analog4Pt01Warning ZZZZZZZZZZP_E300Ovld222 : 2;
		BIT Analog4Pt02Warning ZZZZZZZZZZP_E300Ovld222 : 3;
		SINT PercentTCU (Description := "Percent Thermal Capacity Utilized (%) - Parameter 1");
		SINT CurrentImbalance (Description := "Current Imbalance (%) - Parameter 52");
		INT AvgPercentFLA (Description := "Average Percent Full Load Amps (%*10) - Parameter 50");
		DINT AvgCurrent (Description := "Average (L1, L2, L3) Current (A*100) - Parameter 46");
		DINT L1Current (Description := "L1 Current (A*100) - Parameter 43");
		DINT L2Current (Description := "L2 Current (A*100) - Parameter 44");
		DINT L3Current (Description := "L3 Current (A*100) - Parameter 45");
		INT GroundFaultCurrent (Description := "Ground Fault Current (A*100) - Parameter 51");
		INT AvgLLVoltage (Description := "Average Line to Line Voltage (V*10) - Parameter 56");
		INT L1L2Voltage (Description := "L1 to L2 Voltage (V*10) - Parameter 53");
		INT L2L3Voltage (Description := "L2 to L3 Voltage (V*10) - Parameter 54");
		INT L3L1Voltage (Description := "L3 to L1 Voltage (V*10) - Parameter 55");
		DINT TotalRealPower (Description := "Total Real Power (kW*1000) - Parameter 67");
		DINT TotalReactivePower (Description := "Total Reactive Power (kVAR*1000) - Parameter 71");
		DINT TotalApparentPower (Description := "Total Apparent Power (kVA*1000) - Parameter 75");
		INT PowerFactor (Description := "Total Power Factor (%*10) - Parameter 79");
		DINT TimeToReset (Description := "Time Until Trip Can Be Reset (s) - Parameter 3");
		DINT TimeToStart (Description := "Time Until Motor Can Be Started (s) - Parameter 31");
		DINT TripHistory0 (Description := "Most Recent Trip Cause (enum) - Parameter 127");
		DINT WarningHistory0 (Description := "Most Recent Warning Cause (enum) - Parameter 133");
		DINT InvalidConfigParam (Description := "Number of Invalid Configuration Parameter - Parameter 38");
		DINT UserDefinedData[3];
		INT PtDeviceOutputs (Description := "DeviceLogix Output States - Parameter 348",
		                    Radix := Binary);
		SINT ZZZZZZZZZZP_E300Ovld250 (Hidden := 1);
		BIT Pt00DeviceOut ZZZZZZZZZZP_E300Ovld250 : 0;
		BIT Pt01DeviceOut ZZZZZZZZZZP_E300Ovld250 : 1;
		BIT Pt02DeviceOut ZZZZZZZZZZP_E300Ovld250 : 2;
		BIT Pt03DeviceOut ZZZZZZZZZZP_E300Ovld250 : 3;
		BIT Pt04DeviceOut ZZZZZZZZZZP_E300Ovld250 : 4;
		BIT Pt05DeviceOut ZZZZZZZZZZP_E300Ovld250 : 5;
		BIT Pt06DeviceOut ZZZZZZZZZZP_E300Ovld250 : 6;
		BIT Pt07DeviceOut ZZZZZZZZZZP_E300Ovld250 : 7;
		SINT ZZZZZZZZZZP_E300Ovld259 (Hidden := 1);
		BIT Pt08DeviceOut ZZZZZZZZZZP_E300Ovld259 : 0;
		BIT Pt09DeviceOut ZZZZZZZZZZP_E300Ovld259 : 1;
		BIT Pt10DeviceOut ZZZZZZZZZZP_E300Ovld259 : 2;
		BIT Pt11DeviceOut ZZZZZZZZZZP_E300Ovld259 : 3;
		BIT Pt12DeviceOut ZZZZZZZZZZP_E300Ovld259 : 4;
		BIT Pt13DeviceOut ZZZZZZZZZZP_E300Ovld259 : 5;
		BIT Pt14DeviceOut ZZZZZZZZZZP_E300Ovld259 : 6;
		BIT Pt15DeviceOut ZZZZZZZZZZP_E300Ovld259 : 7;
		INT Analog1Pt00Data (Description := "Analog Input Module 1 Channel 00 (0-65535 counts) - Parameter 111");
		INT Analog1Pt01Data (Description := "Analog Input Module 1 Channel 01 (0-65535 counts) - Parameter 112");
		INT Analog1Pt02Data (Description := "Analog Input Module 1 Channel 02 (0-65535 counts) - Parameter 113");
		INT Analog2Pt00Data (Description := "Analog Input Module 2 Channel 00 (0-65535 counts) - Parameter 114");
		INT Analog2Pt01Data (Description := "Analog Input Module 2 Channel 01 (0-65535 counts) - Parameter 115");
		INT Analog2Pt02Data (Description := "Analog Input Module 2 Channel 02 (0-65535 counts) - Parameter 116");
		INT Analog3Pt00Data (Description := "Analog Input Module 3 Channel 00 (0-65535 counts) - Parameter 117");
		INT Analog3Pt01Data (Description := "Analog Input Module 3 Channel 01 (0-65535 counts) - Parameter 118");
		INT Analog3Pt02Data (Description := "Analog Input Module 3 Channel 02 (0-65535 counts) - Parameter 119");
		INT Analog4Pt00Data (Description := "Analog Input Module 4 Channel 00 (0-65535 counts) - Parameter 120");
		INT Analog4Pt01Data (Description := "Analog Input Module 4 Channel 01 (0-65535 counts) - Parameter 121");
		INT Analog4Pt02Data (Description := "Analog Input Module 4 Channel 02 (0-65535 counts) - Parameter 122");
	END_DATATYPE

	DATATYPE STRING_12 (FamilyType := StringFamily)
		DINT LEN;
		SINT DATA[12] (Radix := ASCII);
	END_DATATYPE

	DATATYPE STRING_16 (FamilyType := StringFamily)
		DINT LEN;
		SINT DATA[16] (Radix := ASCII);
	END_DATATYPE

	DATATYPE STRING_20 (FamilyType := StringFamily)
		DINT LEN;
		SINT DATA[20] (Radix := ASCII);
	END_DATATYPE

	DATATYPE STRING_40 (FamilyType := StringFamily)
		DINT LEN;
		SINT DATA[40] (Radix := ASCII);
	END_DATATYPE

	MODULE Local (Parent := "Local",
	              ParentModPortId := 1,
	              CatalogNumber := "1768-L45",
	              Vendor := 1,
	              ProductType := 14,
	              ProductCode := 74,
	              Major := 20,
	              Minor := 19,
	              ChassisSize := 31,
	              Slot := 0,
	              Mode := 2#0000_0000_0000_0001,
	              CompatibleModule := 0,
	              KeyMask := 2#0000_0000_0001_1111)
	END_MODULE

	MODULE Ethernet (Parent := "Local",
	                 ParentModPortId := 1,
	                 CatalogNumber := "1768-ENBT/A",
	                 Vendor := 1,
	                 ProductType := 12,
	                 ProductCode := 151,
	                 Major := 4,
	                 Minor := 5,
	                 Slot := 1,
	                 NodeAddress := "192.168.1.200",
	                 Mode := 2#0000_0000_0000_0000,
	                 CompatibleModule := 1,
	                 KeyMask := 2#0000_0000_0001_1111)
	END_MODULE

	MODULE PF_525_VFD_1 (Parent := "Ethernet",
	                     ParentModPortId := 2,
	                     CatalogNumber := "PowerFlex 525-EENET",
	                     Vendor := 1,
	                     ProductType := 150,
	                     ProductCode := 9,
	                     Major := 5,
	                     Minor := 1,
	                     PortLabel := "ENet",
	                     Slot := 0,
	                     NodeAddress := "192.168.1.40",
	                     CommMethod := 536870913,
	                     Mode := 2#0000_0000_0000_0100,
	                     CompatibleModule := 1,
	                     KeyMask := 2#0000_0000_0001_1111,
	                     DrivesADCMode := 1,
	                     DrivesADCEnabled := 0)
			ExtendedProp := [[[___<public><OutputDataTag>&lt;DataType Name=$QAB:PowerFlex525V_EENET_Drive:O:0$Q Class=$QIO$Q&gt;&lt;Members&gt;&lt;Member Name=$QLogicCommand$Q DataType=$QINT$Q Radix=$QBinary$Q /&gt;&lt;Member Name=$QStop$Q DataType=$QBIT$Q BitNumber=$Q0$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStart$Q DataType=$QBIT$Q BitNumber=$Q1$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QJog$Q DataType=$QBIT$Q BitNumber=$Q2$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QClearFaults$Q DataType=$QBIT$Q BitNumber=$Q3$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QForward$Q DataType=$QBIT$Q BitNumber=$Q4$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QReverse$Q DataType=$QBIT$Q BitNumber=$Q5$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QForceKeypadCtrl$Q DataType=$QBIT$Q BitNumber=$Q6$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QMOPIncrement$Q DataType=$QBIT$Q BitNumber=$Q7$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QAccelRate1$Q DataType=$QBIT$Q BitNumber=$Q8$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QAccelRate2$Q DataType=$QBIT$Q BitNumber=$Q9$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDecelRate1$Q DataType=$QBIT$Q BitNumber=$Q10$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDecelRate2$Q DataType=$QBIT$Q BitNumber=$Q11$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QFreqSel01$Q DataType=$QBIT$Q BitNumber=$Q12$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QFreqSel02$Q DataType=$QBIT$Q BitNumber=$Q13$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QFreqSel03$Q DataType=$QBIT$Q BitNumber=$Q14$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QMOPDecrement$Q DataType=$QBIT$Q BitNumber=$Q15$Q Target=$QLogicCommand$Q&gt;&lt;/Member&gt;&lt;Member Name=$QFreqCommand$Q DataType=$QINT$Q Radix=$QDecimal$Q /&gt;&lt;/Members&gt;&lt;/DataType&gt;</OutputDataTag><ConnectedCommModule>0</ConnectedCommModule><PrimaryModulePort>0</PrimaryModulePort><ConfigCode>200</ConfigCode><LgxVersion>20</LgxVersion><ConfigID>115</ConfigID><InputDataTag>&lt;DataType Name=$QAB:PowerFlex525V_E_D4D3A5A1:I:0$Q Class=$QIO$Q&gt;&lt;Members&gt;&lt;Member Name=$Qpad$Q DataType=$QDINT$Q Hidden=$Q1$Q /&gt;&lt;Member Name=$QDriveStatus$Q DataType=$QINT$Q Radix=$QBinary$Q /&gt;&lt;Member Name=$QReady$Q DataType=$QBIT$Q BitNumber=$Q0$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QActive$Q DataType=$QBIT$Q BitNumber=$Q1$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QCommandDir$Q DataType=$QBIT$Q BitNumber=$Q2$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QActualDir$Q DataType=$QBIT$Q BitNumber=$Q3$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QAccelerating$Q DataType=$QBIT$Q BitNumber=$Q4$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDecelerating$Q DataType=$QBIT$Q BitNumber=$Q5$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QFaulted$Q DataType=$QBIT$Q BitNumber=$Q7$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QAtReference$Q DataType=$QBIT$Q BitNumber=$Q8$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QCommFreqCnt$Q DataType=$QBIT$Q BitNumber=$Q9$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QCommLogicCnt$Q DataType=$QBIT$Q BitNumber=$Q10$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QParmsLocked$Q DataType=$QBIT$Q BitNumber=$Q11$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDigIn1Active$Q DataType=$QBIT$Q BitNumber=$Q12$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDigIn2Active$Q DataType=$QBIT$Q BitNumber=$Q13$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDigIn3Active$Q DataType=$QBIT$Q BitNumber=$Q14$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDigIn4Active$Q DataType=$QBIT$Q BitNumber=$Q15$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QOutputFreq$Q DataType=$QINT$Q Radix=$QDecimal$Q /&gt;&lt;Member Name=$QOutputCurrent$Q DataType=$QINT$Q Radix=$QDecimal$Q /&gt;&lt;Member Name=$QDigInStatus$Q DataType=$QINT$Q Radix=$QBinary$Q /&gt;&lt;Member Name=$QDigInStatus_DigInTBlk5$Q DataType=$QBIT$Q BitNumber=$Q0$Q Target=$QDigInStatus$Q /&gt;&lt;Member Name=$QDigInStatus_DigInTBlk6$Q DataType=$QBIT$Q BitNumber=$Q1$Q Target=$QDigInStatus$Q /&gt;&lt;Member Name=$QDigInStatus_DigInTBlk7$Q DataType=$QBIT$Q BitNumber=$Q2$Q Target=$QDigInStatus$Q /&gt;&lt;Member Name=$QDigInStatus_DigInTBlk8$Q DataType=$QBIT$Q BitNumber=$Q3$Q Target=$QDigInStatus$Q /&gt;&lt;Member Name=$QDriveStatus_param$Q DataType=$QINT$Q Radix=$QBinary$Q /&gt;&lt;Member Name=$QDriveStatus_param_Running$Q DataType=$QBIT$Q BitNumber=$Q0$Q Target=$QDriveStatus_param$Q /&gt;&lt;Member Name=$QDriveStatus_param_Forward$Q DataType=$QBIT$Q BitNumber=$Q1$Q Target=$QDriveStatus_param$Q /&gt;&lt;Member Name=$QDriveStatus_param_Accelerating$Q DataType=$QBIT$Q BitNumber=$Q2$Q Target=$QDriveStatus_param$Q /&gt;&lt;Member Name=$QDriveStatus_param_Decelerating$Q DataType=$QBIT$Q BitNumber=$Q3$Q Target=$QDriveStatus_param$Q /&gt;&lt;Member Name=$QDriveStatus_param_SafetyActive$Q DataType=$QBIT$Q BitNumber=$Q4$Q Target=$QDriveStatus_param$Q /&gt;&lt;Member Name=$QFault1Code$Q DataType=$QINT$Q Radix=$QDecimal$Q /&gt;&lt;/Members&gt;&lt;/DataType&gt;</InputDataTag></public>___]]]
			ConfigData := [62,0,6,0,1,0,200,0,0,0,0,0,3,14,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			ConfigScript (Size := 2952) := [-124,11,0,0,4,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,8,-106,0,0,0,1,0,0,0,1,0,0,0,8,0,0,0,75,2,32,-110,36,0,-1,-1,0,0,0,-47,10,0,0,8,20,0,0,0,1,0,0,0
		,1,0,0,0,9,0,0,0,16,3,32,-109,36,0,48,2,3,1,0,0,0,10,0,0,0,16,3,32,-109,36,33,48,9,21,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,34,48,9,14,0,1
		,0,0,0,10,0,0,0,16,3,32,-109,36,36,48,9,-67,6,1,0,0,0,10,0,0,0,16,3,32,-109,36,44,48,9,40,35,1,0,0,0,10,0,0,0,16,3,32,-109,36,46,48
		,9,5,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,47,48,9,15,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,105,48,9,1,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-128
		,48,9,1,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-127,48,9,-64,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-126,48,9,-88,0,1,0,0,0,10,0,0,0,16,3,32
		,-109,36,-125,48,9,1,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-124,48,9,40,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-123,48,9,-1,0,1,0,0,0,10
		,0,0,0,16,3,32,-109,36,-122,48,9,-1,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-121,48,9,-1,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-99,48,9,3
		,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-98,48,9,14,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-97,48,9,6,0,1,0,0,0,10,0,0,0,16,3,32,-109,36,-96
		,48,9,7,0,1,0,0,0,12,0,0,0,16,4,32,-109,37,0,-70,1,48,9,-12,1,1,0,0,0,12,0,0,0,16,4,32,-109,37,0,-69,1,48,9,-56,0,1,0,0,0,12,0,0,0,16,4
		,32,-109,37,0,-28,1,48,9,-67,0,1,0,0,0,12,0,0,0,16,4,32,-109,37,0,-16,1,48,9,124,2,1,0,0,0,12,0,0,0,16,4,32,-109,37,0,-15,1,48,9,-1
		,0,1,0,0,0,12,0,0,0,16,4,32,-109,37,0,-14,1,48,9,-72,11,1,0,0,0,12,0,0,0,16,4,32,-109,37,0,-12,1,48,9,-127,5,1,0,0,0,33,0,0,0,16,3,32
		,-99,36,1,48,1,-127,0,99,42,0,18,1,1,0,1,0,12,0,67,117,115,116,111,109,32,71,114,111,117,112,1,0,0,0,14,0,0,0,16,4,32,-108,37
		,0,18,1,48,7,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,8,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,9,0,0,0,0,1,0,0,0,14,0,0
		,0,16,4,32,-108,37,0,18,1,48,10,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,11,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48
		,12,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,13,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,14,0,0,0,0,1,0,0,0,14,0,0,0,16
		,4,32,-108,37,0,18,1,48,15,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,16,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,17
		,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,18,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,19,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32
		,-108,37,0,18,1,48,20,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,21,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,22,0,0,0
		,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,23,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,24,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108
		,37,0,18,1,48,25,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,26,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,27,0,0,0,0,1,0,0
		,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,28,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,29,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37
		,0,18,1,48,30,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,31,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,32,0,0,0,0,1,0,0,0,14
		,0,0,0,16,4,32,-108,37,0,18,1,48,33,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,34,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18
		,1,48,35,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,36,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,37,0,0,0,0,1,0,0,0,14,0,0
		,0,16,4,32,-108,37,0,18,1,48,38,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,39,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48
		,40,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,41,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,42,0,0,0,0,1,0,0,0,14,0,0,0,16
		,4,32,-108,37,0,18,1,48,43,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,44,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,45
		,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,46,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,47,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32
		,-108,37,0,18,1,48,48,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,49,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,50,0,0,0
		,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,51,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,52,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108
		,37,0,18,1,48,53,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,54,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,55,0,0,0,0,1,0,0
		,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,56,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,57,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37
		,0,18,1,48,58,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,59,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,60,0,0,0,0,1,0,0,0,14
		,0,0,0,16,4,32,-108,37,0,18,1,48,61,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,62,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18
		,1,48,63,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,64,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,65,0,0,0,0,1,0,0,0,14,0,0
		,0,16,4,32,-108,37,0,18,1,48,66,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,67,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48
		,68,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,69,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,70,0,0,0,0,1,0,0,0,14,0,0,0,16
		,4,32,-108,37,0,18,1,48,71,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,72,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,73
		,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,74,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,75,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32
		,-108,37,0,18,1,48,76,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,77,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,78,0,0,0
		,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,79,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,80,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108
		,37,0,18,1,48,81,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,82,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,83,0,0,0,0,1,0,0
		,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,84,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,85,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37
		,0,18,1,48,86,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,87,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,88,0,0,0,0,1,0,0,0,14
		,0,0,0,16,4,32,-108,37,0,18,1,48,89,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,90,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18
		,1,48,91,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,92,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,93,0,0,0,0,1,0,0,0,14,0,0
		,0,16,4,32,-108,37,0,18,1,48,94,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,95,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48
		,96,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,97,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,98,0,0,0,0,1,0,0,0,14,0,0,0,16
		,4,32,-108,37,0,18,1,48,99,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,100,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,101
		,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,102,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,103,0,0,0,0,1,0,0,0,14,0,0,0,16
		,4,32,-108,37,0,18,1,48,104,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48,105,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-108,37,0,18,1,48
		,106,0,0,0,0,1,0,0,0,12,0,0,0,16,3,32,-110,36,0,48,31,1,0,0,0,0,0,0,45,0,0,0,8,100,0,0,0,1,0,0,0,6,0,0,0,24,0,0,0,16,3,32,-110,36,0,48,38,-91
		,24,114,19,-96,26,29,73,-80,-37,-85,123,-74,100,23,-71,64,0,0,0,0,0,0,34,0,0,0,8,61,0,0,0,1,0,0,0,1,0,0,0,9,0,0,0,16,3,32,-105,36
		,0,48,3,3,3,0,0,0,-56,-81,0,0,0,0,29,0,0,0,0,100,0,0,0,2,0,0,0,-128,0,0,0,-91,24,114,19,-96,26,29,73,-80,-37,-85,123,-74,100,23
		,-71,0,0,0];
			CONNECTION Standard (Rate := 20000,
			                     InputCxnPoint := 1,
			                     InputSize := 16,
			                     OutputCxnPoint := 2,
			                     OutputSize := 4,
			                     EventID := 0,
			                     Unicast := Yes)
					InputData  := [0,0,0,0,0,0,0];
					InputForceData := [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
					OutputData  := [5392,6000];
					OutputForceData := [16,21,112,23,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE PF755_VFD_1 (Parent := "Ethernet",
	                    ParentModPortId := 2,
	                    CatalogNumber := "PowerFlex 755-EENET",
	                    Vendor := 1,
	                    ProductType := 143,
	                    ProductCode := 2192,
	                    Major := 13,
	                    Minor := 3,
	                    PortLabel := "ENet",
	                    Slot := 0,
	                    NodeAddress := "192.168.1.50",
	                    CommMethod := 536870913,
	                    Mode := 2#0000_0000_0000_0100,
	                    CompatibleModule := 1,
	                    KeyMask := 2#0000_0000_0001_1111,
	                    DrivesADCMode := 1,
	                    DrivesADCEnabled := 0)
			ExtendedProp := [[[___<public><AOPVersion>40701000</AOPVersion><DriveConfigCode>8</DriveConfigCode><PromptImport>0</PromptImport><CommModulePort>13</CommModulePort><LgxVersion>20</LgxVersion><UsingNAT>0</UsingNAT><CommModuleMajorRev>1</CommModuleMajorRev><CommModuleMinorRev>1</CommModuleMinorRev><Port0HLP_Size>0</Port0HLP_Size><Port0Type>PowerFlex 755</Port0Type><IO_XML_INPUT>&lt;DataTypes&gt;&lt;DataType Name=$QAB:PowerFlex755_E_A82F55E3:I:0$Q Class=$QIO$Q&gt;&lt;Members&gt;&lt;Member Name=$Qpad$Q DataType=$QDINT$Q Hidden=$Q1$Q/&gt;&lt;Member Name=$QDriveStatus$Q DataType=$QDINT$Q Radix=$QBinary$Q/&gt;&lt;Member Name=$QDriveStatus_Ready$Q DataType=$QBIT$Q BitNumber=$Q0$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Active$Q DataType=$QBIT$Q BitNumber=$Q1$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_CommandDir$Q DataType=$QBIT$Q BitNumber=$Q2$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_ActualDir$Q DataType=$QBIT$Q BitNumber=$Q3$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Accelerating$Q DataType=$QBIT$Q BitNumber=$Q4$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Decelerating$Q DataType=$QBIT$Q BitNumber=$Q5$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Alarm$Q DataType=$QBIT$Q BitNumber=$Q6$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Faulted$Q DataType=$QBIT$Q BitNumber=$Q7$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_AtSpeed$Q DataType=$QBIT$Q BitNumber=$Q8$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Manual$Q DataType=$QBIT$Q BitNumber=$Q9$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_SpdRefBit0$Q DataType=$QBIT$Q BitNumber=$Q10$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_SpdRefBit1$Q DataType=$QBIT$Q BitNumber=$Q11$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_SpdRefBit2$Q DataType=$QBIT$Q BitNumber=$Q12$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_SpdRefBit3$Q DataType=$QBIT$Q BitNumber=$Q13$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_SpdRefBit4$Q DataType=$QBIT$Q BitNumber=$Q14$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Running$Q DataType=$QBIT$Q BitNumber=$Q16$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Jogging$Q DataType=$QBIT$Q BitNumber=$Q17$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Stopping$Q DataType=$QBIT$Q BitNumber=$Q18$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_DCBraking$Q DataType=$QBIT$Q BitNumber=$Q19$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_DBActive$Q DataType=$QBIT$Q BitNumber=$Q20$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_SpeedMode$Q DataType=$QBIT$Q BitNumber=$Q21$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_PositionMode$Q DataType=$QBIT$Q BitNumber=$Q22$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_TorqueMode$Q DataType=$QBIT$Q BitNumber=$Q23$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_AtZeroSpeed$Q DataType=$QBIT$Q BitNumber=$Q24$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_AtHome$Q DataType=$QBIT$Q BitNumber=$Q25$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_AtLimit$Q DataType=$QBIT$Q BitNumber=$Q26$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_CurrLimit$Q DataType=$QBIT$Q BitNumber=$Q27$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_BusFrqReg$Q DataType=$QBIT$Q BitNumber=$Q28$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_EnableOn$Q DataType=$QBIT$Q BitNumber=$Q29$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_MotorOL$Q DataType=$QBIT$Q BitNumber=$Q30$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QDriveStatus_Regen$Q DataType=$QBIT$Q BitNumber=$Q31$Q Target=$QDriveStatus$Q&gt;&lt;/Member&gt;&lt;Member Name=$QFeedback$Q DataType=$QREAL$Q Radix=$QDecimal$Q/&gt;&lt;Member Name=$QOutputCurrent$Q DataType=$QREAL$Q Radix=$QDecimal$Q/&gt;&lt;Member Name=$QTorqueCurFdbk$Q DataType=$QREAL$Q Radix=$QDecimal$Q/&gt;&lt;Member Name=$QDigitalInSts$Q DataType=$QDINT$Q Radix=$QBinary$Q/&gt;&lt;Member Name=$QDigitalInSts_DigitalIn0$Q DataType=$QBIT$Q BitNumber=$Q0$Q Target=$QDigitalInSts$Q&gt;&lt;/Member&gt;&lt;Member Name=$QLastFaultCode$Q DataType=$QDINT$Q Radix=$QDecimal$Q/&gt;&lt;Member Name=$QStartInhibits$Q DataType=$QDINT$Q Radix=$QBinary$Q/&gt;&lt;Member Name=$QStartInhibits_Faulted$Q DataType=$QBIT$Q BitNumber=$Q0$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_Alarm$Q DataType=$QBIT$Q BitNumber=$Q1$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_Enable$Q DataType=$QBIT$Q BitNumber=$Q2$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_Precharge$Q DataType=$QBIT$Q BitNumber=$Q3$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_Stop$Q DataType=$QBIT$Q BitNumber=$Q4$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_Database$Q DataType=$QBIT$Q BitNumber=$Q5$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_Startup$Q DataType=$QBIT$Q BitNumber=$Q6$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_Safety$Q DataType=$QBIT$Q BitNumber=$Q7$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_Sleep$Q DataType=$QBIT$Q BitNumber=$Q8$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_Profiler$Q DataType=$QBIT$Q BitNumber=$Q9$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;Member Name=$QStartInhibits_CommutNotCfg$Q DataType=$QBIT$Q BitNumber=$Q10$Q Target=$QStartInhibits$Q&gt;&lt;/Member&gt;&lt;/Members&gt;&lt;/DataType&gt;&lt;/DataTypes&gt;</IO_XML_INPUT><IO_XML_OUTPUT/><DriveRatingCode>1107296476</DriveRatingCode><DriveRatingOptions>1</DriveRatingOptions><ConfigID>115</ConfigID><Port0DeviceDefinition>0002000000900000000800010000000000010001030D    0002030D01010002000100000000420000DC00000001</Port0DeviceDefinition><Port0CCV>0</Port0CCV><Port0CCVInfo>1,0,0,0,0,0,0,0,0,</Port0CCVInfo></public>___]]]
			ConfigData := [360,0,6,0,1,0,220,16896,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,5,0,220,0,951,0,933,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			ConfigScript (Size := 2816) := [-4,10,0,0,4,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,8,-106,0,0,0,1,0,0,0,1,0,0,0,8,0,0,0,75,2,32,-110,36,0,-1,-1,0,0,0,73,10,0,0,8,10,0,0,0,1,0,0,0,1,0,0
		,0,74,0,0,0,16,3,32,-98,36,1,48,5,2,0,3,0,0,2,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,3,0,3,44,1,9,4,1,0,0,0,4,2,0,0,0,4,1,0,0,0,0,3,49,1,9,4,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,4,0,47,0,0,5,1,1,0,3,0,0,1,2,0,0,0,1,0,0,2,1,0,0,2,1,0,1,1,2,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,5,0,3,0,0,2,1,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,6,0,1,0,0,31,36,2,0,16,0,80,0,111,0,119,0,101
		,0,114,0,70,0,108,0,101,0,120,0,32,0,55,0,53,0,53,0,32,0,32,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98
		,36,1,48,5,7,0,6,1,0,6,24,7,0,100,0,2,0,8,0,65,0,109,0,112,0,115,0,32,0,32,0,32,0,32,0,0,6,2,0,6,24,11,0,100,0,2,0,8,0,66,0,117,0,115,0,32
		,0,86,0,68,0,67,0,32,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,8,0,6,3,0,6,24,8,0,100,0,2,0,8,0,79,0,117,0,116,0,32,0,86,0,108,0,116
		,0,115,0,0,6,4,0,6,24,9,0,100,0,2,0,8,0,79,0,117,0,116,0,32,0,80,0,119,0,114,0,32,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,9,0,6
		,5,0,6,24,14,0,100,0,2,0,8,0,69,0,108,0,112,0,32,0,107,0,87,0,72,0,114,0,0,6,6,0,6,24,5,0,100,0,2,0,8,0,84,0,114,0,113,0,32,0,67,0,117
		,0,114,0,32,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,10,0,3,70,0,9,4,0,0,0,0,0,3,25,0,9,4,0,0,-26,67,4,51,51,-77,63,4,0,0,112,66
		,4,0,-96,-41,68,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,11,0,3,30,0,9,4,0,0,64,63,0,3,71
		,0,9,4,0,0,72,66,0,3,73,0,9,4,61,10,-17,65,4,0,0,0,0,4,51,51,51,63,4,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98
		,36,1,48,5,12,0,3,77,0,9,4,0,0,0,0,4,0,0,0,0,4,-61,-11,-22,65,0,3,81,0,9,4,0,0,0,0,4,0,0,0,0,0,3,86,0,9,4,102,102,-8,65,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,13,0,3,87,0,9,4,92,-113,14,66,4,123,20,-96,65,4,123,20,-96,65,0,3,93,0,9,4,41
		,92,15,62,0,3,110,0,9,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,14,0,3,120,0,9,4,123,20
		,-96,65,0,3,109,2,9,4,0,0,-106,66,0,3,36,0,9,4,0,0,-26,67,4,0,0,-76,66,4,0,0,-128,64,0,3,43,0,9,4,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
		,0,74,0,0,0,16,3,32,-98,36,1,48,5,15,0,3,44,0,9,4,41,-53,-112,61,0,3,60,0,9,4,92,-113,66,65,4,92,-113,66,65,4,0,0,-26,66,4,0,0,112
		,65,0,3,8,2,9,4,0,-128,59,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,16,0,3,9,2,9,4,0,-128,59,-59,0,3,73
		,1,9,4,0,0,112,66,0,3,119,1,9,4,-35,-124,59,68,0,3,127,1,9,4,-102,-103,-79,65,0,3,-118,1,9,4,0,0,-80,65,0,3,-90,1,9,4,0,0,4,66,0,0
		,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,17,0,3,-89,1,9,4,0,0,4,66,0,3,-76,1,9,4,0,0,-80,65,0,3,-73,1,9,4,0,0,-80,65,0,3,-61,1,9,4,0,0
		,52,67,0,3,-58,1,9,4,0,0,52,67,0,3,-51,1,9,4,0,0,-106,67,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,18,0,3,-45,1,9,4,0,0,-128,64,0
		,3,12,2,9,4,0,0,32,65,4,-113,-62,117,61,0,3,35,2,9,4,0,0,112,66,0,3,40,2,9,4,0,0,112,66,0,3,44,2,9,4,0,0,32,65,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74
		,0,0,0,16,3,32,-98,36,1,48,5,19,0,3,45,2,9,4,0,0,32,65,0,3,52,2,9,4,0,0,112,66,0,3,59,2,9,4,0,0,-96,64,4,0,0,32,65,4,0,0,-96,65,4,0,0,-16
		,65,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,20,0,3,63,2,9,4,0,0,32,66,4,0,0,72,66,4,0,0,72,66,0,3,90,2,9,4
		,0,0,112,66,0,3,94,2,9,4,0,0,112,66,0,3,125,0,9,4,-119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,21,0,3,126
		,0,9,4,3,0,0,0,0,3,124,2,9,4,0,0,32,65,0,3,-122,2,9,4,0,-128,59,69,0,3,-128,0,9,4,-119,0,0,0,4,3,0,0,0,0,3,-120,2,9,4,0,0,32,65,0,0,0,0,0,0
		,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,22,0,3,-33,2,9,4,0,0,-64,64,0,3,17,3,9,4,0,0,-16,65,4,0,0,-16,-63,0,3,56,3,9,4,-102,-103
		,-103,62,0,3,81,4,9,4,-45,-51,107,66,0,3,87,4,9,4,-119,65,0,64,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,23,0,3,3,6,9,4
		,0,0,0,64,4,0,0,32,65,0,3,7,6,9,4,-51,-52,76,63,4,0,0,0,63,4,0,0,48,65,0,3,25,6,9,4,-102,-103,25,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
		,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,24,0,3,26,6,9,4,-113,-62,117,61,0,3,57,6,9,4,0,0,-16,65,4,0,0,-16,-63,0,3,93,6,9,4,0,0,112,66,0
		,3,105,6,9,4,0,0,112,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,25,0,3,26,0,9,4,51,51,-77,63,0,3,28,0,9
		,4,0,-96,-41,68,0,3,30,0,9,4,0,0,64,63,0,3,37,0,9,4,0,0,-76,66,0,3,41,0,9,4,1,0,0,0,0,3,44,0,9,4,41,-53,-112,61,0,0,0,0,0,1,0,0,0,74,0,0,0,16
		,3,32,-98,36,1,48,5,26,0,3,60,0,9,4,92,-113,66,65,4,92,-113,66,65,0,3,70,0,9,4,0,0,0,0,0,3,73,0,9,4,61,10,-17,65,4,0,0,0,0,4,51,51,51
		,63,0,3,79,0,9,4,-61,-11,-22,65,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,27,0,3,87,0,9,4,92,-113,14,66,0,3,93,0,9,4,41
		,92,15,62,0,3,44,1,9,4,1,0,0,0,4,2,0,0,0,4,1,0,0,0,0,3,52,1,9,4,1,0,0,0,0,3,73,1,9,4,0,0,112,66,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,28
		,0,3,8,2,9,4,0,-128,59,69,4,0,-128,59,-59,0,3,33,2,9,4,109,3,0,0,0,3,35,2,9,4,0,0,112,66,0,3,40,2,9,4,0,0,112,66,0,3,52,2,9,4,0,0,112,66
		,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,29,0,3,65,2,9,4,0,0,72,66,0,3,90,2,9,4,0,0,112,66,0,3,94,2,9,4,0,0,112,66,0,3,109
		,2,9,4,0,0,-106,66,0,3,81,4,9,4,-45,-51,107,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,30,0,1,0,0,31,36,2,0,16
		,0,80,0,70,0,55,0,53,0,53,0,95,0,86,0,70,0,68,0,95,0,49,0,32,0,32,0,32,0,32,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0
		,16,3,32,-98,36,1,48,5,31,0,6,1,0,6,24,7,0,100,0,2,0,8,0,65,0,109,0,112,0,115,0,32,0,32,0,32,0,32,0,0,6,2,0,6,24,11,0,100,0,2,0,8,0,66,0
		,117,0,115,0,32,0,86,0,68,0,67,0,32,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-98,36,1,48,5,32,0,6,3,0,6,24,8,0,100,0,2,0,8,0,79,0,117,0,116,0
		,32,0,86,0,108,0,116,0,115,0,0,6,4,0,6,24,9,0,100,0,2,0,8,0,79,0,117,0,116,0,32,0,80,0,119,0,114,0,32,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32
		,-98,36,1,48,5,33,0,6,5,0,6,24,14,0,100,0,2,0,8,0,69,0,108,0,112,0,32,0,107,0,87,0,72,0,114,0,0,6,6,0,6,24,5,0,100,0,2,0,8,0,84,0,114,0
		,113,0,32,0,67,0,117,0,114,0,32,0,0,0,0,0,0,0,0,0,45,0,0,0,8,101,0,0,0,1,0,0,0,6,0,0,0,24,0,0,0,16,3,32,-110,36,0,48,38,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,64,0,0,0,0,0,0,36,0,0,0,8,61,0,0,0,1,0,0,0,1,0,0,0,11,0,0,0,16,4,32,-105,37,0,0,0,48,3,3,3,0,0,0,-56,-81,0,0,29,0,0,0,0,100,0,0,0,2,0
		,0,0,-128,0,0,0,-2,105,-30,-58,-105,127,17,-23,-117,60,0,12,41,-38,89,41,0,0,0];
			CONNECTION Output (Rate := 20000,
			                   InputCxnPoint := 1,
			                   InputSize := 32,
			                   OutputCxnPoint := 2,
			                   OutputSize := 8,
			                   EventID := 0,
			                   Unicast := Yes)
					InputData  := [0,0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,0];
					InputForceData := [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
					OutputData  := [5392,1.73500000e+003];
					OutputForceData := [16,21,0,0,0,-32,-40,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE $NoName (Parent := "PF755_VFD_1",
	            ParentModPortId := 1,
	            CatalogNumber := "RHINOBP-DRIVE-PERIPHERAL-MODULE",
	            Vendor := 1,
	            ProductType := 0,
	            ProductCode := 28,
	            Major := 1,
	            Minor := 1,
	            UserDefinedVendor := 1,
	            UserDefinedProductType := 143,
	            UserDefinedProductCode := 767,
	            UserDefinedMajor := 2,
	            UserDefinedMinor := 5,
	            Slot := 1,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 0,
	            KeyMask := 2#0000_0000_0000_0000,
	            ShutdownParentOnFault := 0,
	            DrivesADCMode := 1,
	            DrivesADCEnabled := 0,
	            UserDefinedCatalogNumber := "20-HIM-x6")
			ExtendedProp := [[[___<public><Port1DeviceDefinition>0001000000FF00000002000100000000000100010502    0001050200010000</Port1DeviceDefinition><Port1CCV>544375329</Port1CCV><Port1CCVInfo>1,1,1,1,544375329,0,0,0,0,</Port1CCVInfo><Port1HLP_Size>0</Port1HLP_Size><Port1Type>20-HIM-x6</Port1Type><ConfigID>100</ConfigID></public>___]]]
			ConfigData := [8,6,1];
			ConfigScript (Size := 204) := [-56,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,8,-106,0,0,0,1,0,0,0,1,0,0,0,8,0,0,0,75,2,32,-110,36,0,-1,-1,0,0,0,62,0,0,0,8,20,0,0,0,1,0,0,0,1,0,0,0
		,11,0,0,0,16,4,32,-109,37,0,0,0,48,2,3,1,0,0,0,26,0,0,0,16,4,32,-110,37,0,0,0,48,5,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32
		,0,0,45,0,0,0,8,101,0,0,0,1,0,0,0,6,0,0,0,24,0,0,0,16,3,32,-110,36,0,48,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,29,0,0,0,0,100,0,0,0,2,0
		,0,0,-128,0,0,0,-112,-76,116,82,-105,118,17,-23,-117,60,0,12,41,-38,89,41,0,0,0];
	END_MODULE

	MODULE $NoName (Parent := "PF755_VFD_1",
	            ParentModPortId := 1,
	            CatalogNumber := "RHINOBP-DRIVE-PERIPHERAL-MODULE",
	            Vendor := 1,
	            ProductType := 0,
	            ProductCode := 28,
	            Major := 1,
	            Minor := 1,
	            UserDefinedVendor := 1,
	            UserDefinedProductType := 143,
	            UserDefinedProductCode := 32928,
	            UserDefinedMajor := 1,
	            UserDefinedMinor := 1,
	            Slot := 13,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 0,
	            KeyMask := 2#0000_0000_0000_0000,
	            ShutdownParentOnFault := 0,
	            DrivesADCMode := 1,
	            DrivesADCEnabled := 0,
	            UserDefinedCatalogNumber := "EtherNet/IP")
			ExtendedProp := [[[___<public><Port13DeviceDefinition>0001000000A000000080000100000000000100010101    0001020100010000</Port13DeviceDefinition><Port13HLP_Size>0</Port13HLP_Size><Port13Type>EtherNet/IP</Port13Type><ConfigID>100</ConfigID><Port13CCV>-1547464967</Port13CCV><Port13CCVInfo>1,1,1,1,-1547464967,0,0,0,0,</Port13CCVInfo></public>___]]]
			ConfigData := [8,6,1];
			ConfigScript (Size := 548) := [32,2,0,0,4,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,8,-106,0,0,0,1,0,0,0,1,0,0,0,8,0,0,0,75,2,32,-110,36,0,-1,-1,0,0,0,112,1,0,0,8,21,0,0,0,1,0,0,0,1,0,0,0
		,11,0,0,0,16,4,32,-97,37,0,0,0,48,2,3,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,17,0,48,9,7,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,18,0,48,9,5,0,0
		,0,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,19,0,48,9,-36,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,20,0,48,9,-73,3,0,0,1,0,0,0,14,0,0,0,16,4,32,-97
		,37,0,21,0,48,9,-91,3,0,0,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,36,0,48,9,0,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,38,0,48,9,-64,0,0,0,1,0,0,0
		,14,0,0,0,16,4,32,-97,37,0,39,0,48,9,-88,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,40,0,48,9,1,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,41,0
		,48,9,50,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,42,0,48,9,-1,0,0,0,1,0,0,0,14,0,0,0,16,4,32,-97,37,0,43,0,48,9,-1,0,0,0,1,0,0,0,14,0,0,0,16
		,4,32,-97,37,0,44,0,48,9,-1,0,0,0,1,0,0,0,46,0,0,0,16,4,32,-110,37,0,0,0,48,31,2,0,16,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32
		,0,32,0,32,0,32,0,32,0,32,0,32,0,45,0,0,0,8,101,0,0,0,1,0,0,0,6,0,0,0,24,0,0,0,16,3,32,-110,36,0,48,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0
		,0,0,0,36,0,0,0,8,61,0,0,0,1,0,0,0,1,0,0,0,11,0,0,0,16,4,32,-105,37,0,0,0,48,3,3,3,0,0,0,-56,-81,0,0,29,0,0,0,0,100,0,0,0,2,0,0,0,-128,0,0,0,-53
		,115,14,69,-93,78,17,-23,-117,65,0,12,41,-38,89,41,0,0,0];
	END_MODULE

	MODULE $NoName (Parent := "PF755_VFD_1",
	            ParentModPortId := 1,
	            CatalogNumber := "RHINOBP-DRIVE-PERIPHERAL-MODULE",
	            Vendor := 1,
	            ProductType := 0,
	            ProductCode := 28,
	            Major := 1,
	            Minor := 1,
	            UserDefinedVendor := 1,
	            UserDefinedProductType := 143,
	            UserDefinedProductCode := 33184,
	            UserDefinedMajor := 2,
	            UserDefinedMinor := 5,
	            Slot := 14,
	            Mode := 2#0000_0000_0000_0000,
	            CompatibleModule := 0,
	            KeyMask := 2#0000_0000_0000_0000,
	            ShutdownParentOnFault := 0,
	            DrivesADCMode := 1,
	            DrivesADCEnabled := 0,
	            UserDefinedCatalogNumber := "DeviceLogix")
			ExtendedProp := [[[___<public><Port14DeviceDefinition>0001000000A000000081000100000000000100010502    0001050200010000</Port14DeviceDefinition><Port14HLP_Size>40</Port14HLP_Size><Port14Type>DeviceLogix</Port14Type><ConfigID>100</ConfigID><Port14CCV>-1137391632</Port14CCV><Port14CCVInfo>1,1,1,1,-1137391632,0,0,0,0,</Port14CCVInfo><Port14HLP_DataBlock1>1F000200000001000800000001000101061B000028000E0000000100FF0300000000000000000000</Port14HLP_DataBlock1></public>___]]]
			ConfigData := [8,6,1];
			ConfigScript (Size := 1412) := [-128,5,0,0,4,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,8,-106,0,0,0,1,0,0,0,1,0,0,0,8,0,0,0,75,2,32,-110,36,0,-1,-1,0,0,0,-41,4,0,0,8,11,0,0,0,1,0,0,0,1,0
		,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,2,0,3,0,0,2,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,3,0,1,0,0,31,36,2,0,16,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32
		,0,32,0,32,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,4,0,3,1,0,9,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0
		,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,5,0,3,12,0,9,4,0,0,0,0,4,0,0,0,0
		,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,6,0,3,23,0,9,4
		,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48
		,5,7,0,3,34,0,9,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32
		,-96,36,1,48,5,8,0,3,45,0,9,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,3,52,0,9,4,0,0,0,0,4,5,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0
		,74,0,0,0,16,3,32,-96,36,1,48,5,9,0,3,58,0,9,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0
		,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,10,0,3,69,0,9,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0
		,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,11,0,3,80,0,9,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0
		,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,12,0,3,91,0,9,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0
		,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,4,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,13,0,3,102,0,9,4,0,0,0,0,4,0,0,0,0,4,0,0,0
		,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,14,0,1,0,0,31,36,2,0
		,16,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0
		,0,0,16,3,32,-96,36,1,48,5,15,0,46,13,0,2,10,0,-128,5,3,33,0,14,3,36,1,0,46,13,0,2,10,0,-128,5,3,33,0,62,3,36,0,0,46,13,0,2,8,0,-128
		,81,2,32,55,36,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,74,0,0,0,16,3,32,-96,36,1,48,5,16,0,46,13,0,2,24,0,-128,76,2,32,55,36,1,3,0,0
		,0,1,0,-1,1,1,0,-113,0,-96,-127,2,5,0,46,13,0,2,15,0,-128,80,2,32,55,36,1,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,8,60,0,0,0,1,0
		,0,0,1,0,0,0,11,0,0,0,16,4,32,-105,37,0,0,0,48,3,1,45,0,0,0,8,101,0,0,0,1,0,0,0,6,0,0,0,24,0,0,0,16,3,32,-110,36,0,48,38,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,64,0,0,0,0,0,0,29,0,0,0,0,100,0,0,0,2,0,0,0,-128,0,0,0,-16,-110,-33,-10,-105,122,17,-23,-117,60,0,12,41,-38,89,41,0,0
		,0];
	END_MODULE

	MODULE E300_1 (Description := "E300 FVNR Overload Relay",
	               Parent := "Ethernet",
	               ParentModPortId := 2,
	               CatalogNumber := "193-ECM-ETR/A",
	               Vendor := 1,
	               ProductType := 3,
	               ProductCode := 651,
	               Major := 5,
	               Minor := 1,
	               PortLabel := "ENet",
	               NodeAddress := "192.168.1.60",
	               Mode := 2#0000_0000_0000_0000,
	               CompatibleModule := 0,
	               KeyMask := 2#0000_0000_0000_0000)
			ExtendedProp := [[[___<public><ControlModuleType>2</ControlModuleType><ControlModuleMismatchTripEn>2</ControlModuleMismatchTripEn><SensingModuleType>5</SensingModuleType><SensingModuleMismatchTripEn>2</SensingModuleMismatchTripEn><Digital1Type>0</Digital1Type><Digital1MismatchTripEn>2</Digital1MismatchTripEn><Digital2Type>0</Digital2Type><Digital2MismatchTripEn>2</Digital2MismatchTripEn><Digital3Type>0</Digital3Type><Digital3MismatchTripEn>2</Digital3MismatchTripEn><Digital4Type>0</Digital4Type><Digital4MismatchTripEn>2</Digital4MismatchTripEn><Analog1Type>0</Analog1Type><Analog1MismatchTripEn>2</Analog1MismatchTripEn><Analog2Type>0</Analog2Type><Analog2MismatchTripEn>2</Analog2MismatchTripEn><Analog3Type>0</Analog3Type><Analog3MismatchTripEn>2</Analog3MismatchTripEn><Analog4Type>0</Analog4Type><Analog4MismatchTripEn>2</Analog4MismatchTripEn><OperatorStationType>0</OperatorStationType><OperatorStationMismatchTripEn>2</OperatorStationMismatchTripEn><UserDefinedData0>2</UserDefinedData0><UserDefinedData1>3</UserDefinedData1><UserDefinedData2>28</UserDefinedData2><UserDefinedData3>29</UserDefinedData3><UserDefinedData4>30</UserDefinedData4><UserDefinedData5>31</UserDefinedData5><UserDefinedData6>38</UserDefinedData6><UserDefinedData7>39</UserDefinedData7><OperatingMode>54</OperatingMode><Pt00OutputFunction>2</Pt00OutputFunction><Pt01OutputFunction>0</Pt01OutputFunction><Pt02OutputFunction>0</Pt02OutputFunction><OperatingModeChanged>1</OperatingModeChanged><ConfigID>500</ConfigID><SensorMinFLA>50</SensorMinFLA><SensorMaxFLA>3000</SensorMaxFLA></public>___]]]
			ConfigData  := [412,120,0,2,54,370,370,10,22,75,85,[71,84,0,0,0,0,8665,256,0,0],[-1,-1,63,63,4095,4095,26111,8191,4095,4095],4095,2,5,0
		,32,4096,0,2,0,600,0,0,500,10000,100,1,10,5,0,50,50,0,10,10,0,600,10,50,250,150,10,50,50,70,10,50,35,20,5,5,10,10,35,40,10
		,35,40,10,35,40,10,10,100,90,10,100,90,10,100,90,10,10,10,10,[2,3,28,29,30,31,38,39],0,0,-1,480,480,0,10,10,10,1000,4000,10
		,10,5000,4900,10,10,15,10,10,10,57,58,10,10,63,62,15,1,10,10,10,10,0,0,0,0,10,10,10,10,0,0,0,0,10,10,10,10,0,0,0,0,10,10,10,10
		,0,0,0,0,10,10,-90,-95,10,10,-95,-90,10,10,90,95,10,10,95,90,1,50,2,3,51,52,38,39,300,0,[10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0],[10,10,10
		,0,0,0,0,0,0,0,0,0,0,0,0,0],[10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0],[10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0]];
			CONNECTION Standard (Rate := 100000,
			                     EventID := 0,
			                     Unicast := Yes)
					InputData (Description := "E300 Overload Relay #1 Module Raw Ethernet Input Data",
            COMMENT.TRIPPRESENT := "E300 Overload Relay $N(193-ECM-ETR) Raw Ethernet Data: Trip Present") := [-1,18560,10,0,0,0,0,[0,0,0,0,0,0,0,0,0,0,0,0],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9999,0,0,16,2,0,0,0],0,0,[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]];
					InputForceData := [-1,-1,-1,-1,-128,72,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,39,0,0,0,0,0,0,0,0,0,0,16,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
					OutputData (Description := "E300 Overload Relay #1 Module Raw Ethernet Output Data") := [0,0,0,0];
					OutputForceData := [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE E300_2 (Description := "E300 FVR Overload Relay #2",
	               Parent := "Ethernet",
	               ParentModPortId := 2,
	               CatalogNumber := "193-ECM-ETR/A",
	               Vendor := 1,
	               ProductType := 3,
	               ProductCode := 651,
	               Major := 5,
	               Minor := 1,
	               PortLabel := "ENet",
	               NodeAddress := "192.168.1.70",
	               Mode := 2#0000_0000_0000_0100,
	               CompatibleModule := 1,
	               KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ControlModuleType>2</ControlModuleType><ControlModuleMismatchTripEn>2</ControlModuleMismatchTripEn><SensingModuleType>5</SensingModuleType><SensingModuleMismatchTripEn>2</SensingModuleMismatchTripEn><Digital1Type>0</Digital1Type><Digital1MismatchTripEn>2</Digital1MismatchTripEn><Digital2Type>0</Digital2Type><Digital2MismatchTripEn>2</Digital2MismatchTripEn><Digital3Type>0</Digital3Type><Digital3MismatchTripEn>2</Digital3MismatchTripEn><Digital4Type>0</Digital4Type><Digital4MismatchTripEn>2</Digital4MismatchTripEn><Analog1Type>0</Analog1Type><Analog1MismatchTripEn>2</Analog1MismatchTripEn><Analog2Type>0</Analog2Type><Analog2MismatchTripEn>2</Analog2MismatchTripEn><Analog3Type>0</Analog3Type><Analog3MismatchTripEn>2</Analog3MismatchTripEn><Analog4Type>0</Analog4Type><Analog4MismatchTripEn>2</Analog4MismatchTripEn><OperatorStationType>0</OperatorStationType><OperatorStationMismatchTripEn>2</OperatorStationMismatchTripEn><UserDefinedData0>2</UserDefinedData0><UserDefinedData1>3</UserDefinedData1><UserDefinedData2>28</UserDefinedData2><UserDefinedData3>29</UserDefinedData3><UserDefinedData4>30</UserDefinedData4><UserDefinedData5>31</UserDefinedData5><UserDefinedData6>38</UserDefinedData6><UserDefinedData7>39</UserDefinedData7><OperatingMode>6</OperatingMode><Pt00OutputFunction>2</Pt00OutputFunction><Pt01OutputFunction>2</Pt01OutputFunction><Pt02OutputFunction>0</Pt02OutputFunction><OperatingModeChanged>1</OperatingModeChanged><ConfigID>500</ConfigID><SensorMinFLA>50</SensorMinFLA><SensorMaxFLA>3000</SensorMaxFLA></public>___]]]
			ConfigData  := [412,120,0,2,6,670,670,10,22,75,85,[71,84,0,0,0,0,8665,768,0,0],[-1,-1,63,63,4095,4095,26111,8191,4095,4095],4095,2,5,0,544
		,4096,0,2,0,600,0,0,500,10000,100,1,10,5,0,50,50,0,10,10,0,600,10,50,250,150,10,50,50,70,10,50,35,20,5,5,10,10,35,40,10,35
		,40,10,35,40,10,10,100,90,10,100,90,10,100,90,10,10,10,10,[2,3,28,29,30,31,38,39],0,0,-1,480,480,0,10,10,10,1000,4000,10,10
		,5000,4900,10,10,15,10,10,10,57,58,10,10,63,62,15,1,10,10,10,10,0,0,0,0,10,10,10,10,0,0,0,0,10,10,10,10,0,0,0,0,10,10,10,10,0,0
		,0,0,10,10,-90,-95,10,10,-95,-90,10,10,90,95,10,10,95,90,1,50,2,3,51,52,38,39,300,0,[10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0],[10,10,10,0
		,0,0,0,0,0,0,0,0,0,0,0,0],[10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0],[10,10,10,0,0,0,0,0,0,0,0,0,0,0,0,0]];
			CONNECTION Standard (Rate := 100000,
			                     EventID := 0,
			                     Unicast := Yes)
					InputData (Description := "E300 Overload Relay #2 Module Raw Ethernet Input Data",
            COMMENT.TRIPPRESENT := "E300 Overload Relay $N(193-ECM-ETR) Raw Ethernet Data: Trip Present") := [-1,18560,10,0,0,0,0,[0,0,0,0,0,0,0,0,0,0,0,0],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[9999,0,0,14,0,0,0,0],0,0,[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0]];
					InputForceData := [-1,-1,-1,-1,-128,72,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,39,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
		,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
					OutputData (Description := "E300 Overload Relay #2 Module Raw Ethernet Output Data") := [0,0,0,0];
					OutputForceData := [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE DO_120V_S1 (Parent := "Local",
	                   ParentModPortId := 7,
	                   CatalogNumber := "1769-OA16/A",
	                   Vendor := 1,
	                   ProductType := 7,
	                   ProductCode := 93,
	                   Major := 3,
	                   Minor := 1,
	                   PortLabel := "RxBACKPLANE",
	                   Slot := 1,
	                   CommMethod := 536870913,
	                   Mode := 2#0000_0000_0000_0001,
	                   CompatibleModule := 1,
	                   KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>150</ConfigID></public>___]]]
			ConfigData  := [18,102,1,0,0,0,0,0];
			CONNECTION Output (Rate := 20000,
			                   EventID := 0)
					InputData  := [0,256];
					InputForceData := [0,0,0,0,0,1,33,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
					OutputData  := [256];
					OutputForceData := [0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	MODULE DI_120VAC_S2 (Parent := "Local",
	                     ParentModPortId := 7,
	                     CatalogNumber := "1769-IA16/A",
	                     Vendor := 1,
	                     ProductType := 7,
	                     ProductCode := 82,
	                     Major := 1,
	                     Minor := 1,
	                     PortLabel := "RxBACKPLANE",
	                     Slot := 2,
	                     CommMethod := 536870913,
	                     Mode := 2#0000_0000_0000_0001,
	                     CompatibleModule := 1,
	                     KeyMask := 2#0000_0000_0001_1111)
			ExtendedProp := [[[___<public><ConfigID>250</ConfigID></public>___]]]
			ConfigData := [8,102,1];
			CONNECTION Input (Rate := 20000,
			                  EventID := 0)
					InputData  := [0,0];
					InputForceData := [0,0,0,0,0,0,34,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
			END_CONNECTION

	END_MODULE

	ADD_ON_INSTRUCTION_DEFINITION a_E300Ovld_FVNR (Description := "E300 Overload Relay (EtherNet/IP) w/FVNR Starter",
	                                               Revision := "1.0",
	                                               RevisionExtension := "8294",
	                                               RevisionNote := "Original Version",
	                                               Vendor := "Factory Automation Systems",
	                                               ExecutePrescan := No,
	                                               ExecutePostscan := No,
	                                               ExecuteEnableInFalse := No,
	                                               CreatedDate := "2013-08-15T14:15:31.575Z",
	                                               CreatedBy := "Not Available",
	                                               EditedDate := "2019-09-26T00:49:22.041Z",
	                                               EditedBy := "DESKTOP-R0KGE9M\rober",
	                                               SoftwareRevision := "v32.01",
	                                               AdditionalHelpText := "Copyright © Factory Automation System  All Rights Reserved.$N$NThis Instruction controls and monitors a 193-ECM-ETR (E300$Non EtherNet/IP) Overload Relay and provides:$N$N*  Monitoring of warning of impending overloads$N*  Ideitification of overload trip conditions$N*  Countdown of time until overload trip can be reset$N*  Command to initiate a trip reset$NNOTE: 3 trips within a configurable time requires resetting the trip LOCALLY (at the relay)!$N*  Monitoring of states of relay$'s discrete inputs and discrete outputs$N*  Monitoring of various current, voltage and ground fault values (if available)$N*  Monitoring of I/O communication faults$N*  Alarms for Trip Warning, Overload Trip and I/O Fault$N*  Supports HMI $Qbreadcrumbs$Q for Alarm Inhibited, Bad Configuration, Not Ready$N$NDEVICE SETUP REQUIRED$N===================================================$NBe certain to set up the E300 Datalinks as follows!$N$'User Choice$' Datalinks are not used by this AOI and$Nmay be left unused or set up for your application.$N$NINPUT ASSEMBLY:$NDrive Status (standard)$NFeedback (standard)$N0. Time to Reset  (Par 3)$N1. Time to Start  (Par 31)$N2. Trip History #0  (Par 127)$N3. Warning History #0  (Par 133)$N4. Invalid Configuration Parameter Number  (Par 38)$N5. User choice #1$N6. User choice #2$N7. User choice #3$N$NOUTPUT ASSEMB:Y$NThis instruction only uses the Remote Trip and Remote Trip Reset command bits in the output assembly.")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			Input : AB:E300:I:3 (COMMENT.TRIPPRESENT := "Motor Starter$NTrip Present",
			                 COMMENT.PT00DATA := "Motor Disconnect$NClosed",
			                 COMMENT.PT01DATA := "Motor Starter$NAux Input",
			                 COMMENT.PT02DATA := "Circuit Breaker$NOn$NAux",
			                 Usage := InOut,
			                 Required := Yes,
			                 Visible := Yes);
			Output : AB:E300:O:1 (COMMENT.PT00DATA := "Contactor Output",
			                  Usage := InOut,
			                  Required := Yes,
			                  Visible := Yes);
			C_REM : BOOL (Description := "Remote Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_LOC : BOOL (Description := "Local Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_MNT : BOOL (Description := "Maintenance Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_SW_AUT : BOOL (Description := "Request Software Automatic mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_SW_MAN : BOOL (Description := "Request Software Manual mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_RUN : BOOL (Description := "Run Forward in Auto Mode Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_JOG : BOOL (Description := "Operator$NMotor Run Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_IOK : BOOL (Description := "Interlocks OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_RAL : BOOL (Description := "Reset Motor Alarms",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_COM : BOOL (Description := "1 = ENET Comms OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_TRIP : BOOL (Description := "1=Send Remote Trip request to Overload Relay",
			                  Usage := Input,
			                  RADIX := Decimal,
			                  Required := No,
			                  Visible := Yes,
			                  DefaultData := 0);
			C_WW_AUT : BOOL (Description := "Auto Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_MAN : BOOL (Description := "Manual Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_Start : BOOL (Description := "Manual Start Request$NFrom HMI",
			                      Usage := Input,
			                      RADIX := Decimal,
			                      Required := No,
			                      Visible := No,
			                      DefaultData := 0);
			C_WW_Stop : BOOL (Description := "Manual Stop Request$NFrom HMI",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     DefaultData := 0);
			C_WW_RT : BOOL (Description := "Remote Trip from HMI",
			                   Usage := Input,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   DefaultData := 0);
			C_CFG_FailTime : DINT (Description := "Contactor failure time",
			                          Usage := Input,
			                          RADIX := Decimal,
			                          Required := Yes,
			                          Visible := Yes,
			                          DefaultData := 0);
			S_AUT : BOOL (Description := "Auto Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MAN : BOOL (Description := "Manual Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_SW_AUT : BOOL (Description := "Motor in Software Auto Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_SW_MAN : BOOL (Description := "Motor in Software Manual Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_LOC : BOOL (Description := "Local Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MNT : BOOL (Description := "Maintenance Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_IOK : BOOL (Description := "Interlocks Allow Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_OLR : BOOL (Description := "Overload Reset PB",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := No,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_ISO : BOOL (Description := "Local Disconnect Closed",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := No,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_FLT : BOOL (Description := "Motor Fault",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RUN : BOOL (Description := "Motor Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_CON : BOOL (Description := "Contactor Output",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_PctTherm : REAL (Description := "Motor Thermal Usage in Percent (Trip / Fault at 100%)",
			                      Usage := Output,
			                      RADIX := Float,
			                      Required := No,
			                      Visible := Yes,
			                      ExternalAccess := Read Only,
			                      DefaultData := 0.00000000e+000);
			S_CurrImbal : REAL (Description := "Currentt Imbalance (%)",
			                       Usage := Output,
			                       RADIX := Float,
			                       Required := No,
			                       Visible := Yes,
			                       ExternalAccess := Read Only,
			                       DefaultData := 0.00000000e+000);
			S_AvgPctFLA : REAL (Description := "Average Current as Percent Full Load Amps (%)",
			                       Usage := Output,
			                       RADIX := Float,
			                       Required := No,
			                       Visible := Yes,
			                       ExternalAccess := Read Only,
			                       DefaultData := 0.00000000e+000);
			S_AvgCurr : REAL (Description := "Average Current (Amps)",
			                     Usage := Output,
			                     RADIX := Float,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0.00000000e+000);
			S_L1Curr : REAL (Description := "L1 Phase Current (Amps)",
			                    Usage := Output,
			                    RADIX := Float,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0.00000000e+000);
			S_L2Curr : REAL (Description := "L2 Phase Current (Amps)",
			                    Usage := Output,
			                    RADIX := Float,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0.00000000e+000);
			S_L3Curr : REAL (Description := "L3 Phase Current (Amps)",
			                    Usage := Output,
			                    RADIX := Float,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0.00000000e+000);
			S_GndFaultCurr : REAL (Description := "Ground Fault Current (Amps)",
			                          Usage := Output,
			                          RADIX := Float,
			                          Required := No,
			                          Visible := Yes,
			                          ExternalAccess := Read Only,
			                          DefaultData := 0.00000000e+000);
			S_MinToReset : DINT (Description := "Time until overload can be reset (min in mmm:ss)",
			                        Usage := Output,
			                        RADIX := Decimal,
			                        Required := No,
			                        Visible := No,
			                        ExternalAccess := Read Only,
			                        DefaultData := 0);
			S_SecToReset : DINT (Description := "Time unitl overload can be reset (sec in mmm:ss)",
			                        Usage := Output,
			                        RADIX := Decimal,
			                        Required := No,
			                        Visible := No,
			                        ExternalAccess := Read Only,
			                        DefaultData := 0);
			S_MinToStart : DINT (Description := "Time until motor can be started (min in mmm:ss)",
			                        Usage := Output,
			                        RADIX := Decimal,
			                        Required := No,
			                        Visible := No,
			                        ExternalAccess := Read Only,
			                        DefaultData := 0);
			S_SecToStart : DINT (Description := "Time until motor can be started (sec in mmm:ss)",
			                        Usage := Output,
			                        RADIX := Decimal,
			                        Required := No,
			                        Visible := No,
			                        ExternalAccess := Read Only,
			                        DefaultData := 0);
			S_Fault : SINT (Description := "Device Fault Status 0=None, 15=Warning, 30=Tripped, 31=Local Reset Reqd, 32=I/O Fault, 34=Config Error",
			                   Usage := Output,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   ExternalAccess := Read Only,
			                   DefaultData := 0);
			S_MotorCurr : BOOL (Description := "1=Motor Current is Present",
			                       Usage := Output,
			                       RADIX := Decimal,
			                       Required := No,
			                       Visible := Yes,
			                       ExternalAccess := Read Only,
			                       DefaultData := 0);
			S_GFCurr : BOOL (Description := "1=Ground Fault Current is Present",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_InpPt00 : BOOL (Description := "Status of discrete input Pt00",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt01 : BOOL (Description := "Status of discrete input Pt01",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt02 : BOOL (Description := "Status of discrete input Pt02",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt03 : BOOL (Description := "Status of discrete input Pt03",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt04 : BOOL (Description := "Status of discrete input Pt04",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt05 : BOOL (Description := "Status of discrete input Pt05",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_OutPt00 : BOOL (Description := "Status of discrete output Pt00",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_OutPt01 : BOOL (Description := "Status of discrete output Pt01",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_OutPt02 : BOOL (Description := "Status of discrete output Pt02",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_CurrentTrip : INT (Description := "Current Trip Status Bits (Par 4)",
			                         COMMENT.0 := "1=Overload Trip",
			                         COMMENT.1 := "1=Phase Loss Trip",
			                         COMMENT.2 := "1=Ground Fault Current Trip",
			                         COMMENT.3 := "1=Stall Trip",
			                         COMMENT.4 := "1=Jam Trip",
			                         COMMENT.5 := "1=Underload Trip",
			                         COMMENT.6 := "1=Current Imbalance Trip",
			                         COMMENT.7 := "not used",
			                         COMMENT.8 := "not used",
			                         COMMENT.9 := "not used",
			                         COMMENT.10 := "not used",
			                         COMMENT.11 := "not used",
			                         COMMENT.12 := "not used",
			                         COMMENT.13 := "not used",
			                         COMMENT.14 := "not used",
			                         COMMENT.15 := "not used",
			                         Usage := Output,
			                         RADIX := Binary,
			                         Required := No,
			                         Visible := No,
			                         ExternalAccess := Read Only,
			                         DefaultData := 0);
			S_CurrentWarning : INT (Description := "Current Warning Status Bits (Par 10)",
			                            COMMENT.0 := "1=Overload Warning",
			                            COMMENT.1 := "1=Phase Loss Warning",
			                            COMMENT.2 := "1=Ground Fault Current Warning",
			                            COMMENT.3 := "1=Stall Warning",
			                            COMMENT.4 := "1=Jam Warning",
			                            COMMENT.5 := "1=Underload Warning",
			                            COMMENT.6 := "1=Current Imbalance Warning",
			                            COMMENT.7 := "not used",
			                            COMMENT.8 := "not used",
			                            COMMENT.9 := "not used",
			                            COMMENT.10 := "not used",
			                            COMMENT.11 := "not used",
			                            COMMENT.12 := "not used",
			                            COMMENT.13 := "not used",
			                            COMMENT.14 := "not used",
			                            COMMENT.15 := "not used",
			                            Usage := Output,
			                            RADIX := Binary,
			                            Required := No,
			                            Visible := No,
			                            ExternalAccess := Read Only,
			                            DefaultData := 0);
			S_ControlTrip : INT (Description := "Control Trip Status Bits (Par 7)",
			                         COMMENT.0 := "1=Test Trip",
			                         COMMENT.1 := "1=PTC Trip",
			                         COMMENT.2 := "1=DeviceLogix Trip 1",
			                         COMMENT.3 := "1=DeviceLogix Trip 2",
			                         COMMENT.4 := "1=Remote Trip",
			                         COMMENT.5 := "1=Blocked Start Trip",
			                         COMMENT.6 := "1=Hardware Fault Trip",
			                         COMMENT.7 := "1=Configuration Trip",
			                         COMMENT.8 := "1=Module Mismatch Trip",
			                         COMMENT.9 := "1=Expansion Bus Trip",
			                         COMMENT.10 := "not used",
			                         COMMENT.11 := "not used",
			                         COMMENT.12 := "1=Non-Volatile Memory Error Trip",
			                         COMMENT.13 := "not used",
			                         COMMENT.14 := "not used",
			                         COMMENT.15 := "not used",
			                         Usage := Output,
			                         RADIX := Binary,
			                         Required := No,
			                         Visible := No,
			                         ExternalAccess := Read Only,
			                         DefaultData := 0);
			S_ControlWarning : INT (Description := "Control Warning Status Bits (Par 13)",
			                            COMMENT.0 := "not used",
			                            COMMENT.1 := "1=PTC Warning",
			                            COMMENT.2 := "1=DeviceLogix Warning",
			                            COMMENT.3 := "not used",
			                            COMMENT.4 := "not used",
			                            COMMENT.5 := "not used",
			                            COMMENT.6 := "not used",
			                            COMMENT.7 := "not used",
			                            COMMENT.8 := "1=Module Mismatch Warning",
			                            COMMENT.9 := "1=DeviceLogix Feedback Timeout Warning",
			                            COMMENT.10 := "1=Expansion Bus Warning",
			                            COMMENT.11 := "1=Number of Starts Warning (PM)",
			                            COMMENT.12 := "1=Operating Hours Warning (PM)",
			                            COMMENT.13 := "not used",
			                            COMMENT.14 := "not used",
			                            COMMENT.15 := "not used",
			                            Usage := Output,
			                            RADIX := Binary,
			                            Required := No,
			                            Visible := No,
			                            ExternalAccess := Read Only,
			                            DefaultData := 0);
			S_LocalResetReqd : BOOL (Description := "Too many remote resets: go to starter, find cause, and reset there",
			                            Usage := Output,
			                            RADIX := Decimal,
			                            Required := No,
			                            Visible := Yes,
			                            ExternalAccess := Read Only,
			                            DefaultData := 0);
			S_NotRdy : BOOL (Description := "1=Device Not Ready, see detail bits for reason",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_Warn : BOOL (Description := "1=Warning of impending trip (See Sts_WarnBits for reason)",
			                  Usage := Output,
			                  RADIX := Decimal,
			                  Required := No,
			                  Visible := Yes,
			                  ExternalAccess := Read Only,
			                  DefaultData := 0);
			S_Trip : BOOL (Description := "1=Overload Tripped (See Sts_TripBits for reason)",
			                  Usage := Output,
			                  RADIX := Decimal,
			                  Required := No,
			                  Visible := Yes,
			                  ExternalAccess := Read Only,
			                  DefaultData := 0);
			S_IOFault : BOOL (Description := "I/O Comm Fault Status (0=OK, 1=Bad)",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_Rdy_Trip : BOOL (Description := "1=Ready to receive Remote_Trip $N(enables HMI button)",
			                      Usage := Output,
			                      RADIX := Decimal,
			                      Required := No,
			                      Visible := No,
			                      ExternalAccess := Read Only,
			                      DefaultData := 0);
			S_Rdy_TripReset : BOOL (Description := "1=Ready to receive OCmd_TripReset (enables HMI button)",
			                           Usage := Output,
			                           RADIX := Decimal,
			                           Required := No,
			                           Visible := No,
			                           ExternalAccess := Read Only,
			                           DefaultData := 0);
			A_CMD : BOOL (Description := "Motor Failed To Start",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_CB : BOOL (Description := "Main MCC Bucket$NCircuit Breaker$NTripped",
			                Usage := Output,
			                RADIX := Decimal,
			                Required := No,
			                Visible := Yes,
			                ExternalAccess := Read Only,
			                DefaultData := 0);
			A_ISO : BOOL (Description := "Isolator Switched Off",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_FTS : BOOL (Description := "Motor Failed To Stop",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_COM : BOOL (Description := "1 = Comm Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_OLD : BOOL (Description := "1 = Overload Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_PHL : BOOL (Description := "1 = Phase Loss Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_GFL : BOOL (Description := "1= Ground Fault Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_STA : BOOL (Description := "1 = Stall Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_JAM : BOOL (Description := "1 = Jam Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_IMB : BOOL (Description := "1 = Current Imbalance Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			StopReq : BOOL (Description := "Stop Request Latch",
			                   Usage := Input,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   DefaultData := 0);
			EntryStatus : DINT (Description := "Entry Status For COM Check",
			                       Usage := Input,
			                       RADIX := Decimal,
			                       Required := No,
			                       Visible := No,
			                       DefaultData := 0);
		END_PARAMETERS

		LOCAL_TAGS
			Temp_Fault : SINT (Description := "Buffer used to build Val_Fault",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			TripResetTimer : TIMER (Description := "Timer for pulsing Trip Reset output",
			                         ExternalAccess := None,
			                         DefaultData := "[0,5000,0]");
			ThirdTripResetTimer : TIMER (Description := "Time since third remote trip reset",
			                              ExternalAccess := None,
			                              DefaultData := "[0,0,0]");
			SecondTripResetTimer : TIMER (Description := "Time since second remote trip reset",
			                               ExternalAccess := None,
			                               DefaultData := "[0,0,0]");
			FirstTripResetTimer : TIMER (Description := "Time since first remote trip reset",
			                              ExternalAccess := None,
			                              DefaultData := "[0,0,0]");
			TripResetONS : BOOL (Description := "A remote trip reset was issued - one-shot store",
			                       RADIX := Decimal,
			                       ExternalAccess := None,
			                       DefaultData := 0);
			TripReset : BOOL (Description := "A remote trip reset was issued this scan",
			                    RADIX := Decimal,
			                    ExternalAccess := None,
			                    DefaultData := 0);
			RemTripTimer : TIMER (Description := "Timer for pulsing Remote Trip output",
			                       ExternalAccess := None,
			                       DefaultData := "[0,5000,0]");
			USINTtoDINT : DINT (Description := "Convert USINT (unsigned) to DINT",
			                      RADIX := Decimal,
			                      ExternalAccess := None,
			                      DefaultData := 0);
			Alm_Ack : INT[2] (Description := "Alarm Acknowledge Array",
			                  COMMENT[0] := "Current Alarm Acknowledge",
			                  RADIX := Decimal,
			                  ExternalAccess := None,
			                  DefaultData := "[0,0]");
			Alm_Tmr : TIMER[32] (Description := "Alarm Debounce Timer",
			                  ExternalAccess := None,
			                  DefaultData := "[[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,2000,0],[0,2000,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]");
			Alm_Seal : INT[2] (Description := "Sealed Alarm",
			                   COMMENT[0] := "Current Sealed Alarm",
			                   RADIX := Decimal,
			                   ExternalAccess := None,
			                   DefaultData := "[0,0]");
			OvldResetTime : DINT (Description := "Overload Time to Reset",
			                        RADIX := Decimal,
			                        ExternalAccess := None,
			                        DefaultData := 0);
			OvldTripTime : DINT (Description := "Overload Time to a Trip",
			                       RADIX := Decimal,
			                       ExternalAccess := None,
			                       DefaultData := 0);
			InvalidCfgCause : DINT (Description := "Invalid Configuration Cause",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			InvalidCfgParam : DINT (Description := "Invalid Configuration Parameter Number",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			RestartTryTime : DINT (Description := "Auto Restart Time To Try",
			                         RADIX := Decimal,
			                         ExternalAccess := None,
			                         DefaultData := 0);
			RestartAvailTrips : DINT (Description := "Auto Restart Trips Available",
			                            RADIX := Decimal,
			                            ExternalAccess := None,
			                            DefaultData := 0);
			RestartTripCnt : DINT (Description := "Auto Restart Trip Count",
			                         RADIX := Decimal,
			                         ExternalAccess := None,
			                         DefaultData := 0);
			OperHours : DINT (Description := "Operating Hours",
			                    RADIX := Decimal,
			                    ExternalAccess := None,
			                    DefaultData := 0);
			RunAuto : BOOL (Description := "Run in automatic mode",
			                  RADIX := Decimal,
			                  ExternalAccess := None,
			                  DefaultData := 0);
			RunMaintenance : BOOL (Description := "Run in maintenance mode",
			                         RADIX := Decimal,
			                         ExternalAccess := None,
			                         DefaultData := 0);
			RunManual : BOOL (Description := "Run in manual mode",
			                    RADIX := Decimal,
			                    ExternalAccess := None,
			                    DefaultData := 0);
			DevFailTimer : TIMER (Description := "Device Failure Alarm Timer",
			                       ExternalAccess := Read/Write,
			                       DefaultData := "[0,0,0]");
		END_LOCAL_TAGS

		ROUTINE Logic (Description := "Send commands to and process information from E1Plus Overload Relay on EtherNet/IP")
				RC: "******$N"
				    "P_E300Ovld:  Process -- E300 Overload Relay on EtherNet/IP$N"
				    "$N"
				    "Factory Automation Version 1.0$N"
				    "$N"
				    "This Instruction controls and monitors a 193-ECM-ETR (E300$N"
				    "on EtherNet/IP) Overload Relay and provides:$N"
				    "$N"
				    "*  Monitoring of warning of impending overloads$N"
				    "*  Ideitification of overload trip conditions$N"
				    "*  Countdown of time until overload trip can be reset$N"
				    "*  Command to initiate a remote test trip$N"
				    "*  Command to initiate a trip reset$N"
				    "NOTE: 3 trips within a configurable time requires resetting the trip LOCALLY (at the relay)!$N"
				    "*  Monitoring of states of relay$'s discrete inputs and discrete outputs$N"
				    "*  Monitoring of various current, voltage and ground fault values (if available)$N"
				    "*  Monitoring of I/O communication faults$N"
				    "*  Alarms for Overload Trip and I/O Fault$N"
				    "*  Supports HMI $Qbreadcrumbs$Q for Bad Configuration, Not Ready, etc$N"
				    "******$N"
				    "";
				N: NOP();
				RC: "******$N"
				    "E300 Configuration Processing$N"
				    "$N"
				    "This rung sets Configuration data (timer presets) and distributes as needed.$N"
				    "$N"
				    "3600000 msec (3600 sec / 1 hr) is the time in which (1, 2, or 3) remote trip resets $N"
				    "are allowed before the trip must be reset at the device (force investigation).$N"
				    "$N"
				    "Set the number of remote trip resets (3) that are allowed  $N"
				    "before the trip must be reset at the device (force investigation).$N"
				    "******$N"
				    "";
				N: [MOV(5000,TripResetTimer.PRE) MOV(3600000,FirstTripResetTimer.PRE) ,MOV(FirstTripResetTimer.PRE,SecondTripResetTimer.PRE) MOV(FirstTripResetTimer.PRE,ThirdTripResetTimer.PRE) ];
				RC: "******$N"
				    "E300 Datalink Processing$N"
				    "******$N"
				    "";
				N: [MOV(Input.UserDefinedData[0],OvldTripTime) MOV(Input.UserDefinedData[1],OvldResetTime) MOV(Input.UserDefinedData[2],OperHours) MOV(Input.UserDefinedData[3],RestartTripCnt) ,MOV(Input.UserDefinedData[4],RestartAvailTrips) MOV(Input.UserDefinedData[5],RestartTryTime) MOV(Input.UserDefinedData[6],InvalidCfgParam) MOV(Input.UserDefinedData[7],InvalidCfgCause) ];
				RC: "******$N"
				    "E300 Device Command Handling$N"
				    "$N"
				    "If an Overload Trip Reset command is received, reset the command$'s TOF timer to send the command to the overload relay.$N"
				    "$N"
				    "Note: Disable the the Trip Reset if the Remote Trip is active!  (It has priority.)$N"
				    "******$N"
				    "";
				N: XIC(C_RAL)XIO(S_LocalResetReqd)XIO(RemTripTimer.TT)TOF(TripResetTimer,?,?);
				RC: "******$N"
				    "If an Overload Trip command is received, reset the command$'s TOF timer to send the command to the overload relay.$N"
				    "******$N"
				    "";
				N: XIC(C_TRIP)TOF(RemTripTimer,?,?);
				RC: "******$N"
				    "Device Trip Reset & Remote Trip Output Handling$N"
				    "$N"
				    "Pulse the Trip Reset or Remote Trip output for the required time when activated.$N"
				    "******$N"
				    "";
				N: [XIC(TripResetTimer.DN) OTE(Output.TripReset) ,XIC(RemTripTimer.DN) OTE(Output.RemoteTrip) ];
				RC: "******$N"
				    "E300 Device Status$N"
				    "$N"
				    "Use the Device Status bits from the overload relay input $N"
				    "Data Structure  to set the appropriate Status bits of this instruction.$N"
				    "*****$N"
				    "";
				N: [XIC(Input.WarningPresent) OTE(S_Warn) ,[XIC(Input.TripPresent) OTE(S_Trip) ,NEQ(Input.Fault,0) OTE(S_IOFault) ] OTE(S_NotRdy) ];
				N: [XIC(Input.MotorCurrentPresent) OTE(S_MotorCurr) ,XIC(Input.GroundFaultCurrentPresent) OTE(S_GFCurr) ];
				N: [XIC(Input.Pt00Readback) OTE(S_OutPt00) ,XIC(Input.Pt01Readback) OTE(S_OutPt01) ,XIC(Input.Pt02Readback) OTE(S_OutPt02) ,XIC(Input.Pt00Data) OTE(S_InpPt00) ,XIC(Input.Pt01Data) OTE(S_InpPt01) ,XIC(Input.Pt02Data) OTE(S_InpPt02) ,XIC(Input.Pt03Data) OTE(S_InpPt03) ,XIC(Input.Pt04Data) OTE(S_InpPt04) ,XIC(Input.Pt05Data) OTE(S_InpPt05) ];
				RC: "******$N"
				    "Generate Remaining E300 Status$N"
				    "******$N"
				    "";
				N: [MOV(Input.Protection.CurrentTripStatus,S_CurrentTrip) MOV(Input.Protection.CurrentWarningStatus,S_CurrentWarning) ,MOV(Input.Protection.ControlTripStatus,S_ControlTrip) MOV(Input.Protection.ControlWarningStatus,S_ControlWarning) ];
				RC: "******$N"
				    "Generate E300 Values$N"
				    "******$N"
				    "";
				N: [CLR(USINTtoDINT) BTD(Input.PercentTCU,0,USINTtoDINT,0,8) MOV(USINTtoDINT,S_PctTherm) ,BTD(Input.CurrentImbalance,0,USINTtoDINT,0,8) MOV(USINTtoDINT,S_CurrImbal) ,DIV(Input.AvgPercentFLA,10.0,S_AvgPctFLA) DIV(Input.GroundFaultCurrent,100.0,S_GndFaultCurr) ,DIV(Input.AvgCurrent,100.0,S_AvgCurr) DIV(Input.L1Current,100.0,S_L1Curr) DIV(Input.L2Current,100.0,S_L2Curr) DIV(Input.L3Current,100.0,S_L3Curr) ];
				RC: "******$N"
				    "Set a $QRemote Trip Reset$Q bit for 1 Scan for Trip Reset Tracking Timers that follow$N"
				    "******$N"
				    "";
				N: XIC(Output.TripReset)XIC(Input.TripPresent)ONS(TripResetONS)OTE(TripReset);
				RC: "Track the time since the THIRD remote trip reset activation.";
				N: [XIC(TripReset) XIC(FirstTripResetTimer.TT) XIC(SecondTripResetTimer.TT) ,XIC(ThirdTripResetTimer.TT) ]TON(ThirdTripResetTimer,?,?);
				RC: "Track the time since the SECOND remote trip reset activation.";
				N: [XIC(TripReset) XIC(FirstTripResetTimer.TT) ,XIC(SecondTripResetTimer.TT) ]TON(SecondTripResetTimer,?,?);
				RC: "Track the time since the FIRST remote trip reset activation.";
				N: [XIC(TripReset) ,XIC(FirstTripResetTimer.TT) ]TON(FirstTripResetTimer,?,?);
				RC: "******$N"
				    "If there have been 3 remote trip reset activations in the last 60 minutes / 1 hour,$N"
				    "show the $QLocal Reset Required$Q status and inhibit further remote trip resets.$N"
				    "******$N"
				    "";
				N: [XIC(FirstTripResetTimer.TT) XIC(SecondTripResetTimer.TT) XIC(ThirdTripResetTimer.TT) ,XIC(S_LocalResetReqd) ]XIC(Input.TripPresent)XIO(Output.TripReset)OTE(S_LocalResetReqd);
				RC: "******$N"
				    "E300 Command Readies$N"
				    "$N"
				    "If the overload relay is tripped, and if we$'re not already sending a Trip Reset$N"
				    "request, and we are not sending a Remote Trip and we have not had too many $N"
				    "remote trip resets recently, show the relay as Ready for Trip Reset$N"
				    "******$N"
				    "";
				N: XIC(Input.TripPresent)XIO(Output.TripReset)XIO(Output.RemoteTrip)XIO(S_LocalResetReqd)OTE(S_Rdy_TripReset);
				RC: "If the overload relay is NOT tripped, and if we$'re not already sending it a Remote Trip$N"
				    "request, show it as Ready to Trip (per security level as allowed by configuration).";
				N: XIO(Input.TripPresent)XIO(Output.TripReset)OTE(S_Rdy_Trip);
				RC: "This rung takes the time remaining until the overload will allow a reset and$N"
				    "reports it in  minutes : seconds format for display on the HMI.$N"
				    "A value of zero or 9999 is displayed as 000:00.";
				N: [LIM(1,OvldResetTime,9998) DIV(OvldResetTime,60,S_MinToReset) MOD(OvldResetTime,60,S_SecToReset) ,LIM(9999,OvldResetTime,0) CLR(S_MinToReset) CLR(S_SecToReset) ];
				RC: "This rung takes the time remaining until the overload will allow a motor start and$N"
				    "reports it in  minutes : seconds format for display on the HMI.$N"
				    "A value of zero or 9999 is displayed as 000:00.$N"
				    "";
				N: [LIM(1,RestartTryTime,9998) DIV(RestartTryTime,60,S_MinToStart) MOD(RestartTryTime,60,S_SecToStart) ,LIM(9999,RestartTryTime,0) CLR(S_MinToStart) CLR(S_SecToStart) ];
				RC: "Val_Fault reflects the Fault Status of the device:$N"
				    "0 = No Faults$N"
				    "15 = Impending Trip Warning$N"
				    "30 = Overload Relay Tripped$N"
				    "31 = Local Reset Required$N"
				    "32 = I/O Fault$N"
				    "34 = Configuration Error";
				N: [CLR(Temp_Fault) ,XIC(S_Warn) MOV(15,Temp_Fault) ,XIC(S_Trip) [MOV(30,Temp_Fault) ,XIC(S_LocalResetReqd) MOV(31,Temp_Fault) ] ,XIC(S_IOFault) MOV(32,Temp_Fault) ,MOV(Temp_Fault,S_Fault) ];
				RC: "Mode Selection : Software Auto and Software Manual mode statuses are only active when the switch is in REMOTE$N"
				    "";
				N: [XIC(C_SW_AUT) ,XIC(S_SW_AUT) ]XIO(C_SW_MAN)OTE(S_SW_AUT);
				N: XIO(S_SW_AUT)OTE(S_SW_MAN);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_AUT)OTE(S_AUT);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_MAN)OTE(S_MAN);
				N: XIC(C_LOC)XIO(C_MNT)OTE(S_LOC);
				N: XIC(C_MNT)OTE(S_MNT);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "MOTOR RUN LOGIC$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "MAINTENANCE RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run under any circumstances whilst in maintence mode";
				N: XIC(S_MNT)XIC(C_JOG)OTE(RunMaintenance);
				RC: "MANUAL RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in manual mode$N"
				    "$N"
				    "$N"
				    "";
				N: [XIC(S_MAN) ,XIC(S_LOC) ]XIC(C_JOG)XIC(C_IOK)XIO(S_FLT)OTE(RunManual);
				RC: "AUTOMATIC RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in automatic mode$N"
				    "$N"
				    "$N"
				    "";
				N: XIC(S_AUT)XIC(C_RUN)XIC(C_IOK)XIO(S_FLT)OTE(RunAuto);
				RC: "RUN COMMAND$N"
				    "$N"
				    "Collect running possibilities and send to contactor$N"
				    "$N"
				    "";
				N: [XIC(RunMaintenance) ,XIC(RunManual) ,XIC(RunAuto) ][OTE(S_CON) ,OTE(Output.Pt00Data) ,OTE(Output.LogicDefinedPt00Data) ];
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "ALARMS$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Configure device$N"
				    "";
				N: MOV(C_CFG_FailTime,DevFailTimer.PRE);
				RC: "$N"
				    "Motor Start / Stop Failure Alarm Timer (command failed)";
				N: [XIC(S_CON) XIO(Input.Pt01Data) ,XIO(S_CON) XIC(Input.Pt01Data) ]TON(DevFailTimer,?,?);
				RC: "$N"
				    "Motor Start Failure Alarm Timer (command failed) Alarm Latch$N"
				    "$N"
				    "";
				N: [XIC(DevFailTimer.DN) XIC(S_CON) XIO(Input.Pt01Data) ,XIC(A_CMD) XIO(C_RAL) ]OTE(A_CMD);
				RC: "$N"
				    "Motor Failed To Stop / Hand Mode Alarm Timer (Selector Switch in Hand) Alarm Latch";
				N: [XIC(DevFailTimer.DN) XIO(S_CON) XIC(Input.Pt01Data) ,XIC(A_FTS) XIO(C_RAL) ]OTE(A_FTS);
				RC: "Motor Circuit Protection Alarm Latch (no debounce required)";
				N: [XIO(Input.Pt02Data) ,XIC(A_CB) XIO(C_RAL) ]OTE(A_CB);
				RC: "Isolator Alarm Latch (no debounce required)$N"
				    "";
				N: [XIO(Input.Pt00Data) ,XIC(A_ISO) XIO(C_RAL) ]OTE(A_ISO);
				RC: "******$N"
				    "Current Alarms$N"
				    "******$N"
				    "";
				N: [XIC(S_CurrentWarning.0) TON(Alm_Tmr[0],?,?) ,[XIC(Alm_Tmr[0].DN) ,XIC(Alm_Seal[0].0) XIO(Alm_Ack[0].0) ] [OTE(Alm_Seal[0].0) ,OTE(A_OLD) ] ,[XIC(C_RAL) XIO(Alm_Ack[0].0) ,XIC(Alm_Ack[0].0) ] XIC(Alm_Seal[0].0) OTE(Alm_Ack[0].0) ];
				N: [XIC(S_CurrentWarning.1) TON(Alm_Tmr[1],?,?) ,[XIC(Alm_Tmr[1].DN) ,XIC(A_PHL) XIO(Alm_Ack[0].1) ] [OTE(Alm_Seal[0].1) ,OTE(A_PHL) ] ,[XIC(C_RAL) XIO(Alm_Ack[0].1) ,XIC(Alm_Ack[0].1) ] XIC(Alm_Seal[0].1) OTE(Alm_Ack[0].1) ];
				N: [XIC(S_CurrentWarning.2) TON(Alm_Tmr[2],?,?) ,[XIC(Alm_Tmr[2].DN) ,XIC(A_GFL) XIO(Alm_Ack[0].2) ] OTE(Alm_Seal[0].2) OTE(A_GFL) ,[XIC(C_RAL) XIO(Alm_Ack[0].2) ,XIC(Alm_Ack[0].2) ] XIC(Alm_Seal[0].2) OTE(Alm_Ack[0].2) ];
				N: [XIC(S_CurrentWarning.3) TON(Alm_Tmr[3],?,?) ,[XIC(Alm_Tmr[3].DN) ,XIC(A_STA) XIO(Alm_Ack[0].3) ] OTE(Alm_Seal[0].3) OTE(A_STA) ,[XIC(C_RAL) XIO(Alm_Ack[0].3) ,XIC(Alm_Ack[0].3) ] XIC(Alm_Seal[0].3) OTE(Alm_Ack[0].3) ];
				N: [XIC(S_CurrentWarning.4) TON(Alm_Tmr[4],?,?) ,[XIC(Alm_Tmr[4].DN) ,XIC(A_JAM) XIO(Alm_Ack[0].4) ] OTE(Alm_Seal[0].4) OTE(A_JAM) ,[XIC(C_RAL) XIO(Alm_Ack[0].4) ,XIC(Alm_Ack[0].4) ] XIC(Alm_Seal[0].4) OTE(Alm_Ack[0].4) ];
				N: XIC(S_CurrentWarning.5)NOP();
				N: [XIC(S_CurrentWarning.6) TON(Alm_Tmr[6],?,?) ,[XIC(Alm_Tmr[6].DN) ,XIC(A_IMB) XIO(Alm_Ack[0].6) ] OTE(Alm_Seal[0].5) OTE(A_IMB) ,[XIC(C_RAL) XIO(Alm_Ack[0].6) ,XIC(Alm_Ack[0].6) ] XIC(Alm_Seal[0].6) OTE(Alm_Ack[0].6) ];
				N: [[XIO(C_COM) ,XIC(A_COM) XIO(Alm_Ack[0].7) ] OTE(Alm_Seal[0].7) OTE(A_COM) ,[XIC(C_RAL) XIO(Alm_Ack[0].7) ,XIC(Alm_Ack[0].7) ] XIC(Alm_Seal[0].7) OTE(Alm_Ack[0].7) ];
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "PERMITS OUT OF BLOCK$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Indicate whether interlocks are satisfied$N"
				    "$N"
				    "$T$N"
				    "";
				N: XIC(C_IOK)OTE(S_IOK);
				RC: "Indicate motor is running when feedback indicates the contact is closed$N"
				    "Note: Because contactors can weld, this status is dependent on the feedback only.";
				N: XIC(Input.Pt00Data)OTE(S_ISO);
				RC: "Indicate motor is running when feedback indicates the contact is closed$N"
				    "Note: Because contactors can weld, this status is dependent on the feedback only.";
				N: XIC(Input.Pt01Data)OTE(S_RUN);
				RC: "Indicate motor is running when feedback indicates the contact is closed$N"
				    "Note: Because contactors can weld, this status is dependent on the feedback only.";
				N: XIC(Input.Pt03Data)OTE(S_OLR);
				RC: "Signal rest of program that drive is faulted";
				N: [XIC(A_CMD) ,XIC(A_CB) ,XIC(A_ISO) ,XIC(A_FTS) ,XIC(S_Trip) ]OTE(S_FLT);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION a_E300Ovld_FVR (Description := "E300 Overload Relay (EtherNet/IP) w/FVR Starter",
	                                              Revision := "1.0",
	                                              RevisionExtension := "8294",
	                                              RevisionNote := "Original Version",
	                                              Vendor := "Factory Automation Systems",
	                                              ExecutePrescan := No,
	                                              ExecutePostscan := No,
	                                              ExecuteEnableInFalse := No,
	                                              CreatedDate := "2013-08-15T14:15:31.575Z",
	                                              CreatedBy := "Not Available",
	                                              EditedDate := "2019-09-26T00:51:58.039Z",
	                                              EditedBy := "DESKTOP-R0KGE9M\rober",
	                                              SoftwareRevision := "v32.01",
	                                              AdditionalHelpText := "Copyright © Factory Automation System  All Rights Reserved.$N$NThis Instruction controls and monitors a 193-ECM-ETR (E300$Non EtherNet/IP) Overload Relay and provides:$N$N*  Monitoring of warning of impending overloads$N*  Ideitification of overload trip conditions$N*  Countdown of time until overload trip can be reset$N*  Command to initiate a trip reset$NNOTE: 3 trips within a configurable time requires resetting the trip LOCALLY (at the relay)!$N*  Monitoring of states of relay$'s discrete inputs and discrete outputs$N*  Monitoring of various current, voltage and ground fault values (if available)$N*  Monitoring of I/O communication faults$N*  Alarms for Trip Warning, Overload Trip and I/O Fault$N*  Supports HMI $Qbreadcrumbs$Q for Alarm Inhibited, Bad Configuration, Not Ready$N$NDEVICE SETUP REQUIRED$N===================================================$NBe certain to set up the E300 Datalinks as follows!$N$'User Choice$' Datalinks are not used by this AOI and$Nmay be left unused or set up for your application.$N$NINPUT ASSEMBLY:$NDrive Status (standard)$NFeedback (standard)$N0. Time to Reset  (Par 3)$N1. Time to Start  (Par 31)$N2. Trip History #0  (Par 127)$N3. Warning History #0  (Par 133)$N4. Invalid Configuration Parameter Number  (Par 38)$N5. User choice #1$N6. User choice #2$N7. User choice #3$N$NOUTPUT ASSEMB:Y$NThis instruction only uses the Remote Trip and Remote Trip Reset command bits in the output assembly.")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			Input : AB:E300:I:3 (COMMENT.TRIPPRESENT := "Motor Starter$NTrip Present",
			                 COMMENT.PT00DATA := "Motor Disconnect$NClosed",
			                 COMMENT.PT01DATA := "Motor Starter Forward$NAux Input",
			                 COMMENT.PT02DATA := "Motor Starter Reverse$NAux Input",
			                 COMMENT.PT03DATA := "Circuit Breaker$NOn$NAux",
			                 Usage := InOut,
			                 Required := Yes,
			                 Visible := Yes);
			Output : AB:E300:O:1 (COMMENT.PT00DATA := "Forward Contactor Output",
			                  COMMENT.PT01DATA := "Reverse Contactor Output",
			                  Usage := InOut,
			                  Required := Yes,
			                  Visible := Yes);
			C_REM : BOOL (Description := "Remote Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_LOC : BOOL (Description := "Local Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_MNT : BOOL (Description := "Maintenance Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_SW_AUT : BOOL (Description := "Request Software Automatic mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_SW_MAN : BOOL (Description := "Request Software Manual mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_RUF : BOOL (Description := "Run Forward in Auto Mode Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_RUR : BOOL (Description := "Run Reverse in Auto Mode Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_JOF : BOOL (Description := "Operator Run Forward Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_JOR : BOOL (Description := "Operator Run Reverse Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_IOK : BOOL (Description := "Interlocks OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_RAL : BOOL (Description := "Reset Motor Alarms",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_COM : BOOL (Description := "1 = ENET Comms OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_TRIP : BOOL (Description := "1=Send Remote Trip request to Overload Relay",
			                  Usage := Input,
			                  RADIX := Decimal,
			                  Required := No,
			                  Visible := Yes,
			                  DefaultData := 0);
			C_WW_AUT : BOOL (Description := "Auto Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_MAN : BOOL (Description := "Manual Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_STF : BOOL (Description := "Manual Start Forward Request From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_Stop : BOOL (Description := "Manual Stop Request$NFrom HMI",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     DefaultData := 0);
			C_WW_STR : BOOL (Description := "Manual Start Reverse Request From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_RT : BOOL (Description := "Remote Trip from HMI",
			                   Usage := Input,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   DefaultData := 0);
			C_CFG_FailTime : DINT (Description := "Contactor failure time",
			                          Usage := Input,
			                          RADIX := Decimal,
			                          Required := Yes,
			                          Visible := Yes,
			                          DefaultData := 0);
			C_CFG_StopTime : DINT (Description := "Stopping Time Before Restart In Opposite Direction",
			                          Usage := Input,
			                          RADIX := Decimal,
			                          Required := Yes,
			                          Visible := Yes,
			                          DefaultData := 0);
			S_AUT : BOOL (Description := "Auto Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MAN : BOOL (Description := "Manual Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_SW_AUT : BOOL (Description := "Motor in Software Auto Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_SW_MAN : BOOL (Description := "Motor in Software Manual Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_LOC : BOOL (Description := "Local Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MNT : BOOL (Description := "Maintenance Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_IOK : BOOL (Description := "Interlocks Allow Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_OLR : BOOL (Description := "Overload Reset PB",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := No,
			                 ExternalAccess := Read/Write,
			                 DefaultData := 0);
			S_ISO : BOOL (Description := "Local Disconnect Closed",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := No,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_FLT : BOOL (Description := "Motor Fault",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RUF : BOOL (Description := "Motor Running Forward",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RUR : BOOL (Description := "Motor Running Reverse",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_COF : BOOL (Description := "Forward Contactor Output",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_COR : BOOL (Description := "Reverse Contactor Output",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_PctTherm : REAL (Description := "Motor Thermal Usage in Percent (Trip / Fault at 100%)",
			                      Usage := Output,
			                      RADIX := Float,
			                      Required := No,
			                      Visible := Yes,
			                      ExternalAccess := Read Only,
			                      DefaultData := 0.00000000e+000);
			S_CurrImbal : REAL (Description := "Currentt Imbalance (%)",
			                       Usage := Output,
			                       RADIX := Float,
			                       Required := No,
			                       Visible := Yes,
			                       ExternalAccess := Read Only,
			                       DefaultData := 0.00000000e+000);
			S_AvgPctFLA : REAL (Description := "Average Current as Percent Full Load Amps (%)",
			                       Usage := Output,
			                       RADIX := Float,
			                       Required := No,
			                       Visible := Yes,
			                       ExternalAccess := Read Only,
			                       DefaultData := 0.00000000e+000);
			S_AvgCurr : REAL (Description := "Average Current (Amps)",
			                     Usage := Output,
			                     RADIX := Float,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0.00000000e+000);
			S_L1Curr : REAL (Description := "L1 Phase Current (Amps)",
			                    Usage := Output,
			                    RADIX := Float,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0.00000000e+000);
			S_L2Curr : REAL (Description := "L2 Phase Current (Amps)",
			                    Usage := Output,
			                    RADIX := Float,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0.00000000e+000);
			S_L3Curr : REAL (Description := "L3 Phase Current (Amps)",
			                    Usage := Output,
			                    RADIX := Float,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0.00000000e+000);
			S_GndFaultCurr : REAL (Description := "Ground Fault Current (Amps)",
			                          Usage := Output,
			                          RADIX := Float,
			                          Required := No,
			                          Visible := Yes,
			                          ExternalAccess := Read Only,
			                          DefaultData := 0.00000000e+000);
			S_MinToReset : DINT (Description := "Time until overload can be reset (min in mmm:ss)",
			                        Usage := Output,
			                        RADIX := Decimal,
			                        Required := No,
			                        Visible := No,
			                        ExternalAccess := Read Only,
			                        DefaultData := 0);
			S_SecToReset : DINT (Description := "Time unitl overload can be reset (sec in mmm:ss)",
			                        Usage := Output,
			                        RADIX := Decimal,
			                        Required := No,
			                        Visible := No,
			                        ExternalAccess := Read Only,
			                        DefaultData := 0);
			S_MinToStart : DINT (Description := "Time until motor can be started (min in mmm:ss)",
			                        Usage := Output,
			                        RADIX := Decimal,
			                        Required := No,
			                        Visible := No,
			                        ExternalAccess := Read Only,
			                        DefaultData := 0);
			S_SecToStart : DINT (Description := "Time until motor can be started (sec in mmm:ss)",
			                        Usage := Output,
			                        RADIX := Decimal,
			                        Required := No,
			                        Visible := No,
			                        ExternalAccess := Read Only,
			                        DefaultData := 0);
			S_Fault : SINT (Description := "Device Fault Status 0=None, 15=Warning, 30=Tripped, 31=Local Reset Reqd, 32=I/O Fault, 34=Config Error",
			                   Usage := Output,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   ExternalAccess := Read Only,
			                   DefaultData := 0);
			S_MotorCurr : BOOL (Description := "1=Motor Current is Present",
			                       Usage := Output,
			                       RADIX := Decimal,
			                       Required := No,
			                       Visible := Yes,
			                       ExternalAccess := Read Only,
			                       DefaultData := 0);
			S_GFCurr : BOOL (Description := "1=Ground Fault Current is Present",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_InpPt00 : BOOL (Description := "Status of discrete input Pt00",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt01 : BOOL (Description := "Status of discrete input Pt01",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt02 : BOOL (Description := "Status of discrete input Pt02",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt03 : BOOL (Description := "Status of discrete input Pt03",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt04 : BOOL (Description := "Status of discrete input Pt04",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_InpPt05 : BOOL (Description := "Status of discrete input Pt05",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_OutPt00 : BOOL (Description := "Status of discrete output Pt00",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_OutPt01 : BOOL (Description := "Status of discrete output Pt01",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_OutPt02 : BOOL (Description := "Status of discrete output Pt02",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_CurrentTrip : INT (Description := "Current Trip Status Bits (Par 4)",
			                         COMMENT.0 := "1=Overload Trip",
			                         COMMENT.1 := "1=Phase Loss Trip",
			                         COMMENT.2 := "1=Ground Fault Current Trip",
			                         COMMENT.3 := "1=Stall Trip",
			                         COMMENT.4 := "1=Jam Trip",
			                         COMMENT.5 := "1=Underload Trip",
			                         COMMENT.6 := "1=Current Imbalance Trip",
			                         COMMENT.7 := "not used",
			                         COMMENT.8 := "not used",
			                         COMMENT.9 := "not used",
			                         COMMENT.10 := "not used",
			                         COMMENT.11 := "not used",
			                         COMMENT.12 := "not used",
			                         COMMENT.13 := "not used",
			                         COMMENT.14 := "not used",
			                         COMMENT.15 := "not used",
			                         Usage := Output,
			                         RADIX := Binary,
			                         Required := No,
			                         Visible := No,
			                         ExternalAccess := Read Only,
			                         DefaultData := 0);
			S_CurrentWarning : INT (Description := "Current Warning Status Bits (Par 10)",
			                            COMMENT.0 := "1=Overload Warning",
			                            COMMENT.1 := "1=Phase Loss Warning",
			                            COMMENT.2 := "1=Ground Fault Current Warning",
			                            COMMENT.3 := "1=Stall Warning",
			                            COMMENT.4 := "1=Jam Warning",
			                            COMMENT.5 := "1=Underload Warning",
			                            COMMENT.6 := "1=Current Imbalance Warning",
			                            COMMENT.7 := "not used",
			                            COMMENT.8 := "not used",
			                            COMMENT.9 := "not used",
			                            COMMENT.10 := "not used",
			                            COMMENT.11 := "not used",
			                            COMMENT.12 := "not used",
			                            COMMENT.13 := "not used",
			                            COMMENT.14 := "not used",
			                            COMMENT.15 := "not used",
			                            Usage := Output,
			                            RADIX := Binary,
			                            Required := No,
			                            Visible := No,
			                            ExternalAccess := Read Only,
			                            DefaultData := 0);
			S_ControlTrip : INT (Description := "Control Trip Status Bits (Par 7)",
			                         COMMENT.0 := "1=Test Trip",
			                         COMMENT.1 := "1=PTC Trip",
			                         COMMENT.2 := "1=DeviceLogix Trip 1",
			                         COMMENT.3 := "1=DeviceLogix Trip 2",
			                         COMMENT.4 := "1=Remote Trip",
			                         COMMENT.5 := "1=Blocked Start Trip",
			                         COMMENT.6 := "1=Hardware Fault Trip",
			                         COMMENT.7 := "1=Configuration Trip",
			                         COMMENT.8 := "1=Module Mismatch Trip",
			                         COMMENT.9 := "1=Expansion Bus Trip",
			                         COMMENT.10 := "not used",
			                         COMMENT.11 := "not used",
			                         COMMENT.12 := "1=Non-Volatile Memory Error Trip",
			                         COMMENT.13 := "not used",
			                         COMMENT.14 := "not used",
			                         COMMENT.15 := "not used",
			                         Usage := Output,
			                         RADIX := Binary,
			                         Required := No,
			                         Visible := No,
			                         ExternalAccess := Read Only,
			                         DefaultData := 0);
			S_ControlWarning : INT (Description := "Control Warning Status Bits (Par 13)",
			                            COMMENT.0 := "not used",
			                            COMMENT.1 := "1=PTC Warning",
			                            COMMENT.2 := "1=DeviceLogix Warning",
			                            COMMENT.3 := "not used",
			                            COMMENT.4 := "not used",
			                            COMMENT.5 := "not used",
			                            COMMENT.6 := "not used",
			                            COMMENT.7 := "not used",
			                            COMMENT.8 := "1=Module Mismatch Warning",
			                            COMMENT.9 := "1=DeviceLogix Feedback Timeout Warning",
			                            COMMENT.10 := "1=Expansion Bus Warning",
			                            COMMENT.11 := "1=Number of Starts Warning (PM)",
			                            COMMENT.12 := "1=Operating Hours Warning (PM)",
			                            COMMENT.13 := "not used",
			                            COMMENT.14 := "not used",
			                            COMMENT.15 := "not used",
			                            Usage := Output,
			                            RADIX := Binary,
			                            Required := No,
			                            Visible := No,
			                            ExternalAccess := Read Only,
			                            DefaultData := 0);
			S_LocalResetReqd : BOOL (Description := "Too many remote resets: go to starter, find cause, and reset there",
			                            Usage := Output,
			                            RADIX := Decimal,
			                            Required := No,
			                            Visible := Yes,
			                            ExternalAccess := Read Only,
			                            DefaultData := 0);
			S_NotRdy : BOOL (Description := "1=Device Not Ready, see detail bits for reason",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_Warn : BOOL (Description := "1=Warning of impending trip (See Sts_WarnBits for reason)",
			                  Usage := Output,
			                  RADIX := Decimal,
			                  Required := No,
			                  Visible := Yes,
			                  ExternalAccess := Read Only,
			                  DefaultData := 0);
			S_Trip : BOOL (Description := "1=Overload Tripped (See Sts_TripBits for reason)",
			                  Usage := Output,
			                  RADIX := Decimal,
			                  Required := No,
			                  Visible := Yes,
			                  ExternalAccess := Read Only,
			                  DefaultData := 0);
			S_IOFault : BOOL (Description := "I/O Comm Fault Status (0=OK, 1=Bad)",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_Rdy_Trip : BOOL (Description := "1=Ready to receive Remote_Trip $N(enables HMI button)",
			                      Usage := Output,
			                      RADIX := Decimal,
			                      Required := No,
			                      Visible := No,
			                      ExternalAccess := Read Only,
			                      DefaultData := 0);
			S_Rdy_TripReset : BOOL (Description := "1=Ready to receive OCmd_TripReset (enables HMI button)",
			                           Usage := Output,
			                           RADIX := Decimal,
			                           Required := No,
			                           Visible := No,
			                           ExternalAccess := Read Only,
			                           DefaultData := 0);
			A_CMD : BOOL (Description := "Motor Failed To Start",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_CB : BOOL (Description := "Main MCC Bucket$NCircuit Breaker$NTripped",
			                Usage := Output,
			                RADIX := Decimal,
			                Required := No,
			                Visible := Yes,
			                ExternalAccess := Read Only,
			                DefaultData := 0);
			A_ISO : BOOL (Description := "Isolator Switched Off",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_FTS : BOOL (Description := "Motor Failed To Stop",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_COM : BOOL (Description := "1 = Comm Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_OLD : BOOL (Description := "1 = Overload Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_PHL : BOOL (Description := "1 = Phase Loss Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_GFL : BOOL (Description := "1= Ground Fault Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_STA : BOOL (Description := "1 = Stall Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_JAM : BOOL (Description := "1 = Jam Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_IMB : BOOL (Description := "1 = Current Imbalance Alarm",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			StopReq : BOOL (Description := "Stop Request Latch",
			                   Usage := Input,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   DefaultData := 0);
			EntryStatus : DINT (Description := "Entry Status For COM Check",
			                       Usage := Input,
			                       RADIX := Decimal,
			                       Required := No,
			                       Visible := No,
			                       DefaultData := 0);
		END_PARAMETERS

		LOCAL_TAGS
			Temp_Fault : SINT (Description := "Buffer used to build Val_Fault",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			TripResetTimer : TIMER (Description := "Timer for pulsing Trip Reset output",
			                         ExternalAccess := None,
			                         DefaultData := "[0,5000,0]");
			ThirdTripResetTimer : TIMER (Description := "Time since third remote trip reset",
			                              ExternalAccess := None,
			                              DefaultData := "[0,0,0]");
			SecondTripResetTimer : TIMER (Description := "Time since second remote trip reset",
			                               ExternalAccess := None,
			                               DefaultData := "[0,0,0]");
			FirstTripResetTimer : TIMER (Description := "Time since first remote trip reset",
			                              ExternalAccess := None,
			                              DefaultData := "[0,0,0]");
			TripResetONS : BOOL (Description := "A remote trip reset was issued - one-shot store",
			                       RADIX := Decimal,
			                       ExternalAccess := None,
			                       DefaultData := 0);
			TripReset : BOOL (Description := "A remote trip reset was issued this scan",
			                    RADIX := Decimal,
			                    ExternalAccess := None,
			                    DefaultData := 0);
			RemTripTimer : TIMER (Description := "Timer for pulsing Remote Trip output",
			                       ExternalAccess := None,
			                       DefaultData := "[0,5000,0]");
			USINTtoDINT : DINT (Description := "Convert USINT (unsigned) to DINT",
			                      RADIX := Decimal,
			                      ExternalAccess := None,
			                      DefaultData := 0);
			Alm_Ack : INT[2] (Description := "Alarm Acknowledge Array",
			                  COMMENT[0] := "Current Alarm Acknowledge",
			                  RADIX := Decimal,
			                  ExternalAccess := None,
			                  DefaultData := "[0,0]");
			Alm_Tmr : TIMER[32] (Description := "Alarm Debounce Timer",
			                  ExternalAccess := None,
			                  DefaultData := "[[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,2000,0],[0,2000,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]]");
			Alm_Seal : INT[2] (Description := "Sealed Alarm",
			                   COMMENT[0] := "Current Sealed Alarm",
			                   RADIX := Decimal,
			                   ExternalAccess := None,
			                   DefaultData := "[0,0]");
			OvldResetTime : DINT (Description := "Overload Time to Reset",
			                        RADIX := Decimal,
			                        ExternalAccess := None,
			                        DefaultData := 0);
			OvldTripTime : DINT (Description := "Overload Time to a Trip",
			                       RADIX := Decimal,
			                       ExternalAccess := None,
			                       DefaultData := 0);
			InvalidCfgCause : DINT (Description := "Invalid Configuration Cause",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			InvalidCfgParam : DINT (Description := "Invalid Configuration Parameter Number",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			RestartTryTime : DINT (Description := "Auto Restart Time To Try",
			                         RADIX := Decimal,
			                         ExternalAccess := None,
			                         DefaultData := 0);
			RestartAvailTrips : DINT (Description := "Auto Restart Trips Available",
			                            RADIX := Decimal,
			                            ExternalAccess := None,
			                            DefaultData := 0);
			RestartTripCnt : DINT (Description := "Auto Restart Trip Count",
			                         RADIX := Decimal,
			                         ExternalAccess := None,
			                         DefaultData := 0);
			OperHours : DINT (Description := "Operating Hours",
			                    RADIX := Decimal,
			                    ExternalAccess := None,
			                    DefaultData := 0);
			RunAutoFWD : BOOL (Description := "Run Forward in automatic mode",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			RunMaintenanceFWD : BOOL (Description := "Run Forward in maintenance mode",
			                            RADIX := Decimal,
			                            ExternalAccess := None,
			                            DefaultData := 0);
			RunManualFWD : BOOL (Description := "Run Forward in manual mode",
			                       RADIX := Decimal,
			                       ExternalAccess := None,
			                       DefaultData := 0);
			DevFailTimerFWD : TIMER (Description := "Device Failure Alarm Timer Forward",
			                          ExternalAccess := Read/Write,
			                          DefaultData := "[0,0,0]");
			RunMaintenanceREV : BOOL (Description := "Run Reverse in maintenance mode",
			                            RADIX := Decimal,
			                            ExternalAccess := None,
			                            DefaultData := 0);
			StopWatchdogFWD : TIMER (Description := "Ensure motor direction cannot be changed $N$Qon the fly$Q",
			                          ExternalAccess := None,
			                          DefaultData := "[0,0,0]");
			StopWatchdogREV : TIMER (Description := "Ensure motor direction cannot be changed $N$Qon the fly$Q",
			                          ExternalAccess := None,
			                          DefaultData := "[0,0,0]");
			RunManualREV : BOOL (Description := "Run Reverse in manual mode",
			                       RADIX := Decimal,
			                       ExternalAccess := None,
			                       DefaultData := 0);
			RunAutoREV : BOOL (Description := "Run Reverse in automatic mode",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			DevFailTimerREV : TIMER (Description := "Device Failure Alarm Timer Reverse",
			                          ExternalAccess := None,
			                          DefaultData := "[0,0,0]");
		END_LOCAL_TAGS

		ROUTINE Logic (Description := "Send commands to and process information from E1Plus Overload Relay on EtherNet/IP")
				RC: "******$N"
				    "P_E300Ovld:  Process -- E300 Overload Relay on EtherNet/IP$N"
				    "$N"
				    "Factory Automation Version 1.0$N"
				    "$N"
				    "This Instruction controls and monitors a 193-ECM-ETR (E300$N"
				    "on EtherNet/IP) Overload Relay and provides:$N"
				    "$N"
				    "*  Monitoring of warning of impending overloads$N"
				    "*  Ideitification of overload trip conditions$N"
				    "*  Countdown of time until overload trip can be reset$N"
				    "*  Command to initiate a remote test trip$N"
				    "*  Command to initiate a trip reset$N"
				    "NOTE: 3 trips within a configurable time requires resetting the trip LOCALLY (at the relay)!$N"
				    "*  Monitoring of states of relay$'s discrete inputs and discrete outputs$N"
				    "*  Monitoring of various current, voltage and ground fault values (if available)$N"
				    "*  Monitoring of I/O communication faults$N"
				    "*  Alarms for Overload Trip and I/O Fault$N"
				    "*  Supports HMI $Qbreadcrumbs$Q for Bad Configuration, Not Ready, etc$N"
				    "******$N"
				    "";
				N: NOP();
				RC: "******$N"
				    "E300 Configuration Processing$N"
				    "$N"
				    "This rung sets Configuration data (timer presets) and distributes as needed.$N"
				    "$N"
				    "3600000 msec (3600 sec / 1 hr) is the time in which (1, 2, or 3) remote trip resets $N"
				    "are allowed before the trip must be reset at the device (force investigation).$N"
				    "$N"
				    "Set the number of remote trip resets (3) that are allowed  $N"
				    "before the trip must be reset at the device (force investigation).$N"
				    "******$N"
				    "";
				N: [MOV(5000,TripResetTimer.PRE) MOV(3600000,FirstTripResetTimer.PRE) ,MOV(FirstTripResetTimer.PRE,SecondTripResetTimer.PRE) MOV(FirstTripResetTimer.PRE,ThirdTripResetTimer.PRE) ];
				RC: "******$N"
				    "E300 Datalink Processing$N"
				    "******$N"
				    "";
				N: [MOV(Input.UserDefinedData[0],OvldTripTime) MOV(Input.UserDefinedData[1],OvldResetTime) MOV(Input.UserDefinedData[2],OperHours) MOV(Input.UserDefinedData[3],RestartTripCnt) ,MOV(Input.UserDefinedData[4],RestartAvailTrips) MOV(Input.UserDefinedData[5],RestartTryTime) MOV(Input.UserDefinedData[6],InvalidCfgParam) MOV(Input.UserDefinedData[7],InvalidCfgCause) ];
				RC: "******$N"
				    "E300 Device Command Handling$N"
				    "$N"
				    "If an Overload Trip Reset command is received, reset the command$'s TOF timer to send the command to the overload relay.$N"
				    "$N"
				    "Note: Disable the the Trip Reset if the Remote Trip is active!  (It has priority.)$N"
				    "******$N"
				    "";
				N: XIC(C_RAL)XIO(S_LocalResetReqd)XIO(RemTripTimer.TT)TOF(TripResetTimer,?,?);
				RC: "******$N"
				    "If an Overload Trip command is received, reset the command$'s TOF timer to send the command to the overload relay.$N"
				    "******$N"
				    "";
				N: XIC(C_TRIP)TOF(RemTripTimer,?,?);
				RC: "******$N"
				    "Device Trip Reset & Remote Trip Output Handling$N"
				    "$N"
				    "Pulse the Trip Reset or Remote Trip output for the required time when activated.$N"
				    "******$N"
				    "";
				N: [XIC(TripResetTimer.DN) OTE(Output.TripReset) ,XIC(RemTripTimer.DN) OTE(Output.RemoteTrip) ];
				RC: "******$N"
				    "E300 Device Status$N"
				    "$N"
				    "Use the Device Status bits from the overload relay input $N"
				    "Data Structure  to set the appropriate Status bits of this instruction.$N"
				    "*****$N"
				    "";
				N: [XIC(Input.WarningPresent) OTE(S_Warn) ,[XIC(Input.TripPresent) OTE(S_Trip) ,NEQ(Input.Fault,0) OTE(S_IOFault) ] OTE(S_NotRdy) ];
				N: [XIC(Input.MotorCurrentPresent) OTE(S_MotorCurr) ,XIC(Input.GroundFaultCurrentPresent) OTE(S_GFCurr) ];
				N: [XIC(Input.Pt00Readback) OTE(S_OutPt00) ,XIC(Input.Pt01Readback) OTE(S_OutPt01) ,XIC(Input.Pt02Readback) OTE(S_OutPt02) ,XIC(Input.Pt00Data) OTE(S_InpPt00) ,XIC(Input.Pt01Data) OTE(S_InpPt01) ,XIC(Input.Pt02Data) OTE(S_InpPt02) ,XIC(Input.Pt03Data) OTE(S_InpPt03) ,XIC(Input.Pt04Data) OTE(S_InpPt04) ,XIC(Input.Pt05Data) OTE(S_InpPt05) ];
				RC: "******$N"
				    "Generate Remaining E300 Status$N"
				    "******$N"
				    "";
				N: [MOV(Input.Protection.CurrentTripStatus,S_CurrentTrip) MOV(Input.Protection.CurrentWarningStatus,S_CurrentWarning) ,MOV(Input.Protection.ControlTripStatus,S_ControlTrip) MOV(Input.Protection.ControlWarningStatus,S_ControlWarning) ];
				RC: "******$N"
				    "Generate E300 Values$N"
				    "******$N"
				    "";
				N: [CLR(USINTtoDINT) BTD(Input.PercentTCU,0,USINTtoDINT,0,8) MOV(USINTtoDINT,S_PctTherm) ,BTD(Input.CurrentImbalance,0,USINTtoDINT,0,8) MOV(USINTtoDINT,S_CurrImbal) ,DIV(Input.AvgPercentFLA,10.0,S_AvgPctFLA) DIV(Input.GroundFaultCurrent,100.0,S_GndFaultCurr) ,DIV(Input.AvgCurrent,100.0,S_AvgCurr) DIV(Input.L1Current,100.0,S_L1Curr) DIV(Input.L2Current,100.0,S_L2Curr) DIV(Input.L3Current,100.0,S_L3Curr) ];
				RC: "******$N"
				    "Set a $QRemote Trip Reset$Q bit for 1 Scan for Trip Reset Tracking Timers that follow$N"
				    "******$N"
				    "";
				N: XIC(Output.TripReset)XIC(Input.TripPresent)ONS(TripResetONS)OTE(TripReset);
				RC: "Track the time since the THIRD remote trip reset activation.";
				N: [XIC(TripReset) XIC(FirstTripResetTimer.TT) XIC(SecondTripResetTimer.TT) ,XIC(ThirdTripResetTimer.TT) ]TON(ThirdTripResetTimer,?,?);
				RC: "Track the time since the SECOND remote trip reset activation.";
				N: [XIC(TripReset) XIC(FirstTripResetTimer.TT) ,XIC(SecondTripResetTimer.TT) ]TON(SecondTripResetTimer,?,?);
				RC: "Track the time since the FIRST remote trip reset activation.";
				N: [XIC(TripReset) ,XIC(FirstTripResetTimer.TT) ]TON(FirstTripResetTimer,?,?);
				RC: "******$N"
				    "If there have been 3 remote trip reset activations in the last 60 minutes / 1 hour,$N"
				    "show the $QLocal Reset Required$Q status and inhibit further remote trip resets.$N"
				    "******$N"
				    "";
				N: [XIC(FirstTripResetTimer.TT) XIC(SecondTripResetTimer.TT) XIC(ThirdTripResetTimer.TT) ,XIC(S_LocalResetReqd) ]XIC(Input.TripPresent)XIO(Output.TripReset)OTE(S_LocalResetReqd);
				RC: "******$N"
				    "E300 Command Readies$N"
				    "$N"
				    "If the overload relay is tripped, and if we$'re not already sending a Trip Reset$N"
				    "request, and we are not sending a Remote Trip and we have not had too many $N"
				    "remote trip resets recently, show the relay as Ready for Trip Reset$N"
				    "******$N"
				    "";
				N: XIC(Input.TripPresent)XIO(Output.TripReset)XIO(Output.RemoteTrip)XIO(S_LocalResetReqd)OTE(S_Rdy_TripReset);
				RC: "If the overload relay is NOT tripped, and if we$'re not already sending it a Remote Trip$N"
				    "request, show it as Ready to Trip (per security level as allowed by configuration).";
				N: XIO(Input.TripPresent)XIO(Output.TripReset)OTE(S_Rdy_Trip);
				RC: "This rung takes the time remaining until the overload will allow a reset and$N"
				    "reports it in  minutes : seconds format for display on the HMI.$N"
				    "A value of zero or 9999 is displayed as 000:00.";
				N: [LIM(1,OvldResetTime,9998) DIV(OvldResetTime,60,S_MinToReset) MOD(OvldResetTime,60,S_SecToReset) ,LIM(9999,OvldResetTime,0) CLR(S_MinToReset) CLR(S_SecToReset) ];
				RC: "This rung takes the time remaining until the overload will allow a motor start and$N"
				    "reports it in  minutes : seconds format for display on the HMI.$N"
				    "A value of zero or 9999 is displayed as 000:00.$N"
				    "";
				N: [LIM(1,RestartTryTime,9998) DIV(RestartTryTime,60,S_MinToStart) MOD(RestartTryTime,60,S_SecToStart) ,LIM(9999,RestartTryTime,0) CLR(S_MinToStart) CLR(S_SecToStart) ];
				RC: "Val_Fault reflects the Fault Status of the device:$N"
				    "0 = No Faults$N"
				    "15 = Impending Trip Warning$N"
				    "30 = Overload Relay Tripped$N"
				    "31 = Local Reset Required$N"
				    "32 = I/O Fault$N"
				    "34 = Configuration Error";
				N: [CLR(Temp_Fault) ,XIC(S_Warn) MOV(15,Temp_Fault) ,XIC(S_Trip) [MOV(30,Temp_Fault) ,XIC(S_LocalResetReqd) MOV(31,Temp_Fault) ] ,XIC(S_IOFault) MOV(32,Temp_Fault) ,MOV(Temp_Fault,S_Fault) ];
				RC: "Mode Selection : Software Auto and Software Manual mode statuses are only active when the switch is in REMOTE$N"
				    "";
				N: [XIC(C_SW_AUT) ,XIC(S_SW_AUT) ]XIO(C_SW_MAN)OTE(S_SW_AUT);
				N: XIO(S_SW_AUT)OTE(S_SW_MAN);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_AUT)OTE(S_AUT);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_MAN)OTE(S_MAN);
				N: XIC(C_LOC)XIO(C_MNT)OTE(S_LOC);
				N: XIC(C_MNT)OTE(S_MNT);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "MOTOR RUN LOGIC$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "MAINTENANCE RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run under any circumstances whilst in maintence mode";
				N: XIC(S_MNT)XIC(C_JOF)XIO(C_JOR)XIO(StopWatchdogREV.DN)OTE(RunMaintenanceFWD);
				N: XIC(S_MNT)XIC(C_JOR)XIO(C_JOF)XIO(StopWatchdogFWD.DN)OTE(RunMaintenanceREV);
				RC: "MANUAL RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in manual mode$N"
				    "$N"
				    "$N"
				    "";
				N: [XIC(S_MAN) ,XIC(S_LOC) ]XIC(C_JOF)XIO(C_JOR)XIC(C_IOK)XIO(S_FLT)XIO(StopWatchdogREV.DN)OTE(RunManualFWD);
				N: [XIC(S_MAN) ,XIC(S_LOC) ]XIC(C_JOR)XIO(C_JOF)XIC(C_IOK)XIO(S_FLT)XIO(StopWatchdogFWD.DN)OTE(RunManualREV);
				RC: "AUTOMATIC RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in automatic mode$N"
				    "$N"
				    "$N"
				    "";
				N: XIC(S_AUT)XIC(C_RUF)XIO(C_RUR)XIC(C_IOK)XIO(S_FLT)XIO(StopWatchdogREV.DN)OTE(RunAutoFWD);
				N: XIC(S_AUT)XIC(C_RUR)XIO(C_RUF)XIC(C_IOK)XIO(S_FLT)XIO(StopWatchdogFWD.DN)OTE(RunAutoREV);
				RC: "RUN COMMAND$N"
				    "$N"
				    "Collect running possibilities and send to contactor$N"
				    "$N"
				    "";
				N: [XIC(RunMaintenanceFWD) ,XIC(RunManualFWD) ,XIC(RunAutoFWD) ][OTE(S_COF) ,OTE(Output.Pt00Data) ,OTE(Output.LogicDefinedPt00Data) ];
				N: [XIC(RunMaintenanceREV) ,XIC(RunManualREV) ,XIC(RunAutoREV) ][OTE(S_COR) ,OTE(Output.Pt01Data) ,OTE(Output.LogicDefinedPt01Data) ];
				RC: "Configure stop timer$N"
				    "Note that this applies to all states, whether auto or manual";
				N: MOV(C_CFG_StopTime,StopWatchdogFWD.PRE)MOV(C_CFG_StopTime,StopWatchdogREV.PRE);
				RC: "Check that motor has been stopped a reasonable time before allowing a restart in either direction";
				N: XIC(S_COF)TOF(StopWatchdogFWD,?,?);
				N: XIC(S_COR)TOF(StopWatchdogREV,?,?);
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "ALARMS$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Configure device$N"
				    "";
				N: MOV(C_CFG_FailTime,DevFailTimerFWD.PRE)MOV(C_CFG_FailTime,DevFailTimerREV.PRE);
				RC: "RUNNING FORWARD: $N"
				    "Motor Start / Stop Failure Alarm Timer (command failed)";
				N: [XIC(S_COF) XIO(Input.Pt01Data) ,XIO(S_COF) XIC(Input.Pt01Data) ]TON(DevFailTimerFWD,?,?);
				RC: "RUNNING REVERSE: $N"
				    "Motor Start / Stop Failure Alarm Timer (command failed) $N"
				    "$N"
				    "";
				N: [XIC(S_COR) XIO(Input.Pt02Data) ,XIO(S_COR) XIC(Input.Pt02Data) ]TON(DevFailTimerREV,?,?);
				RC: "$N"
				    "Motor Start Failure Alarm Timer (command failed) Alarm Latch$N"
				    "$N"
				    "";
				N: [XIC(DevFailTimerFWD.DN) XIC(S_COF) XIO(Input.Pt01Data) ,XIC(DevFailTimerREV.DN) XIC(S_COR) XIO(Input.Pt02Data) ,XIC(A_CMD) XIO(C_RAL) ]OTE(A_CMD);
				RC: "$N"
				    "Motor Failed To Stop / Hand Mode Alarm Timer (Selector Switch in Hand) Alarm Latch";
				N: [XIC(DevFailTimerFWD.DN) XIO(S_COF) XIC(Input.Pt01Data) ,XIC(DevFailTimerREV.DN) XIO(S_COR) XIC(Input.Pt02Data) ,XIC(A_FTS) XIO(C_RAL) ]OTE(A_FTS);
				RC: "Motor Circuit Protection Alarm Latch (no debounce required)";
				N: [XIO(Input.Pt03Data) ,XIC(A_CB) XIO(C_RAL) ]OTE(A_CB);
				RC: "Isolator Alarm Latch (no debounce required)$N"
				    "";
				N: [XIO(Input.Pt00Data) ,XIC(A_ISO) XIO(C_RAL) ]OTE(A_ISO);
				RC: "******$N"
				    "Current Alarms$N"
				    "******$N"
				    "";
				N: [XIC(S_CurrentWarning.0) TON(Alm_Tmr[0],?,?) ,[XIC(Alm_Tmr[0].DN) ,XIC(Alm_Seal[0].0) XIO(Alm_Ack[0].0) ] [OTE(Alm_Seal[0].0) ,OTE(A_OLD) ] ,[XIC(C_RAL) XIO(Alm_Ack[0].0) ,XIC(Alm_Ack[0].0) ] XIC(Alm_Seal[0].0) OTE(Alm_Ack[0].0) ];
				N: [XIC(S_CurrentWarning.1) TON(Alm_Tmr[1],?,?) ,[XIC(Alm_Tmr[1].DN) ,XIC(A_PHL) XIO(Alm_Ack[0].1) ] [OTE(Alm_Seal[0].1) ,OTE(A_PHL) ] ,[XIC(C_RAL) XIO(Alm_Ack[0].1) ,XIC(Alm_Ack[0].1) ] XIC(Alm_Seal[0].1) OTE(Alm_Ack[0].1) ];
				N: [XIC(S_CurrentWarning.2) TON(Alm_Tmr[2],?,?) ,[XIC(Alm_Tmr[2].DN) ,XIC(A_GFL) XIO(Alm_Ack[0].2) ] OTE(Alm_Seal[0].2) OTE(A_GFL) ,[XIC(C_RAL) XIO(Alm_Ack[0].2) ,XIC(Alm_Ack[0].2) ] XIC(Alm_Seal[0].2) OTE(Alm_Ack[0].2) ];
				N: [XIC(S_CurrentWarning.3) TON(Alm_Tmr[3],?,?) ,[XIC(Alm_Tmr[3].DN) ,XIC(A_STA) XIO(Alm_Ack[0].3) ] OTE(Alm_Seal[0].3) OTE(A_STA) ,[XIC(C_RAL) XIO(Alm_Ack[0].3) ,XIC(Alm_Ack[0].3) ] XIC(Alm_Seal[0].3) OTE(Alm_Ack[0].3) ];
				N: [XIC(S_CurrentWarning.4) TON(Alm_Tmr[4],?,?) ,[XIC(Alm_Tmr[4].DN) ,XIC(A_JAM) XIO(Alm_Ack[0].4) ] OTE(Alm_Seal[0].4) OTE(A_JAM) ,[XIC(C_RAL) XIO(Alm_Ack[0].4) ,XIC(Alm_Ack[0].4) ] XIC(Alm_Seal[0].4) OTE(Alm_Ack[0].4) ];
				N: XIC(S_CurrentWarning.5)NOP();
				N: [XIC(S_CurrentWarning.6) TON(Alm_Tmr[6],?,?) ,[XIC(Alm_Tmr[6].DN) ,XIC(A_IMB) XIO(Alm_Ack[0].6) ] OTE(Alm_Seal[0].5) OTE(A_IMB) ,[XIC(C_RAL) XIO(Alm_Ack[0].6) ,XIC(Alm_Ack[0].6) ] XIC(Alm_Seal[0].6) OTE(Alm_Ack[0].6) ];
				N: [[XIO(C_COM) ,XIC(A_COM) XIO(Alm_Ack[0].7) ] OTE(Alm_Seal[0].7) OTE(A_COM) ,[XIC(C_RAL) XIO(Alm_Ack[0].7) ,XIC(Alm_Ack[0].7) ] XIC(Alm_Seal[0].7) OTE(Alm_Ack[0].7) ];
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "PERMITS OUT OF BLOCK$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Indicate whether interlocks are satisfied$N"
				    "$N"
				    "$T$N"
				    "";
				N: XIC(C_IOK)OTE(S_IOK);
				RC: "Indicate motor is running when feedback indicates the contact is closed$N"
				    "Note: Because contactors can weld, this status is dependent on the feedback only.";
				N: XIC(Input.Pt00Data)OTE(S_ISO);
				RC: "Indicate motor is running when feedback indicates the contact is closed$N"
				    "Note: Because contactors can weld, this status is dependent on the feedback only.";
				N: XIC(Input.Pt01Data)OTE(S_RUF);
				N: XIC(Input.Pt02Data)OTE(S_RUR);
				RC: "Indicate motor is running when feedback indicates the contact is closed$N"
				    "Note: Because contactors can weld, this status is dependent on the feedback only.";
				N: XIC(Input.Digital1Pt00Data)OTE(S_OLR);
				RC: "Signal rest of program that drive is faulted";
				N: [XIC(A_CMD) ,XIC(A_CB) ,XIC(A_ISO) ,XIC(A_FTS) ,XIC(S_Trip) ]OTE(S_FLT);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION A_Uniform_RNG (Description := "Random Number Generator AOI$NUses Linear Congruential Generator (LCG)$N1) Get Seed Number from either previous execution or default$N2) Generate next Seed via LCG$N4) Step #4 = Scale Seed to output range [Out_lo:out_hi)$N",
	                                             Revision := "1.0",
	                                             ExecutePrescan := No,
	                                             ExecutePostscan := No,
	                                             ExecuteEnableInFalse := No,
	                                             CreatedDate := "2019-12-25T19:53:36.259Z",
	                                             CreatedBy := "DOMAIN1\carp",
	                                             EditedDate := "2019-12-30T20:11:24.531Z",
	                                             EditedBy := "DOMAIN1\carp",
	                                             SoftwareRevision := "v28.01")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			Seed : DINT (Description := "LCG input seed; updated after each execution",
			                Usage := Input,
			                RADIX := Decimal,
			                Required := Yes,
			                Visible := Yes,
			                DefaultData := 0);
			A : DINT (Description := "LCG multiplicative parameter A$N in (Seed(n+1) = Seed(n) * A + C) MOD Modulus; default is from glibc implementation",
			             Usage := Input,
			             RADIX := Decimal,
			             Required := Yes,
			             Visible := Yes,
			             DefaultData := 110351245);
			B : DINT (Description := "LCG additive parameter A$N in Seed(n+1) = (Seed(n) * A + C) MOD Modulus; default PJC/BTC/WA value",
			             Usage := Input,
			             RADIX := Decimal,
			             Required := Yes,
			             Visible := Yes,
			             DefaultData := 12345);
			Out_lo : REAL (Description := "Output value when updated seed is 0",
			                  Usage := Input,
			                  RADIX := Float,
			                  Required := Yes,
			                  Visible := Yes,
			                  DefaultData := 0.00000000e+000);
			Out_hi : REAL (Description := "Output value for an updated seed of 2**31 (theoretical)",
			                  Usage := Input,
			                  RADIX := Float,
			                  Required := Yes,
			                  Visible := Yes,
			                  DefaultData := 1.00000000e+000);
			Output_scaled : REAL (Description := "Actual output value at each execution",
			                         Usage := Output,
			                         RADIX := Float,
			                         Required := Yes,
			                         Visible := Yes,
			                         ExternalAccess := Read Only,
			                         DefaultData := 0.00000000e+000);
			Seed_Out : DINT (Description := "LCG Calculation Seed Output",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := Yes,
			                    Visible := Yes,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
		END_PARAMETERS

		LOCAL_TAGS
			Se : DINT (Description := "Internal copy, and calculation, of seed",
			             RADIX := Decimal,
			             ExternalAccess := None,
			             DefaultData := 0);
			float_internal : REAL (Description := "Intermediate calculations for output scaling",
			                         RADIX := Float,
			                         ExternalAccess := None,
			                         DefaultData := 0.00000000e+000);
		END_LOCAL_TAGS

		ROUTINE Logic 
				RC: "Random Number Generator using Linear Congruential Generator";
				N: NOP();
				RC: "This rung updates Seed:  Seed(n+1) = (Seed(n) * A + B) MOD (2**31)$N"
				    "N.B. MOD is implemented via DINT overflow plus bit-wise AND with (2**31 - 1) i.e. 0x7FFFFFFF.,$N"
				    "so local tag [Seed_internal] may not be the same as the final seed after the AND-cum-MOD$N"
				    "";
				N: MUL(Seed,A,Se)ADD(Se,B,Se)OR(Se,-2147483648,Seed_Out);
				N: OTU(S:V);
				RC: "This rung scales Seed to Output_scaled:  Output_scaled(n+1) = Func(Seed(n+1),Out_lo,Out_hi)";
				N: DIV(Seed_Out,-2147483648.0,float_internal)CPT(Output_scaled,((1.0 - float_internal) * Out_lo) + (float_internal * Out_hi));
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION A_Gauss_RNG (Revision := "1.0",
	                                           ExecutePrescan := No,
	                                           ExecutePostscan := No,
	                                           ExecuteEnableInFalse := No,
	                                           CreatedDate := "2019-12-25T23:30:46.260Z",
	                                           CreatedBy := "DOMAIN1\carp",
	                                           EditedDate := "2019-12-30T21:51:56.343Z",
	                                           EditedBy := "FAS-ENG-PJC\image",
	                                           SoftwareRevision := "v20.04")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			GNG_Out : REAL (Description := "Gaussian-Distributed Random Number",
			                   Usage := Output,
			                   RADIX := Float,
			                   Required := Yes,
			                   Visible := Yes,
			                   ExternalAccess := Read Only,
			                   DefaultData := 0.00000000e+000);
		END_PARAMETERS

		LOCAL_TAGS
			A_URNG : A_Uniform_RNG (ExternalAccess := None,
			                 DefaultData := "[1,0,110351245,12345,0.00000000e+000,1.00000000e+000,0.00000000e+000,0,0,0.00000000e+000]");
			Seed_B : DINT (RADIX := Decimal,
			                 ExternalAccess := None,
			                 DefaultData := 0);
			Seed_A : DINT (RADIX := Decimal,
			                 ExternalAccess := None,
			                 DefaultData := 0);
			B_URNG : A_Uniform_RNG (ExternalAccess := None,
			                 DefaultData := "[1,0,110351245,12345,0.00000000e+000,1.00000000e+000,0.00000000e+000,0,0,0.00000000e+000]");
			AOI_FS : BOOL (Description := "Gaussian Random Number Generator First Execution Done",
			                 RADIX := Decimal,
			                 ExternalAccess := None,
			                 DefaultData := 0);
			Odd_Even : BOOL (Description := "Odd Even Scan Bit",
			                   RADIX := Decimal,
			                   ExternalAccess := None,
			                   DefaultData := 0);
			Z2 : REAL (Description := "Trig Term",
			             RADIX := Float,
			             ExternalAccess := None,
			             DefaultData := 0.00000000e+000);
			Z1 : REAL (Description := "SQR Term",
			             RADIX := Float,
			             ExternalAccess := None,
			             DefaultData := 0.00000000e+000);
		END_LOCAL_TAGS

		ROUTINE Logic 
				N: XIO(AOI_FS)MOV(0,B_URNG.Seed_Out);
				N: [XIO(Odd_Even) ,XIO(AOI_FS) ]A_Uniform_RNG(A_URNG,B_URNG.Seed_Out,A_URNG.A,A_URNG.B,A_URNG.Out_lo,A_URNG.Out_hi,A_URNG.Output_scaled,Seed_A)A_Uniform_RNG(B_URNG,A_URNG.Seed_Out,B_URNG.A,B_URNG.B,B_URNG.Out_lo,B_URNG.Out_hi,B_URNG.Output_scaled,Seed_B);
				N: [XIO(Odd_Even) ,XIO(AOI_FS) ]LN(A_URNG.Output_scaled,Z1)MUL(Z1,-2.0,Z1)SQR(Z1,Z1);
				N: [XIO(Odd_Even) ,XIO(AOI_FS) ]MUL(B_URNG.Output_scaled,6.283185307179586476925286766559,Z2)COS(Z2,Z2);
				N: XIC(Odd_Even)XIC(AOI_FS)MUL(B_URNG.Output_scaled,6.283185307179586476925286766559,Z2)SIN(Z2,Z2);
				N: MUL(Z1,Z2,GNG_Out);
				N: [[XIO(Odd_Even) ,XIO(AOI_FS) ] OTE(Odd_Even) ,OTE(AOI_FS) ];
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION a_MotorFVNR (Description := "Single direction Motor, 3DI1DO$N",
	                                           Revision := "1.0",
	                                           RevisionExtension := "8294",
	                                           RevisionNote := "Single direction & speed$NContactor, isolator and TOL feedback",
	                                           ExecutePrescan := No,
	                                           ExecutePostscan := No,
	                                           ExecuteEnableInFalse := No,
	                                           CreatedDate := "2009-07-16T01:06:22.775Z",
	                                           CreatedBy := "MAR-RA09-VB\Rockwell2009",
	                                           EditedDate := "2019-09-26T00:49:34.383Z",
	                                           EditedBy := "DESKTOP-R0KGE9M\rober",
	                                           SoftwareRevision := "v32.01",
	                                           AdditionalHelpText := "Note that data that goes directly to the HMI is shown on the block interface (visible), but is not required. This means the programmer can see the status of the device block from the calling subroutine, but does not have to create intermediate tags for this information.$N$NAll time configurations are in milliseconds, as per the Controllogix standard$N$NEvery comment beginning with HMI can be controlled from the SCADA$N$NMotor reset should be either by area or by all")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			C_REM : BOOL (Description := "Remote Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_LOC : BOOL (Description := "Local Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_MNT : BOOL (Description := "Maintenance Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_SW_AUT : BOOL (Description := "Request Software Automatic mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_SW_MAN : BOOL (Description := "Request Software Manual mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_RUN : BOOL (Description := "Run Forward in Auto Mode Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_JOG : BOOL (Description := "Operator$NMotor Run Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_IOK : BOOL (Description := "Interlocks OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_RAL : BOOL (Description := "Reset Motor Alarms",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_WW_AUT : BOOL (Description := "Auto Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_MAN : BOOL (Description := "Manual Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_Start : BOOL (Description := "Manual Start Request$NFrom HMI",
			                      Usage := Input,
			                      RADIX := Decimal,
			                      Required := No,
			                      Visible := No,
			                      DefaultData := 0);
			C_WW_Stop : BOOL (Description := "Manual Stop Request$NFrom HMI",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     DefaultData := 0);
			C_CFG_FailTime : DINT (Description := "Contactor failure time",
			                          Usage := Input,
			                          RADIX := Decimal,
			                          Required := Yes,
			                          Visible := Yes,
			                          DefaultData := 0);
			I_CON : BOOL (Description := "Contactor Closed",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			I_ISO : BOOL (Description := "Motor Isolator Closed",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			I_MCP : BOOL (Description := "Motor Circuit Protector OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			O_CON : BOOL (Description := "Contactor Output",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_AUT : BOOL (Description := "Auto Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MAN : BOOL (Description := "Manual Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_SW_AUT : BOOL (Description := "Motor in Software Auto Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_SW_MAN : BOOL (Description := "Motor in Software Manual Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_LOC : BOOL (Description := "Local Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MNT : BOOL (Description := "Maintenance Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_IOK : BOOL (Description := "Interlocks Allow Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_FLT : BOOL (Description := "Motor Fault",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RUN : BOOL (Description := "Motor Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_CMD : BOOL (Description := "Motor Failed To Start",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_MCP : BOOL (Description := "Motor Circuit Protector Tripped",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_ISO : BOOL (Description := "Isolator Switched Off",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_FTS : BOOL (Description := "Motor Failed To Stop",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			StopReq : BOOL (Description := "Stop Request Latch",
			                   Usage := Input,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   DefaultData := 0);
		END_PARAMETERS

		LOCAL_TAGS
			DevFailTimer : TIMER (Description := "Device Failure Alarm Timer",
			                       ExternalAccess := Read/Write,
			                       DefaultData := "[0,0,0]");
			RunAuto : BOOL (Description := "Run in automatic mode",
			                  RADIX := Decimal,
			                  ExternalAccess := None,
			                  DefaultData := 0);
			RunMaintenance : BOOL (Description := "Run in maintenance mode",
			                         RADIX := Decimal,
			                         ExternalAccess := None,
			                         DefaultData := 0);
			RunManual : BOOL (Description := "Run in manual mode",
			                    RADIX := Decimal,
			                    ExternalAccess := None,
			                    DefaultData := 0);
			MaintenanceMode : BOOL (Description := "Motor in Maintenance Mode",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			ManualMode : BOOL (Description := "Motor in Manual Mode",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			AutomaticMode : BOOL (Description := "Motor in Automatic Mode",
			                        RADIX := Decimal,
			                        ExternalAccess := None,
			                        DefaultData := 0);
		END_LOCAL_TAGS

		ROUTINE Logic 
				RC: "**************************************************************************************$N"
				    "FVNR Motor Control Block$N"
				    "**************************************************************************************$N"
				    "1. Monitor contactor for failure to switch on/off$N"
				    "2.Circuit protection - MCP, a CB, isolator$N"
				    "$N"
				    "";
				N: NOP();
				RC: "Mode Selection : Software Auto and Software Manual mode statuses are only active when the switch is in REMOTE$N"
				    "";
				N: [XIC(C_SW_AUT) ,XIC(S_SW_AUT) ]XIO(C_SW_MAN)OTE(S_SW_AUT);
				N: XIO(S_SW_AUT)OTE(S_SW_MAN);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_AUT)OTE(S_AUT);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_MAN)OTE(S_MAN);
				N: XIC(C_LOC)XIO(C_MNT)OTE(S_LOC);
				RC: "Mode active signals (Auto, Manual, Maintenance)$N"
				    "";
				N: XIC(C_MNT)OTE(S_MNT);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "FVNR MOTOR RUN LOGIC$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "MAINTENANCE RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run under any circumstances whilst in maintence mode$N"
				    "";
				N: XIC(S_MNT)XIC(C_JOG)OTE(RunMaintenance);
				RC: "MANUAL RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in manual mode$N"
				    "$N"
				    "$N"
				    "";
				N: [XIC(S_MAN) ,XIC(S_LOC) ]XIC(C_JOG)XIC(C_IOK)XIO(S_FLT)OTE(RunManual);
				RC: "AUTOMATIC RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in automatic mode$N"
				    "$N"
				    "$N"
				    "";
				N: XIC(S_AUT)XIC(C_RUN)XIC(C_IOK)XIO(S_FLT)OTE(RunAuto);
				RC: "RUN COMMAND$N"
				    "$N"
				    "Collect running possibilities and send to contactor$N"
				    "$N"
				    "";
				N: [XIC(RunMaintenance) ,XIC(RunManual) ,XIC(RunAuto) ]OTE(O_CON);
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "FVNR ALARMS$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "";
				N: MOV(C_CFG_FailTime,DevFailTimer.PRE);
				RC: "$N"
				    "Motor Start / Stop Failure Alarm Timer (command failed)";
				N: [XIC(O_CON) XIO(I_CON) ,XIO(O_CON) XIC(I_CON) ]TON(DevFailTimer,?,?);
				RC: "$N"
				    "Motor Start Failure Alarm Timer (command failed) Alarm Latch$N"
				    "$N"
				    "";
				N: [XIC(DevFailTimer.DN) XIC(O_CON) XIO(I_CON) ,XIC(A_CMD) XIO(C_RAL) ]OTE(A_CMD);
				RC: "$N"
				    "Motor Failed To Stop / Hand Mode Alarm Timer (Selector Switch in Hand) Alarm Latch";
				N: [XIC(DevFailTimer.DN) XIO(O_CON) XIC(I_CON) ,XIC(A_FTS) XIO(C_RAL) ]OTE(A_FTS);
				RC: "Motor Circuit Protection Alarm Latch (no debounce required)";
				N: [XIO(I_MCP) ,XIC(A_MCP) XIO(C_RAL) ]OTE(A_MCP);
				RC: "Isolator Alarm Latch (no debounce required)$N"
				    "";
				N: [XIO(I_ISO) ,XIC(A_ISO) XIO(C_RAL) ]OTE(A_ISO);
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "FVNR PERMITS OUT OF BLOCK$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Indicate whether interlocks are satisfied$N"
				    "";
				N: XIC(C_IOK)OTE(S_IOK);
				RC: "Indicate motor is running when feedback indicates the contact is closed$N"
				    "Note: Because contactors can weld, this status is dependent on the feedback only.";
				N: XIC(I_CON)OTE(S_RUN);
				RC: "Signal rest of program that drive is faulted";
				N: [XIC(A_CMD) ,XIC(A_MCP) ,XIC(A_ISO) ,XIC(A_FTS) ]OTE(S_FLT);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION a_MotorFVR (Description := "Reversing Motor, 3DI2DO$N",
	                                          Revision := "1.0",
	                                          RevisionExtension := "8294",
	                                          RevisionNote := "Two direction & single speed$NContactor, isolator and TOL feedback",
	                                          ExecutePrescan := No,
	                                          ExecutePostscan := No,
	                                          ExecuteEnableInFalse := No,
	                                          CreatedDate := "2009-07-16T01:06:22.775Z",
	                                          CreatedBy := "MAR-RA09-VB\Rockwell2009",
	                                          EditedDate := "2019-09-26T00:51:16.707Z",
	                                          EditedBy := "DESKTOP-R0KGE9M\rober",
	                                          SoftwareRevision := "v32.01",
	                                          AdditionalHelpText := "Note that data that goes directly to the HMI is shown on the block interface (visible), but is not required. This means the programmer can see the status of the device block from the calling subroutine, but does not have to create intermediate tags for this information.$N$NAll time configurations are in milliseconds, as per the Controllogix standard$N$NEvery comment beginning with HMI can be controlled from the SCADA$N$NMotor reset should be either by area or by all")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			C_REM : BOOL (Description := "Remote Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_LOC : BOOL (Description := "Local Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_MNT : BOOL (Description := "Maintenance Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_SW_AUT : BOOL (Description := "Request Software Automatic mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_SW_MAN : BOOL (Description := "Request Software Manual mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_RUF : BOOL (Description := "Run Forward in Auto Mode Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_RUR : BOOL (Description := "Run Reverse in Auto Mode Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_JOF : BOOL (Description := "Operator$NRun Forward Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_JOR : BOOL (Description := "Operator$NRun Reverse Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_IOK : BOOL (Description := "Interlocks OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_RAL : BOOL (Description := "Reset Motor Alarms",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_WW_AUT : BOOL (Description := "Auto Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_MAN : BOOL (Description := "Manual Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_STF : BOOL (Description := "Manual Start Forward Request$NFrom HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_STR : BOOL (Description := "Manual Start Reverse Request$NFrom HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_Stop : BOOL (Description := "Manual Stop Request$NFrom HMI",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     DefaultData := 0);
			C_CFG_FailTime : DINT (Description := "Contactor Failure Time",
			                          Usage := Input,
			                          RADIX := Decimal,
			                          Required := Yes,
			                          Visible := Yes,
			                          DefaultData := 0);
			C_CFG_StopTime : DINT (Description := "Stopiping Time Before Restart In Opposite Direction",
			                          Usage := Input,
			                          RADIX := Decimal,
			                          Required := Yes,
			                          Visible := Yes,
			                          DefaultData := 0);
			I_COF : BOOL (Description := "Forward Contactor Closed",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			I_COR : BOOL (Description := "Reverse Contactor Closed",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			I_ISO : BOOL (Description := "Motor Isolator Closed",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			I_MCP : BOOL (Description := "Motor Circuit Protector Okay",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			O_COF : BOOL (Description := "Forward Contactor Output",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			O_COR : BOOL (Description := "Reverse Contactor Output",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_AUT : BOOL (Description := "Auto Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MAN : BOOL (Description := "Manual Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_SW_AUT : BOOL (Description := "Motor in Software Auto Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_SW_MAN : BOOL (Description := "Motor in Software Manual Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_LOC : BOOL (Description := "Local Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MNT : BOOL (Description := "Maintenance Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_IOK : BOOL (Description := "Interlocks Allow Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_FLT : BOOL (Description := "Motor Fault",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RUF : BOOL (Description := "Motor Running Forward",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RUR : BOOL (Description := "Motor Running Reverse",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_CMD : BOOL (Description := "Motor Failed To Start",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_MCP : BOOL (Description := "Motor Circuit Protector Tripped",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_ISO : BOOL (Description := "Isolator Switched Off",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_FTS : BOOL (Description := "Motor Failed To Stop",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			StopReq : BOOL (Description := "Stop Request Latch",
			                   Usage := Input,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   DefaultData := 0);
		END_PARAMETERS

		LOCAL_TAGS
			DevFailTimerFWD : TIMER (Description := "Device Failure Alarm Timer Forward",
			                          ExternalAccess := Read/Write,
			                          DefaultData := "[0,0,0]");
			RunAutoFWD : BOOL (Description := "Run Forward in automatic mode",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			RunMaintenanceFWD : BOOL (Description := "Run Forward in maintenance mode",
			                            RADIX := Decimal,
			                            ExternalAccess := None,
			                            DefaultData := 0);
			RunManualFWD : BOOL (Description := "Run Forward in manual mode",
			                       RADIX := Decimal,
			                       ExternalAccess := None,
			                       DefaultData := 0);
			RunManualREV : BOOL (Description := "Run Reverse in manual mode",
			                       RADIX := Decimal,
			                       ExternalAccess := None,
			                       DefaultData := 0);
			RunMaintenanceREV : BOOL (Description := "Run Reverse in maintenance mode",
			                            RADIX := Decimal,
			                            ExternalAccess := None,
			                            DefaultData := 0);
			RunAutoREV : BOOL (Description := "Run Reverse in automatic mode",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			StopWatchdogFWD : TIMER (Description := "Ensure motor direction cannot be changed $N$Qon the fly$Q",
			                          ExternalAccess := None,
			                          DefaultData := "[0,0,0]");
			StopWatchdogREV : TIMER (Description := "Ensure motor direction cannot be changed $N$Qon the fly$Q",
			                          ExternalAccess := None,
			                          DefaultData := "[0,0,0]");
			DevFailTimerREV : TIMER (Description := "Device Failure Alarm Timer Reverse",
			                          ExternalAccess := None,
			                          DefaultData := "[0,0,0]");
			MaintenanceMode : BOOL (Description := "Motor in Maintenance Mode",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			ManualMode : BOOL (Description := "Motor in Manual Mode",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			AutomaticMode : BOOL (Description := "Motor in Automatic Mode",
			                        RADIX := Decimal,
			                        ExternalAccess := None,
			                        DefaultData := 0);
		END_LOCAL_TAGS

		ROUTINE Logic 
				RC: "**************************************************************************************$N"
				    "FVR Motor Control Block$N"
				    "**************************************************************************************$N"
				    "1. Monitor contactor for failure to switch on/off$N"
				    "2.Circuit protection - MCP, a CB, isolator$N"
				    "$N"
				    "";
				N: NOP();
				RC: "Mode Selection : Software Auto and Software Manual mode statuses are only active when the switch is in REMOTE$N"
				    "";
				N: [XIC(C_SW_AUT) ,XIC(S_SW_AUT) ]XIO(C_SW_MAN)OTE(S_SW_AUT);
				N: XIO(S_SW_AUT)OTE(S_SW_MAN);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_AUT)OTE(S_AUT);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_MAN)OTE(S_MAN);
				N: XIC(C_LOC)XIO(C_MNT)OTE(S_LOC);
				RC: "Mode active signals (auto, manual, maintenance)";
				N: XIC(C_MNT)OTE(S_MNT);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "FVR MOTOR RUN LOGIC$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "MAINTENANCE RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run under any circumstances whilst in maintence mode$N"
				    "";
				N: XIC(S_MNT)XIC(C_JOF)XIO(C_JOR)XIO(StopWatchdogREV.DN)OTE(RunMaintenanceFWD);
				N: XIC(S_MNT)XIC(C_JOR)XIO(C_JOF)XIO(StopWatchdogFWD.DN)OTE(RunMaintenanceREV);
				RC: "MANUAL RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in manual mode$N"
				    "$N"
				    "$N"
				    "";
				N: [XIC(S_MAN) ,XIC(S_LOC) ]XIC(C_JOF)XIO(C_JOR)XIC(C_IOK)XIO(S_FLT)XIO(StopWatchdogREV.DN)OTE(RunManualFWD);
				N: [XIC(S_MAN) ,XIC(S_LOC) ]XIC(C_JOR)XIO(C_JOF)XIC(C_IOK)XIO(S_FLT)XIO(StopWatchdogFWD.DN)OTE(RunManualREV);
				RC: "AUTOMATIC RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in automatic mode$N"
				    "$N"
				    "$N"
				    "";
				N: XIC(S_AUT)XIC(C_RUF)XIO(C_RUR)XIC(C_IOK)XIO(S_FLT)XIO(StopWatchdogREV.DN)OTE(RunAutoFWD);
				N: XIC(S_AUT)XIC(C_RUR)XIO(C_RUF)XIC(C_IOK)XIO(S_FLT)XIO(StopWatchdogFWD.DN)OTE(RunAutoREV);
				RC: "RUN COMMAND$N"
				    "$N"
				    "Collect running possibilities and send to contactor$N"
				    "$N"
				    "";
				N: [XIC(RunMaintenanceFWD) ,XIC(RunManualFWD) ,XIC(RunAutoFWD) ]OTE(O_COF);
				N: [XIC(RunMaintenanceREV) ,XIC(RunManualREV) ,XIC(RunAutoREV) ]OTE(O_COR);
				RC: "Configure stop timer$N"
				    "Note that this applies to all states, whether auto or manual";
				N: MOV(C_CFG_StopTime,StopWatchdogFWD.PRE)MOV(C_CFG_StopTime,StopWatchdogREV.PRE);
				RC: "Check that motor has been stopped a reasonable time before allowing a restart in either direction";
				N: XIC(O_COF)TOF(StopWatchdogFWD,?,?);
				N: XIC(O_COR)TOF(StopWatchdogREV,?,?);
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "FVR ALARMS$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Configure device$N"
				    "";
				N: MOV(C_CFG_FailTime,DevFailTimerFWD.PRE)MOV(C_CFG_FailTime,DevFailTimerREV.PRE);
				RC: "RUNNING FORWARD: $N"
				    "Motor Start / Stop Failure Alarm Timer (command failed)";
				N: [XIC(O_COF) XIO(I_COF) ,XIO(O_COF) XIC(I_COF) ]TON(DevFailTimerFWD,?,?);
				RC: "RUNNING REVERSE: $N"
				    "Motor Start / Stop Failure Alarm Timer (command failed) $N"
				    "$N"
				    "";
				N: [XIC(O_COR) XIO(I_COR) ,XIO(O_COR) XIC(I_COR) ]TON(DevFailTimerREV,?,?);
				RC: "$N"
				    "Motor Start Failure Alarm Timer (command failed) Alarm Latch$N"
				    "$N"
				    "";
				N: [XIC(DevFailTimerFWD.DN) XIC(O_COF) XIO(I_COF) ,XIC(DevFailTimerREV.DN) XIC(O_COR) XIO(I_COR) ,XIC(A_CMD) XIO(C_RAL) ]OTE(A_CMD);
				RC: "$N"
				    "Motor Failed To Stop / Hand Mode Alarm Timer (Selector Switch in Hand) Alarm Latch";
				N: [XIC(DevFailTimerFWD.DN) XIO(O_COF) XIC(I_COF) ,XIC(DevFailTimerREV.DN) XIO(O_COR) XIC(I_COR) ,XIC(A_FTS) XIO(C_RAL) ]OTE(A_FTS);
				RC: "Motor Circuit Protector Alarm Latch (no debounce required)$N"
				    "";
				N: [XIO(I_MCP) ,XIC(A_MCP) XIO(C_RAL) ]OTE(A_MCP);
				RC: "Isolator Alarm Latch (no debounce required)$N"
				    "";
				N: [XIO(I_ISO) ,XIC(A_ISO) XIO(C_RAL) ]OTE(A_ISO);
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "FVR PERMITS OUT OF BLOCK$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Indicate whether interlocks are satisfied$N"
				    "";
				N: XIC(C_IOK)OTE(S_IOK);
				RC: "Indicate motor is running forward when feedback indicates the contact is closed$N"
				    "Note: Because contactors can weld, this status is dependent on the feedback only.";
				N: XIC(I_COF)OTE(S_RUF);
				RC: "Indicate motor is running reverse when feedback indicates the contact is closed$N"
				    "Note: Because contactors can weld, this status is dependent on the feedback only.";
				N: XIC(I_COR)OTE(S_RUR);
				RC: "Signal rest of program that drive is faulted";
				N: [XIC(A_CMD) ,XIC(A_MCP) ,XIC(A_ISO) ,XIC(A_FTS) ]OTE(S_FLT);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION a_PF525_VFD (Description := "Powerflex 525 Variable Frequency Drive",
	                                           Revision := "1.0",
	                                           RevisionExtension := "8294",
	                                           RevisionNote := "The datalinks required for this block include:$N1) 3 - Output Current$N2) 14 Digital Input Status (5 to 8)$N3) 6 - Drive Status$N4) 7 - Fault Code 1$NMode = Velocity",
	                                           ExecutePrescan := No,
	                                           ExecutePostscan := No,
	                                           ExecuteEnableInFalse := No,
	                                           CreatedDate := "2009-07-16T01:06:22.775Z",
	                                           CreatedBy := "MAR-RA09-VB\Rockwell2009",
	                                           EditedDate := "2019-09-26T00:49:48.970Z",
	                                           EditedBy := "DESKTOP-R0KGE9M\rober",
	                                           SoftwareRevision := "v32.01",
	                                           AdditionalHelpText := "Note that data that goes directly to the HMI is shown on the block interface (visible), but is not required. This means the programmer can see the status of the device block from the calling subroutine, but does not have to create intermediate tags for this information.$N$NAll time configurations are in milliseconds, as per the Controllogix standard$N$NEvery comment beginning with HMI can be controlled from the SCADA$N$NMotor reset should be either by area or by all")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			Input_Data_From_VFD : AB:PowerFlex525V_E_D4D3A5A1:I:0 (Description := "Input Status Bits and Speed from PF525 VFD",
			                               Usage := InOut,
			                               Required := Yes,
			                               Visible := Yes);
			Output_Data_To_VFD : AB:PowerFlex525V_EENET_Drive:O:0 (Description := "Output Command Bits and Speed Command to PF525 VFD",
			                              Usage := InOut,
			                              Required := Yes,
			                              Visible := Yes);
			C_REM : BOOL (Description := "Remote Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_LOC : BOOL (Description := "Local Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_MNT : BOOL (Description := "Maintenance Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_SW_AUT : BOOL (Description := "Request Software Automatic mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_SW_MAN : BOOL (Description := "Request Software Manual mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_RUN : BOOL (Description := "Run in Auto Mode Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_JOG : BOOL (Description := "Operator$NRun Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_SSP : REAL (Description := "Speed Command (User Defined Units)",
			                 Usage := Input,
			                 RADIX := Float,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0.00000000e+000);
			C_ENG : REAL (Description := "Rate in User Defined Units At Motor Base Speed",
			                 Usage := Input,
			                 RADIX := Float,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0.00000000e+000);
			C_IOK : BOOL (Description := "Interlocks OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_COM : BOOL (Description := "Communincations OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_RAL : BOOL (Description := "Reset Drive Alarms",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_WW_AUT : BOOL (Description := "Auto Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_MAN : BOOL (Description := "Manual Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_Start : BOOL (Description := "Manual Start Request$NFrom HMI",
			                      Usage := Input,
			                      RADIX := Decimal,
			                      Required := No,
			                      Visible := No,
			                      DefaultData := 0);
			C_WW_Stop : BOOL (Description := "Manual Stop Request$NFrom HMI",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     DefaultData := 0);
			C_WW_Speed : REAL (Description := "Manual Mode Speed Setpoint From HMI",
			                      Usage := Input,
			                      RADIX := Float,
			                      Required := No,
			                      Visible := No,
			                      DefaultData := 0.00000000e+000);
			C_WW_Speed_HS : BOOL (Description := "Manual Mode Speed Setpoint Hand Shake From HMI",
			                         Usage := Input,
			                         RADIX := Decimal,
			                         Required := No,
			                         Visible := No,
			                         DefaultData := 0);
			C_CFG_FailTime : DINT (Description := "Drive Start / Stop Failure Time",
			                          Usage := Input,
			                          RADIX := Decimal,
			                          Required := Yes,
			                          Visible := Yes,
			                          DefaultData := 0);
			S_AUT : BOOL (Description := "Auto Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MAN : BOOL (Description := "Manual Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_SW_AUT : BOOL (Description := "Motor in Software Auto Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_SW_MAN : BOOL (Description := "Motor in Software Manual Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_LOC : BOOL (Description := "Local Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MNT : BOOL (Description := "Maintenance Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_IOK : BOOL (Description := "Interlocks Allow Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_FLT : BOOL (Description := "Device Fault",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RUN : BOOL (Description := "Drive Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RTS : BOOL (Description := "Drive Ready To Start",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_INH : BOOL (Description := "Drive Inhibited",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_SFB : REAL (Description := "Speed Feedback (User Defined Units)",
			                 Usage := Output,
			                 RADIX := Float,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0.00000000e+000);
			S_CFB : REAL (Description := "Status - Current Feedback (Amps)",
			                 Usage := Output,
			                 RADIX := Float,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0.00000000e+000);
			S_FLT_CODE : DINT (Description := "Drive Fault Code",
			                      COMMENT.0 := "Status DigitalTerm 5",
			                      COMMENT.1 := "Status DigitalTerm 6",
			                      COMMENT.2 := "Status DigitalTerm 7",
			                      COMMENT.3 := "Status DigitalTerm 8",
			                      Usage := Output,
			                      RADIX := Decimal,
			                      Required := No,
			                      Visible := Yes,
			                      ExternalAccess := Read Only,
			                      DefaultData := 0);
			A_CMD : BOOL (Description := "Drive Failed To Start",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_ISO : BOOL (Description := "Isolator Switched Off",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_FTS : BOOL (Description := "Drive Failed To Stop",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_FLT : BOOL (Description := "Drive Fault",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_COM : BOOL (Description := "Drive Comm Loss",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			StopReq : BOOL (Description := "Stop Request Latch",
			                   Usage := Input,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   DefaultData := 0);
			EntryStatus : DINT (Description := "Entry Status For COM Check",
			                       Usage := Input,
			                       RADIX := Decimal,
			                       Required := No,
			                       Visible := No,
			                       DefaultData := 0);
		END_PARAMETERS

		LOCAL_TAGS
			DevFailTimer : TIMER (Description := "Device Failure Alarm Timer",
			                       ExternalAccess := Read/Write,
			                       DefaultData := "[0,0,0]");
			RunAuto : BOOL (Description := "Run in automatic mode",
			                  RADIX := Decimal,
			                  ExternalAccess := None,
			                  DefaultData := 0);
			RunMaintenance : BOOL (Description := "Run in maintenance mode",
			                         RADIX := Decimal,
			                         ExternalAccess := None,
			                         DefaultData := 0);
			RunManual : BOOL (Description := "Run in manual mode",
			                    RADIX := Decimal,
			                    ExternalAccess := None,
			                    DefaultData := 0);
			DevResetTimer : TIMER (Description := "Drive Reset Timer",
			                        ExternalAccess := None,
			                        DefaultData := "[0,2000,0]");
			MaintenanceMode : BOOL (Description := "Motor in Maintenance Mode",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			ManualMode : BOOL (Description := "Motor in Manual Mode",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			AutomaticMode : BOOL (Description := "Motor in Automatic Mode",
			                        RADIX := Decimal,
			                        ExternalAccess := None,
			                        DefaultData := 0);
		END_LOCAL_TAGS

		ROUTINE Logic 
				RC: "**************************************************************************************$N"
				    "VFD PF525 Drive Control Block$N"
				    "**************************************************************************************$N"
				    "1. Monitor drive for faults to switch on/off$N"
				    "2.Circuit protection - Isolator$N"
				    "$N"
				    "";
				N: NOP();
				RC: "Mode Selection : Software Auto and Software Manual mode statuses are only active when the switch is in REMOTE$N"
				    "";
				N: [XIC(C_SW_AUT) ,XIC(S_SW_AUT) ]XIO(C_SW_MAN)OTE(S_SW_AUT);
				N: XIO(S_SW_AUT)OTE(S_SW_MAN);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_AUT)OTE(S_AUT);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_MAN)OTE(S_MAN);
				N: XIC(C_LOC)XIO(C_MNT)OTE(S_LOC);
				RC: "Mode active signals (auto, manual, maintenance)";
				N: XIC(C_MNT)OTE(S_MNT);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "DRIVE RUN LOGIC$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "MAINTENANCE RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run under any circumstances whilst in maintence mode";
				N: XIC(S_MNT)XIC(C_JOG)OTE(RunMaintenance);
				RC: "MANUAL RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in manual mode$N"
				    "$N"
				    "$N"
				    "";
				N: [XIC(S_MAN) ,XIC(S_LOC) ]XIC(C_JOG)XIC(C_IOK)XIO(S_FLT)OTE(RunManual);
				RC: "AUTOMATIC RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in automatic mode$N"
				    "$N"
				    "$N"
				    "";
				N: XIC(S_AUT)XIC(C_RUN)XIC(C_IOK)XIO(S_FLT)OTE(RunAuto);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "DRIVE STATUS INTERFACE$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "";
				N: XIC(Input_Data_From_VFD.Ready)XIC(C_COM)OTE(S_RTS);
				RC: "$N"
				    "";
				N: XIC(Input_Data_From_VFD.DriveStatus_param_SafetyActive)XIC(C_COM)OTE(S_INH);
				N: XIC(Input_Data_From_VFD.Active)XIC(C_COM)OTE(S_RUN);
				RC: "Powerflex 525 VFD Speed Feedback Calculation in User Defined Units (rpm or hertz or percent of fpm)$N"
				    "$N"
				    "Motor Speed Feedback in Eng Units = Motor Maximum Speed in Eng Units * Speed Feedback from VFD / (60 * 100) = C_ENG * Input_Data_from_VFD.Feedback / (60 * 100)$N"
				    "$N"
				    "Input_Data_From_VFD.OutputFreq is an INT that is scaled -60 to 60 hertz = -6000 to 6000 counts$N"
				    "C_ENG is in Engineering Units defined by the User (rpm or hertz or percent or fpm)$N"
				    "";
				N: XIC(C_COM)[XIC(Input_Data_From_VFD.ActualDir) CPT(S_SFB,C_ENG*Input_Data_From_VFD.OutputFreq/(60.0*100.0)) ,XIO(Input_Data_From_VFD.ActualDir) CPT(S_SFB,-1.0*C_ENG*Input_Data_From_VFD.OutputFreq/(60.0*100.0)) ];
				N: XIO(C_COM)MOV(0,S_SFB);
				RC: "**************************************************************************************************$N"
				    "Drive Output Current Feedback$N"
				    "**************************************************************************************************$N"
				    "$N"
				    "The CPT instruction in this rung assumes the drive is at default settings.";
				N: CPT(S_CFB,Input_Data_From_VFD.OutputCurrent/100.0);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "DRIVE COMMAND INTERFACE$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Compute PF525 VFD Speed Reference (60.0 Hz Output Frequency = 6000)$N"
				    "$N"
				    "PF525 VFD Speed Reference = 60 * 100 * Speed Reference in Eng Units / Motor Maximum Speed in Engineering Units = 60 * 100 * C_SSP / C_ENG$N"
				    "$N"
				    "Output_Data_To_VFD.FreqCommand is an INT that is scaled -60 to 60 hertz = -6000 to 6000 counts$N"
				    "C_SSP and C_ENG are the same Engineering Units and are defined by the User (rpm or hertz or percent or fpm)$N"
				    "";
				N: [OTL(Output_Data_To_VFD.Forward) OTU(Output_Data_To_VFD.Reverse) CPT(Output_Data_To_VFD.FreqCommand,60*100*C_SSP/C_ENG) ,LES(Output_Data_To_VFD.FreqCommand,0.0) [OTU(Output_Data_To_VFD.Forward) OTL(Output_Data_To_VFD.Reverse) ,MUL(Output_Data_To_VFD.FreqCommand,-1,Output_Data_To_VFD.FreqCommand) ] ,GRT(Output_Data_To_VFD.FreqCommand,12000.0) MOV(12000.0,Output_Data_To_VFD.FreqCommand) ];
				RC: "RUN COMMAND$N"
				    "$N"
				    "Collect running possibilities and send to drive run command$N"
				    "$N"
				    "";
				N: [XIC(RunMaintenance) ,XIC(RunManual) ,XIC(RunAuto) ]XIC(C_COM)XIC(Input_Data_From_VFD.Ready)XIO(Input_Data_From_VFD.DriveStatus_param_SafetyActive)OTE(Output_Data_To_VFD.Start);
				N: XIO(Output_Data_To_VFD.Start)XIC(Input_Data_From_VFD.Active)OTE(Output_Data_To_VFD.Stop);
				RC: "FAULT RESET$N"
				    "$N"
				    "Send Fault Reset To Drive If Drive Faulted$N"
				    "$N"
				    "";
				N: XIC(C_RAL)TOF(DevResetTimer,?,?);
				N: XIC(DevResetTimer.DN)OTE(Output_Data_To_VFD.ClearFaults);
				N: OTL(Output_Data_To_VFD.AccelRate1)OTU(Output_Data_To_VFD.AccelRate2)OTL(Output_Data_To_VFD.DecelRate1)OTU(Output_Data_To_VFD.DecelRate2)OTL(Output_Data_To_VFD.FreqSel01)OTU(Output_Data_To_VFD.FreqSel02)OTU(Output_Data_To_VFD.FreqSel03);
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "ALARMS$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Configure dev";
				N: MOV(C_CFG_FailTime,DevFailTimer.PRE);
				RC: "$N"
				    "Drive Start / Stop Failure Alarm Timer (command failed)";
				N: [XIC(Output_Data_To_VFD.Start) XIO(Input_Data_From_VFD.Active) ,XIO(Output_Data_To_VFD.Start) XIC(Input_Data_From_VFD.Active) ]TON(DevFailTimer,?,?);
				RC: "$N"
				    "Drive Start Failure Alarm Latch (command failed) Alarm Latch$N"
				    "$N"
				    "";
				N: [XIC(DevFailTimer.DN) XIC(Output_Data_To_VFD.Start) XIO(Input_Data_From_VFD.Active) ,XIC(A_CMD) XIO(C_RAL) ]XIO(A_COM)OTE(A_CMD);
				RC: "$N"
				    "$N"
				    "$N"
				    "Drive Failed To Stop / Hand Mode Alarm Timer (Selector Switch in Hand) Alarm Latch$N"
				    "$N"
				    "";
				N: XIC(DevFailTimer.DN)XIO(Output_Data_To_VFD.Start)XIC(Input_Data_From_VFD.Active)XIO(A_COM)OTE(A_FTS);
				RC: "Isolator Alarm Latch (no debounce required)$N"
				    "";
				N: XIO(Input_Data_From_VFD.DigInStatus_DigInTBlk7)OTE(A_ISO);
				RC: "Comm Alarm Latch (no debounce required)$N"
				    "";
				N: [XIO(C_COM) ,XIC(A_COM) XIO(C_RAL) ]OTE(A_COM);
				RC: "Drive Fault Alarm Latch (no debounce required)$N"
				    "";
				N: XIC(Input_Data_From_VFD.Faulted)XIO(A_COM)OTE(A_FLT);
				RC: "**************************************************************************************************$N"
				    "Drive Last Fault Code$N"
				    "**************************************************************************************************$N"
				    "$N"
				    "The CPT instruction in this rung assumes the drive is at default settings.";
				N: XIC(Input_Data_From_VFD.Faulted)MOV(Input_Data_From_VFD.Fault1Code,S_FLT_CODE);
				N: XIO(Input_Data_From_VFD.Faulted)MOV(0,S_FLT_CODE);
				RC: "Signal rest of program that drive is faulted";
				N: [XIC(A_CMD) ,XIC(A_FLT) ,XIC(A_ISO) ,XIC(A_FTS) ]OTE(S_FLT);
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "PERMITS OUT OF BLOCK$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Indicate whether interlocks are satisfied$N"
				    "$N"
				    "$T$N"
				    "";
				N: XIC(C_IOK)OTE(S_IOK);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION a_PF755_VFD (Description := "Powerflex 755 Variable Frequency Drive",
	                                           Revision := "1.0",
	                                           RevisionExtension := "8294",
	                                           RevisionNote := "The datalinks required for this block include:$N1) 7 - Output Current$N2) 5 - Torque Current$N3) 220 - Digital Input Status$N4) 951 - Last Fault Code$N5) 933 - Start Inhibits$NMode = Velocity",
	                                           ExecutePrescan := No,
	                                           ExecutePostscan := No,
	                                           ExecuteEnableInFalse := No,
	                                           CreatedDate := "2009-07-16T01:06:22.775Z",
	                                           CreatedBy := "MAR-RA09-VB\Rockwell2009",
	                                           EditedDate := "2019-09-26T14:16:35.639Z",
	                                           EditedBy := "DOMAIN1\carp",
	                                           SoftwareRevision := "v30.00",
	                                           AdditionalHelpText := "Note that data that goes directly to the HMI is shown on the block interface (visible), but is not required. This means the programmer can see the status of the device block from the calling subroutine, but does not have to create intermediate tags for this information.$N$NAll time configurations are in milliseconds, as per the Controllogix standard$N$NEvery comment beginning with HMI can be controlled from the SCADA$N$NMotor reset should be either by area or by all")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			Input_Data_From_VFD : AB:PowerFlex755_E_A82F55E3:I:0 (Description := "Input Status Bits and Speed from PF525 VFD",
			                               Usage := InOut,
			                               Required := Yes,
			                               Visible := Yes);
			Output_Data_To_VFD : AB:PowerFlex755_EENET_Drive:O:0 (Description := "Output Command Bits and Speed Command to PF755 VFD",
			                              Usage := InOut,
			                              Required := Yes,
			                              Visible := Yes);
			C_REM : BOOL (Description := "Remote Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_LOC : BOOL (Description := "Local Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_MNT : BOOL (Description := "Maintenance Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_SW_AUT : BOOL (Description := "Request Software Automatic mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_SW_MAN : BOOL (Description := "Request Software Manual mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_RUN : BOOL (Description := "Run in Auto Mode Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_JOG : BOOL (Description := "Operator$NRun Request",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_SSP : REAL (Description := "Speed Command (User Defined Units)",
			                 Usage := Input,
			                 RADIX := Float,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0.00000000e+000);
			C_ENG : REAL (Description := "Rate in User Defined Units At Motor Base Speed",
			                 Usage := Input,
			                 RADIX := Float,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0.00000000e+000);
			C_BSP : REAL (Description := "Motor Nameplate Base Speed in rpm or hertz",
			                 Usage := Input,
			                 RADIX := Float,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0.00000000e+000);
			C_IOK : BOOL (Description := "Interlocks OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_COM : BOOL (Description := "Communincations OK",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_RAL : BOOL (Description := "Reset Drive Alarms",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_WW_AUT : BOOL (Description := "Auto Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_MAN : BOOL (Description := "Manual Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_Start : BOOL (Description := "Manual Start Request$NFrom HMI",
			                      Usage := Input,
			                      RADIX := Decimal,
			                      Required := No,
			                      Visible := No,
			                      DefaultData := 0);
			C_WW_Stop : BOOL (Description := "Manual Stop Request$NFrom HMI",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     DefaultData := 0);
			C_WW_Speed : REAL (Description := "Manual Mode Speed Setpoint From HMI",
			                      Usage := Input,
			                      RADIX := Float,
			                      Required := No,
			                      Visible := No,
			                      DefaultData := 0.00000000e+000);
			C_WW_Speed_HS : BOOL (Description := "Manual Mode Speed Setpoint Hand Shake From HMI",
			                         Usage := Input,
			                         RADIX := Decimal,
			                         Required := No,
			                         Visible := No,
			                         DefaultData := 0);
			C_CFG_FailTime : DINT (Description := "Drive Start / Stop Failure Time",
			                          Usage := Input,
			                          RADIX := Decimal,
			                          Required := Yes,
			                          Visible := Yes,
			                          DefaultData := 0);
			I_ISO : BOOL (Description := "Motor Isolator Closed",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			S_AUT : BOOL (Description := "Auto Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MAN : BOOL (Description := "Manual Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_SW_AUT : BOOL (Description := "Motor in Software Auto Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_SW_MAN : BOOL (Description := "Motor in Software Manual Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_LOC : BOOL (Description := "Local Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MNT : BOOL (Description := "Maintenance Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_IOK : BOOL (Description := "Interlocks Allow Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_FLT : BOOL (Description := "Device Fault",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RUN : BOOL (Description := "Drive Running",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_RTS : BOOL (Description := "Drive Ready To Start",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_INH : BOOL (Description := "Drive Inhibited",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_SFB : REAL (Description := "Speed Feedback (User Defined Units)",
			                 Usage := Output,
			                 RADIX := Float,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0.00000000e+000);
			S_CFB : REAL (Description := "Status - Current Feedback (Amps)",
			                 Usage := Output,
			                 RADIX := Float,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0.00000000e+000);
			S_TFB : REAL (Description := "Status - Torque Feedback (Amps)",
			                 Usage := Output,
			                 RADIX := Float,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0.00000000e+000);
			S_FLT_CODE : DINT (Description := "Drive Fault Code",
			                      Usage := Output,
			                      RADIX := Decimal,
			                      Required := No,
			                      Visible := Yes,
			                      ExternalAccess := Read Only,
			                      DefaultData := 0);
			A_CMD : BOOL (Description := "Drive Failed To Start",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_ISO : BOOL (Description := "Isolator Switched Off",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_FTS : BOOL (Description := "Drive Failed To Stop",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_FLT : BOOL (Description := "Drive Fault",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_COM : BOOL (Description := "Drive Comm Loss",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			StopReq : BOOL (Description := "Stop Request Latch",
			                   Usage := Input,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := No,
			                   DefaultData := 0);
			EntryStatus : DINT (Description := "Entry Status For COM Check",
			                       Usage := Input,
			                       RADIX := Decimal,
			                       Required := No,
			                       Visible := No,
			                       DefaultData := 0);
		END_PARAMETERS

		LOCAL_TAGS
			DevFailTimer : TIMER (Description := "Device Failure Alarm Timer",
			                       ExternalAccess := Read/Write,
			                       DefaultData := "[0,0,0]");
			RunAuto : BOOL (Description := "Run in automatic mode",
			                  RADIX := Decimal,
			                  ExternalAccess := None,
			                  DefaultData := 0);
			RunMaintenance : BOOL (Description := "Run in maintenance mode",
			                         RADIX := Decimal,
			                         ExternalAccess := None,
			                         DefaultData := 0);
			RunManual : BOOL (Description := "Run in manual mode",
			                    RADIX := Decimal,
			                    ExternalAccess := None,
			                    DefaultData := 0);
			DevResetTimer : TIMER (Description := "Drive Reset Timer",
			                        ExternalAccess := None,
			                        DefaultData := "[0,2000,0]");
			Max_Rev_Spd : REAL (Description := "Maximum Reverse Motor Speed $N(C_BSP x -1.5)",
			                      RADIX := Float,
			                      ExternalAccess := None,
			                      DefaultData := 0.00000000e+000);
			Max_Fwd_Spd : DINT (Description := "Maximum Forward Motor Speed $N(C_BSP x -1.5)",
			                      RADIX := Decimal,
			                      ExternalAccess := None,
			                      DefaultData := 0);
			MaintenanceMode : BOOL (Description := "Motor in Maintenance Mode",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			ManualMode : BOOL (Description := "Motor in Manual Mode",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			AutomaticMode : BOOL (Description := "Motor in Automatic Mode",
			                        RADIX := Decimal,
			                        ExternalAccess := None,
			                        DefaultData := 0);
		END_LOCAL_TAGS

		ROUTINE Logic 
				RC: "**************************************************************************************$N"
				    "VFD PF525 Drive Control Block$N"
				    "**************************************************************************************$N"
				    "1. Monitor drive for faults to switch on/off$N"
				    "2.Circuit protection - Isolator$N"
				    "$N"
				    "";
				N: NOP();
				RC: "Mode Selection : Software Auto and Software Manual mode statuses are only active when the switch is in REMOTE$N"
				    "";
				N: [XIC(C_SW_AUT) ,XIC(S_SW_AUT) ]XIO(C_SW_MAN)OTE(S_SW_AUT);
				N: XIO(S_SW_AUT)OTE(S_SW_MAN);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_AUT)OTE(S_AUT);
				N: XIC(C_REM)XIO(C_LOC)XIO(C_MNT)XIC(S_SW_MAN)OTE(S_MAN);
				N: XIC(C_LOC)XIO(C_MNT)OTE(S_LOC);
				RC: "Mode active signals (auto, manual, maintenance)";
				N: XIC(C_MNT)OTE(S_MNT);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "DRIVE RUN LOGIC$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "MAINTENANCE RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run under any circumstances whilst in maintence mode";
				N: XIC(S_MNT)XIC(C_JOG)OTE(RunMaintenance);
				RC: "MANUAL RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in manual mode$N"
				    "$N"
				    "$N"
				    "";
				N: [XIC(S_MAN) ,XIC(S_LOC) ]XIC(C_JOG)XIC(C_IOK)XIO(S_FLT)OTE(RunManual);
				RC: "AUTOMATIC RUN PRECONDITIONS $N"
				    "$N"
				    "OK to Run when no faults, interlocks are healthy, and in automatic mode$N"
				    "$N"
				    "$N"
				    "";
				N: XIC(S_AUT)XIC(C_RUN)XIC(C_IOK)XIO(S_FLT)OTE(RunAuto);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "DRIVE STATUS INTERFACE$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "";
				N: XIC(C_COM)XIC(Input_Data_From_VFD.DriveStatus_Ready)XIO(Input_Data_From_VFD.DriveStatus_Active)OTE(S_RTS);
				RC: "$N"
				    "";
				N: XIC(C_COM)XIO(Input_Data_From_VFD.DriveStatus_Ready)XIO(Input_Data_From_VFD.DriveStatus_Active)XIO(Input_Data_From_VFD.DriveStatus_Faulted)OTE(S_INH);
				N: XIC(Input_Data_From_VFD.DriveStatus_Active)XIC(C_COM)OTE(S_RUN);
				RC: "Motor Speed Feedback in Eng Units = Motor Maximum Speed in Eng Units * Speed Feedback from VFD / Motor Nameplate Base Speed = C_ENG * Input_Data_from_VFD.Feedback / C_BSP$N"
				    "$N"
				    "C_BSP is the Motor Nameplate Speed in RPM or Hertz$N"
				    "Therefore C_BSP must be the same units as Input_Data_From_VFD.Feedback which is configured in the Powerflex 755 VFD (Parameter 300) for this AOI to function correctly$N"
				    "C_ENG is in Engineering Units defined by the User (rpm or hertz or percent)$N"
				    "$N"
				    "$N"
				    "";
				N: XIC(C_COM)GRT(C_BSP,1.0)CPT(S_SFB,C_ENG*Input_Data_From_VFD.Feedback/C_BSP);
				N: XIO(C_COM)MOV(0,S_SFB);
				RC: "**************************************************************************************************$N"
				    "Drive Output Current Feedback$N"
				    "**************************************************************************************************$N"
				    "$N"
				    "The CPT instruction in this rung assumes the drive is at default settings.";
				N: CPT(S_CFB,Input_Data_From_VFD.OutputCurrent);
				RC: "**************************************************************************************************$N"
				    "Drive Torque Current Feedback$N"
				    "**************************************************************************************************$N"
				    "$N"
				    "The CPT instruction in this rung assumes the drive is at default settings.";
				N: CPT(S_TFB,Input_Data_From_VFD.TorqueCurFdbk);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "DRIVE COMMAND INTERFACE$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Compute Speed Setpoint / Reference = Motor Nameplate Base Speed * Speed Reference in Eng Units /  Motor Maximum Speed in Eng Units = C_BSP * C_SSP / C_ENG$N"
				    "$N"
				    "C_BSP is the Motor Nameplate Speed in RPM or Hertz$N"
				    "Therfore C_BSP must be the same units as configured in the Powerflex 755 VFD (Parameter 300) for this AOI to function correctly$N"
				    "C_SSP and C_ENG are the same Engineering Units and are defined by the User (rpm or hertz or percent or fpm)$N"
				    "";
				N: [CPT(Output_Data_To_VFD.Reference,C_BSP*C_SSP/C_ENG) ,MUL(C_BSP,1.5,Max_Fwd_Spd) MUL(C_BSP,-1.5,Max_Rev_Spd) ,GRT(Output_Data_To_VFD.Reference,Max_Fwd_Spd) MOV(Max_Fwd_Spd,Output_Data_To_VFD.Reference) ,LES(Output_Data_To_VFD.Reference,Max_Rev_Spd) MOV(Max_Rev_Spd,Output_Data_To_VFD.Reference) ];
				RC: "RUN COMMAND$N"
				    "$N"
				    "Collect running possibilities and send to drive run command$N"
				    "$N"
				    "";
				N: [XIC(RunMaintenance) ,XIC(RunManual) ,XIC(RunAuto) ]XIC(C_COM)XIC(Input_Data_From_VFD.DriveStatus_Ready)XIO(Input_Data_From_VFD.DriveStatus_Faulted)OTE(Output_Data_To_VFD.LogicCommand_Start);
				N: XIO(Output_Data_To_VFD.LogicCommand_Start)XIC(Input_Data_From_VFD.DriveStatus_Active)OTE(Output_Data_To_VFD.LogicCommand_Stop);
				RC: "FAULT RESET$N"
				    "$N"
				    "Send Fault Reset To Drive If Drive Faulted$N"
				    "$N"
				    "";
				N: XIC(C_RAL)TOF(DevResetTimer,?,?);
				N: XIC(DevResetTimer.DN)OTE(Output_Data_To_VFD.LogicCommand_ClearFaults);
				N: OTL(Output_Data_To_VFD.LogicCommand_AccelTime1)OTU(Output_Data_To_VFD.LogicCommand_AccelTime2)OTL(Output_Data_To_VFD.LogicCommand_DecelTime1)OTU(Output_Data_To_VFD.LogicCommand_DecelTime2)OTL(Output_Data_To_VFD.LogicCommand_SpdRefSel0)OTU(Output_Data_To_VFD.LogicCommand_SpdRefSel1)OTU(Output_Data_To_VFD.LogicCommand_SpdRefSel2);
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "ALARMS$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Configure dev";
				N: MOV(C_CFG_FailTime,DevFailTimer.PRE);
				RC: "$N"
				    "Drive Start / Stop Failure Alarm Timer (command failed)";
				N: [XIC(Output_Data_To_VFD.LogicCommand_Start) XIO(Input_Data_From_VFD.DriveStatus_Active) ,XIO(Output_Data_To_VFD.LogicCommand_Start) XIC(Input_Data_From_VFD.DriveStatus_Active) ]TON(DevFailTimer,?,?);
				RC: "$N"
				    "Drive Start Failure Alarm Latch (command failed) Alarm Latch$N"
				    "$N"
				    "";
				N: [XIC(DevFailTimer.DN) XIC(Output_Data_To_VFD.LogicCommand_Start) XIO(Input_Data_From_VFD.DriveStatus_Active) ,XIC(A_CMD) XIO(C_RAL) ]XIO(A_COM)OTE(A_CMD);
				RC: "$N"
				    "$N"
				    "$N"
				    "Drive Failed To Stop / Hand Mode Alarm Timer (Selector Switch in Hand) Alarm Latch$N"
				    "$N"
				    "";
				N: [XIC(DevFailTimer.DN) XIO(Output_Data_To_VFD.LogicCommand_Start) XIC(Input_Data_From_VFD.DriveStatus_Active) ,XIC(A_FTS) XIO(C_RAL) ]XIO(A_COM)OTE(A_FTS);
				RC: "Isolator Alarm Latch (no debounce required)$N"
				    "";
				N: [XIO(I_ISO) ,XIC(A_ISO) XIO(C_RAL) ]OTE(A_ISO);
				RC: "Comm Alarm Latch (no debounce required)$N"
				    "";
				N: [XIO(C_COM) ,XIC(A_COM) XIO(C_RAL) ]OTE(A_COM);
				RC: "Drive Fault Alarm Latch (no debounce required)$N"
				    "";
				N: [XIC(Input_Data_From_VFD.DriveStatus_Faulted) ,XIC(A_FLT) XIO(C_RAL) ]XIO(A_COM)OTE(A_FLT);
				RC: "**************************************************************************************************$N"
				    "Drive Last Fault Code$N"
				    "**************************************************************************************************$N"
				    "$N"
				    "The CPT instruction in this rung assumes the drive is at default settings.";
				N: XIC(Input_Data_From_VFD.DriveStatus_Faulted)MOV(Input_Data_From_VFD.LastFaultCode,S_FLT_CODE);
				N: XIO(Input_Data_From_VFD.DriveStatus_Faulted)MOV(0,S_FLT_CODE);
				RC: "Signal rest of program that drive is faulted";
				N: [XIC(A_CMD) ,XIC(A_FLT) ,XIC(A_ISO) ,XIC(A_FTS) ]OTE(S_FLT);
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "PERMITS OUT OF BLOCK$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Indicate whether interlocks are satisfied$N"
				    "$N"
				    "$T$N"
				    "";
				N: XIC(C_IOK)OTE(S_IOK);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION a_RMPS (Revision := "1.1",
	                                      RevisionNote := "Revision 1.0: Original Revision$NRevision 1.1: Allow change of Timer Presets when AOI is in Run Mode",
	                                      ExecutePrescan := No,
	                                      ExecutePostscan := No,
	                                      ExecuteEnableInFalse := No,
	                                      CreatedDate := "2017-09-29T11:34:44.798Z",
	                                      CreatedBy := "DOMAIN1\carp",
	                                      EditedDate := "2019-09-26T14:26:35.157Z",
	                                      EditedBy := "DOMAIN1\carp",
	                                      SoftwareRevision := "v30.00")
		
		PARAMETERS
			EnableIn : BOOL (Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			RUN_CMD : BOOL (Usage := Input,
			                   RADIX := Decimal,
			                   Required := Yes,
			                   Visible := Yes,
			                   DefaultData := 0);
			PV : REAL (Usage := Input,
			              RADIX := Float,
			              Required := Yes,
			              Visible := Yes,
			              DefaultData := 0.00000000e+000);
			NUM_SEG : INT (Usage := Input,
			                   RADIX := Decimal,
			                   Required := Yes,
			                   Visible := Yes,
			                   ExternalAccess := None,
			                   DefaultData := 0);
			HOLD : BOOL (Usage := Input,
			                RADIX := Decimal,
			                Required := No,
			                Visible := Yes,
			                DefaultData := 0);
			INIT : BOOL (Usage := Input,
			                RADIX := Decimal,
			                Required := No,
			                Visible := Yes,
			                DefaultData := 0);
			SP : REAL (Usage := Output,
			              RADIX := Float,
			              Required := No,
			              Visible := Yes,
			              ExternalAccess := Read Only,
			              DefaultData := 0.00000000e+000);
			CUR_SEG : INT (Usage := Output,
			                   RADIX := Decimal,
			                   Required := No,
			                   Visible := Yes,
			                   ExternalAccess := Read Only,
			                   DefaultData := 0);
			SEG_TIME_LEFT : REAL (Description := "Segment Time Left in Hours",
			                         Usage := Output,
			                         RADIX := Float,
			                         Required := No,
			                         Visible := Yes,
			                         ExternalAccess := Read Only,
			                         DefaultData := 0.00000000e+000);
			SEG_TIME_EXP : REAL (Description := "Segment Time Expired in Hours",
			                        Usage := Output,
			                        RADIX := Float,
			                        Required := No,
			                        Visible := Yes,
			                        ExternalAccess := Read Only,
			                        DefaultData := 0.00000000e+000);
			TOT_TIME : REAL (Usage := Output,
			                    RADIX := Float,
			                    Required := No,
			                    Visible := Yes,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0.00000000e+000);
			CYC_TIME : REAL (Usage := Output,
			                    RADIX := Float,
			                    Required := No,
			                    Visible := Yes,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0.00000000e+000);
			RUN_MODE : BOOL (Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			DONE : BOOL (Usage := Output,
			                RADIX := Decimal,
			                Required := No,
			                Visible := Yes,
			                ExternalAccess := Read Only,
			                DefaultData := 0);
			SEG_PRE_MOD : BOOL (Description := "Segment Timer Preset Modiication Mode Command",
			                       Usage := Input,
			                       RADIX := Decimal,
			                       Required := No,
			                       Visible := No,
			                       DefaultData := 0);
			SEG_TIME_SP : REAL[11] (Usage := InOut,
			                       RADIX := Float,
			                       Required := Yes,
			                       Visible := Yes);
			SEG_SP : REAL[11] (Usage := InOut,
			                  RADIX := Float,
			                  Required := Yes,
			                  Visible := Yes);
			SEG_TIME : REAL[11] (Usage := InOut,
			                    RADIX := Float,
			                    Required := Yes,
			                    Visible := Yes);
			SEG_HOLD_TIME : REAL[11] (Usage := InOut,
			                         RADIX := Float,
			                         Required := Yes,
			                         Visible := Yes);
		END_PARAMETERS

		LOCAL_TAGS
			Seg_Tmr : TIMER[11] (ExternalAccess := None,
			                  DefaultData := "[[0,0,0],[0,600000,0],[0,1200000,0],[0,1800000,0],[0,2400000,0],[0,3000000,0],[0,3600000,0],[0,4200000,0],[0,4200000,0],[0,5400000,0],[0,6000000,0]]");
			ONS : BOOL[32] (RADIX := Decimal,
			              ExternalAccess := None,
			              DefaultData := "[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0]");
			Current_Segment : BOOL[32] (RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := "[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0]");
			First_Scan : BOOL (RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			Total_Cycle_Tmr : TIMER (Description := "Total Cycle Time Timer",
			                          COMMENT.PRE := "Total Cycle Time Timer Preset - msec (Max Timer Preset is 596 hrs / 24 days)",
			                          ExternalAccess := None,
			                          DefaultData := "[0,2147483600,0]");
			Seg_Hold_Tmr : TIMER[11] (ExternalAccess := None,
			                       DefaultData := "[[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0]]");
			Seg_Sum_1 : REAL (RADIX := Float,
			                    ExternalAccess := None,
			                    DefaultData := 0.00000000e+000);
			Seg_Pre_Mod_Tmr : TIMER (Description := "Segment Timer Preset Modification Timer",
			                          ExternalAccess := None,
			                          DefaultData := "[0,180000,0]");
			Seg_Pre_Mod_Loc : BOOL (Description := "Segment Timer Preset Modification Mode Local Tag",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
		END_LOCAL_TAGS

		ROUTINE Logic 
				N: NOP();
				N: XIC(First_Scan)[XIC(RUN_CMD) XIO(RUN_MODE) OTL(RUN_MODE) ,XIO(RUN_CMD) XIC(RUN_MODE) XIC(DONE) OTU(RUN_MODE) ];
				N: [XIC(INIT) ONS(ONS[31]) XIO(RUN_CMD) XIO(RUN_MODE) ,XIC(RUN_MODE) ONS(ONS[30]) XIC(RUN_CMD) ][RES(Seg_Tmr[1]) RES(Seg_Tmr[2]) RES(Seg_Tmr[3]) RES(Seg_Tmr[4]) RES(Seg_Tmr[5]) ,RES(Seg_Tmr[6]) RES(Seg_Tmr[7]) RES(Seg_Tmr[8]) RES(Seg_Tmr[9]) RES(Seg_Tmr[10]) RES(Total_Cycle_Tmr) ,RES(Seg_Hold_Tmr[1]) RES(Seg_Hold_Tmr[2]) RES(Seg_Hold_Tmr[3]) RES(Seg_Hold_Tmr[4]) RES(Seg_Hold_Tmr[5]) ,RES(Seg_Hold_Tmr[6]) RES(Seg_Hold_Tmr[7]) RES(Seg_Hold_Tmr[8]) RES(Seg_Hold_Tmr[9]) RES(Seg_Hold_Tmr[10]) ,OTU(Current_Segment[0]) OTU(Current_Segment[1]) OTU(Current_Segment[2]) OTU(Current_Segment[3]) OTU(Current_Segment[4]) OTU(Current_Segment[5]) ,OTU(Current_Segment[6]) OTU(Current_Segment[7]) OTU(Current_Segment[8]) OTU(Current_Segment[9]) OTU(Current_Segment[10]) ,MOV(SEG_SP[0],SP) MOV(0,CUR_SEG) MOV(0.0,SEG_TIME_LEFT) MOV(0.0,SEG_TIME_EXP) ,MOV(0.0,SEG_TIME[1]) MOV(0.0,SEG_TIME[2]) MOV(0.0,SEG_TIME[3]) MOV(0.0,SEG_TIME[4]) MOV(0.0,SEG_TIME[5]) ,MOV(0.0,SEG_TIME[6]) MOV(0.0,SEG_TIME[7]) MOV(0.0,SEG_TIME[8]) MOV(0.0,SEG_TIME[9]) MOV(0.0,SEG_TIME[10]) ,MOV(0.0,SEG_HOLD_TIME[1]) MOV(0.0,SEG_HOLD_TIME[2]) MOV(0.0,SEG_HOLD_TIME[3]) MOV(0.0,SEG_HOLD_TIME[4]) MOV(0.0,SEG_HOLD_TIME[5]) ,MOV(0.0,SEG_HOLD_TIME[6]) MOV(0.0,SEG_HOLD_TIME[7]) MOV(0.0,SEG_HOLD_TIME[8]) MOV(0.0,SEG_HOLD_TIME[9]) MOV(0.0,SEG_HOLD_TIME[10]) ];
				N: [XIC(RUN_MODE) ONS(ONS[29]) ,XIC(Seg_Pre_Mod_Tmr.DN) ][CPT(Seg_Tmr[1].PRE,SEG_TIME_SP[1]*60*60*1000) CPT(Seg_Tmr[2].PRE,SEG_TIME_SP[2]*60*60*1000) CPT(Seg_Tmr[3].PRE,SEG_TIME_SP[3]*60*60*1000) ,CPT(Seg_Tmr[4].PRE,SEG_TIME_SP[4]*60*60*1000) CPT(Seg_Tmr[5].PRE,SEG_TIME_SP[5]*60*60*1000) CPT(Seg_Tmr[6].PRE,SEG_TIME_SP[6]*60*60*1000) ,CPT(Seg_Tmr[7].PRE,SEG_TIME_SP[7]*60*60*1000) CPT(Seg_Tmr[8].PRE,SEG_TIME_SP[8]*60*60*1000) ,CPT(Seg_Tmr[9].PRE,SEG_TIME_SP[9]*60*60*1000) CPT(Seg_Tmr[10].PRE,SEG_TIME_SP[10]*60*60*1000) ];
				N: [XIC(SEG_PRE_MOD) XIO(Seg_Pre_Mod_Tmr.DN) OTE(Seg_Pre_Mod_Loc) ,XIC(Seg_Pre_Mod_Loc) [MOV(180000,Seg_Pre_Mod_Tmr.PRE) ,TOF(Seg_Pre_Mod_Tmr,?,?) ] ,XIC(SEG_PRE_MOD) OTU(SEG_PRE_MOD) ,XIC(RUN_MODE) ONS(ONS[28]) OTL(Current_Segment[0]) ];
				N: [XIC(Seg_Tmr[9].DN) XIC(Current_Segment[9]) XIO(DONE) [MOV(10,CUR_SEG) ,OTU(Current_Segment[9]) OTL(Current_Segment[10]) ] ,XIC(Current_Segment[10]) XIO(HOLD) [RTO(Seg_Tmr[10],?,?) ,GRT(Seg_Tmr[10].PRE,1000) CPT(SP,((SEG_SP[10]-SEG_SP[9])*Seg_Tmr[10].ACC/Seg_Tmr[10].PRE)+SEG_SP[9]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[10].PRE-Seg_Tmr[10].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[10].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[10]) ] ];
				N: [XIC(Seg_Tmr[8].DN) XIC(Current_Segment[8]) XIO(DONE) [MOV(9,CUR_SEG) ,OTU(Current_Segment[8]) OTL(Current_Segment[9]) ] ,XIC(Current_Segment[9]) XIO(HOLD) [RTO(Seg_Tmr[9],?,?) ,GRT(Seg_Tmr[9].PRE,1000) CPT(SP,((SEG_SP[9]-SEG_SP[8])*Seg_Tmr[9].ACC/Seg_Tmr[9].PRE)+SEG_SP[8]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[9].PRE-Seg_Tmr[9].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[9].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[9]) ] ];
				N: [XIC(Seg_Tmr[7].DN) XIC(Current_Segment[7]) XIO(DONE) [MOV(8,CUR_SEG) ,OTU(Current_Segment[7]) OTL(Current_Segment[8]) ] ,XIC(Current_Segment[8]) XIO(HOLD) [RTO(Seg_Tmr[8],?,?) ,GRT(Seg_Tmr[8].PRE,1000) CPT(SP,((SEG_SP[8]-SEG_SP[7])*Seg_Tmr[8].ACC/Seg_Tmr[8].PRE)+SEG_SP[7]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[8].PRE-Seg_Tmr[8].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[8].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[8]) ] ];
				N: [XIC(Seg_Tmr[6].DN) XIC(Current_Segment[6]) XIO(DONE) [MOV(7,CUR_SEG) ,OTU(Current_Segment[6]) OTL(Current_Segment[7]) ] ,XIC(Current_Segment[7]) XIO(HOLD) [RTO(Seg_Tmr[7],?,?) ,GRT(Seg_Tmr[7].PRE,1000) CPT(SP,((SEG_SP[7]-SEG_SP[6])*Seg_Tmr[7].ACC/Seg_Tmr[7].PRE)+SEG_SP[6]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[7].PRE-Seg_Tmr[7].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[7].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[7]) ] ];
				N: [XIC(Seg_Tmr[5].DN) XIC(Current_Segment[5]) XIO(DONE) [MOV(6,CUR_SEG) ,OTU(Current_Segment[5]) OTL(Current_Segment[6]) ] ,XIC(Current_Segment[6]) XIO(HOLD) [RTO(Seg_Tmr[6],?,?) ,GRT(Seg_Tmr[6].PRE,1000) CPT(SP,((SEG_SP[6]-SEG_SP[5])*Seg_Tmr[6].ACC/Seg_Tmr[6].PRE)+SEG_SP[5]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[6].PRE-Seg_Tmr[6].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[6].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[6]) ] ];
				N: [XIC(Seg_Tmr[4].DN) XIC(Current_Segment[4]) XIO(DONE) [MOV(5,CUR_SEG) ,OTU(Current_Segment[4]) OTL(Current_Segment[5]) ] ,XIC(Current_Segment[5]) XIO(HOLD) [RTO(Seg_Tmr[5],?,?) ,GRT(Seg_Tmr[5].PRE,1000) CPT(SP,((SEG_SP[5]-SEG_SP[4])*Seg_Tmr[5].ACC/Seg_Tmr[5].PRE)+SEG_SP[4]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[5].PRE-Seg_Tmr[5].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[5].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[5]) ] ];
				N: [XIC(Seg_Tmr[3].DN) XIC(Current_Segment[3]) XIO(DONE) [MOV(4,CUR_SEG) ,OTU(Current_Segment[3]) OTL(Current_Segment[4]) ] ,XIC(Current_Segment[4]) XIO(HOLD) [RTO(Seg_Tmr[4],?,?) ,GRT(Seg_Tmr[4].PRE,1000) CPT(SP,((SEG_SP[4]-SEG_SP[3])*Seg_Tmr[4].ACC/Seg_Tmr[4].PRE)+SEG_SP[3]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[4].PRE-Seg_Tmr[4].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[4].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[4]) ] ];
				N: [XIC(Seg_Tmr[2].DN) XIC(Current_Segment[2]) XIO(DONE) [MOV(3,CUR_SEG) ,OTU(Current_Segment[2]) OTL(Current_Segment[3]) ] ,XIC(Current_Segment[3]) XIO(HOLD) [RTO(Seg_Tmr[3],?,?) ,GRT(Seg_Tmr[3].PRE,1000) CPT(SP,((SEG_SP[3]-SEG_SP[2])*Seg_Tmr[3].ACC/Seg_Tmr[3].PRE)+SEG_SP[2]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[3].PRE-Seg_Tmr[3].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[3].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[3]) ] ];
				N: [XIC(Seg_Tmr[1].DN) XIC(Current_Segment[1]) XIO(DONE) [MOV(2,CUR_SEG) ,OTU(Current_Segment[1]) OTL(Current_Segment[2]) ] ,XIC(Current_Segment[2]) XIO(HOLD) [RTO(Seg_Tmr[2],?,?) ,GRT(Seg_Tmr[2].PRE,1000) CPT(SP,((SEG_SP[2]-SEG_SP[1])*Seg_Tmr[2].ACC/Seg_Tmr[2].PRE)+SEG_SP[1]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[2].PRE-Seg_Tmr[2].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[2].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[2]) ] ];
				N: [XIC(Current_Segment[0]) XIO(DONE) [MOV(1,CUR_SEG) ,OTU(Current_Segment[0]) OTL(Current_Segment[1]) ] ,XIC(Current_Segment[1]) XIO(HOLD) [RTO(Seg_Tmr[1],?,?) ,GRT(Seg_Tmr[1].PRE,1000) CPT(SP,((SEG_SP[1]-SEG_SP[0])*Seg_Tmr[1].ACC/Seg_Tmr[1].PRE)+SEG_SP[0]) ,CPT(SEG_TIME_LEFT,(Seg_Tmr[1].PRE-Seg_Tmr[1].ACC)/3600000.0) CPT(SEG_TIME_EXP,Seg_Tmr[1].ACC/3600000.0) MOV(SEG_TIME_EXP,SEG_TIME[1]) ] ];
				N: GRT(CUR_SEG,NUM_SEG)OTE(DONE);
				N: [MOV(2147483600,Total_Cycle_Tmr.PRE) ,XIC(RUN_MODE) XIO(DONE) RTO(Total_Cycle_Tmr,?,?) ,CPT(TOT_TIME,Total_Cycle_Tmr.ACC/3600000) ];
				N: [XIC(HOLD) XIC(RUN_MODE) [XIC(Current_Segment[1]) MOV(2147483600,Seg_Hold_Tmr[1].PRE) RTO(Seg_Hold_Tmr[1],?,?) DIV(Seg_Hold_Tmr[1].ACC,3600000,SEG_HOLD_TIME[1]) ,XIC(Current_Segment[2]) MOV(2147483600,Seg_Hold_Tmr[2].PRE) RTO(Seg_Hold_Tmr[2],?,?) DIV(Seg_Hold_Tmr[2].ACC,3600000,SEG_HOLD_TIME[2]) ,XIC(Current_Segment[3]) MOV(2147483600,Seg_Hold_Tmr[3].PRE) RTO(Seg_Hold_Tmr[3],?,?) DIV(Seg_Hold_Tmr[3].ACC,3600000,SEG_HOLD_TIME[3]) ,XIC(Current_Segment[4]) MOV(2147483600,Seg_Hold_Tmr[4].PRE) RTO(Seg_Hold_Tmr[4],?,?) DIV(Seg_Hold_Tmr[4].ACC,3600000,SEG_HOLD_TIME[4]) ,XIC(Current_Segment[5]) MOV(2147483600,Seg_Hold_Tmr[5].PRE) RTO(Seg_Hold_Tmr[5],?,?) DIV(Seg_Hold_Tmr[5].ACC,3600000,SEG_HOLD_TIME[5]) ,XIC(Current_Segment[6]) MOV(2147483600,Seg_Hold_Tmr[6].PRE) RTO(Seg_Hold_Tmr[6],?,?) DIV(Seg_Hold_Tmr[6].ACC,3600000,SEG_HOLD_TIME[6]) ,XIC(Current_Segment[7]) MOV(2147483600,Seg_Hold_Tmr[7].PRE) RTO(Seg_Hold_Tmr[7],?,?) DIV(Seg_Hold_Tmr[7].ACC,3600000,SEG_HOLD_TIME[7]) ,XIC(Current_Segment[8]) MOV(2147483600,Seg_Hold_Tmr[8].PRE) RTO(Seg_Hold_Tmr[8],?,?) DIV(Seg_Hold_Tmr[8].ACC,3600000,SEG_HOLD_TIME[8]) ,XIC(Current_Segment[9]) MOV(2147483600,Seg_Hold_Tmr[9].PRE) RTO(Seg_Hold_Tmr[9],?,?) DIV(Seg_Hold_Tmr[9].ACC,3600000,SEG_HOLD_TIME[9]) ,XIC(Current_Segment[10]) MOV(2147483600,Seg_Hold_Tmr[10].PRE) RTO(Seg_Hold_Tmr[10],?,?) DIV(Seg_Hold_Tmr[10].ACC,3600000,SEG_HOLD_TIME[10]) ] ,CPT(Seg_Sum_1,SEG_HOLD_TIME[1]+SEG_HOLD_TIME[2]+SEG_HOLD_TIME[3]+SEG_HOLD_TIME[4]+SEG_HOLD_TIME[5]) ,CPT(CYC_TIME,Seg_Sum_1+SEG_HOLD_TIME[6]+SEG_HOLD_TIME[7]+SEG_HOLD_TIME[8]+SEG_HOLD_TIME[9]+SEG_HOLD_TIME[10]) ];
				N: OTE(First_Scan);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION a_ValveDiscrete (Description := "Single or Double Solenoid Actuated Valve With Feedback",
	                                               Revision := "1.0",
	                                               RevisionExtension := "8294",
	                                               ExecutePrescan := No,
	                                               ExecutePostscan := No,
	                                               ExecuteEnableInFalse := No,
	                                               CreatedDate := "2010-11-04T06:53:40.281Z",
	                                               CreatedBy := "HP89002712128\Administrator",
	                                               EditedDate := "2019-09-26T00:53:01.906Z",
	                                               EditedBy := "DESKTOP-R0KGE9M\rober",
	                                               SoftwareRevision := "v32.01",
	                                               AdditionalHelpText := "This block is for a simple hand valve. These valves are changed manually by the operator when required. If a valve is left partially open, no alarm is raised, but the process will not continue until the valve is in the state required by the code.")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			C_REM : BOOL (Description := "Valve HOA Switch in Auto Mode",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_HND : BOOL (Description := "Valve HOA Switch in Hand Mode",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_SW_AUT : BOOL (Description := "Request Software Automatic mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_SW_MAN : BOOL (Description := "Request Software Manual mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := Yes,
			                    DefaultData := 0);
			C_AUT_CLS : BOOL (Description := "Close cylinder request (automatic)",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     DefaultData := 0);
			C_AUT_OPN : BOOL (Description := "Open cylinder request (automatic)",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     DefaultData := 0);
			C_MAN_OPN : BOOL (Description := "Operator Open request",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     DefaultData := 0);
			C_MAN_CLS : BOOL (Description := "Operator Close request",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     DefaultData := 0);
			C_IOK_OPN : BOOL (Description := "Interlocks healthy$Nto Open",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := Yes,
			                     Visible := Yes,
			                     DefaultData := 0);
			C_IOK_CLS : BOOL (Description := "Interlocks healthy to Close",
			                     Usage := Input,
			                     RADIX := Decimal,
			                     Required := Yes,
			                     Visible := Yes,
			                     DefaultData := 0);
			C_RAL : BOOL (Description := "Reset block alarms",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_WW_OPN : BOOL (Description := "HMI Request To Open Device in Software Manual Mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_CLS : BOOL (Description := "HMI Request To Close Device in Software Manual Mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_AUT : BOOL (Description := "HMI Request Software Auto Mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_MAN : BOOL (Description := "HMI Request Software Manual Mode",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_CFG_TIMER : DINT (Description := "Cylinder close/open watchdog timer preset",
			                       Usage := Input,
			                       RADIX := Decimal,
			                       Required := Yes,
			                       Visible := Yes,
			                       DefaultData := 0);
			I_CLS : BOOL (Description := "Device closed input",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			I_OPN : BOOL (Description := "Device open input",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0);
			O_CLS : BOOL (Description := "Solenoid valve output to CLOSE",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			O_OPN : BOOL (Description := "Solenoid valve output to OPEN",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := Yes,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_AUT : BOOL (Description := "Valve in Software Auto mode",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MAN : BOOL (Description := "Valve in Software Manual mode",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_SW_AUT : BOOL (Description := "Valve in Software Auto Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_SW_MAN : BOOL (Description := "Valve in Software Manual Mode",
			                    Usage := Output,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only,
			                    DefaultData := 0);
			S_IOK_OPN : BOOL (Description := "Interlocks OK$Nto Open",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_IOK_CLS : BOOL (Description := "Interlocks OK$Nto Close",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := Yes,
			                     ExternalAccess := Read Only,
			                     DefaultData := 0);
			S_OPN : BOOL (Description := "Device is opened or out",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_CLS : BOOL (Description := "Device is closed or in",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_CLG : BOOL (Description := "Device is closing",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_OPG : BOOL (Description := "Device is opening",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_FLT : BOOL (Description := "Device has faulted",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_OPN : BOOL (Description := "Device failed to open",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_CLS : BOOL (Description := "Device has failed to close",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			A_STS : BOOL (Description := "Sensor fault (device cannot be open and closed simultaneously)",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
		END_PARAMETERS

		LOCAL_TAGS
			ManualModeClose : BOOL (Description := "Close valve in Manual mode",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			WatchdogOpenTimer : TIMER (Description := "Check whether valve has opened in time",
			                            ExternalAccess := None,
			                            DefaultData := "[0,0,0]");
			WatchdogCloseTimer : TIMER (Description := "Check whether valve has closed in time",
			                             ExternalAccess := None,
			                             DefaultData := "[0,0,0]");
			BothSensorTMR : TIMER (Description := "Both Feedback$NSensors are On$NFault Timer",
			                        ExternalAccess := None,
			                        DefaultData := "[0,1000,0]");
			ManualModeOpen : BOOL (Description := "Open valve in Manual mode",
			                         RADIX := Decimal,
			                         ExternalAccess := None,
			                         DefaultData := 0);
			AutoModeOpen : BOOL (Description := "Open Valve in Auto mode",
			                       RADIX := Decimal,
			                       ExternalAccess := None,
			                       DefaultData := 0);
			AutoModeClose : BOOL (Description := "Close Valve in Auto mode",
			                        RADIX := Decimal,
			                        ExternalAccess := None,
			                        DefaultData := 0);
			ManualMode : BOOL (Description := "Software Manual$NMode Active",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			AutomaticMode : BOOL (Description := "Software Automatic Mode Active",
			                        RADIX := Decimal,
			                        ExternalAccess := None,
			                        DefaultData := 0);
			Sol_2 : BOOL (Description := "Double Acting Actuator with 2 Solenoids",
			                RADIX := Decimal,
			                ExternalAccess := None,
			                DefaultData := 0);
			NO_Sol_1 : BOOL (Description := "Single Acting Actuator NO with 1 Solenoid",
			                   RADIX := Decimal,
			                   ExternalAccess := None,
			                   DefaultData := 0);
			NC_Sol_1 : BOOL (Description := "Single Acting Actuator NC with 1 Solenoid",
			                   RADIX := Decimal,
			                   ExternalAccess := None,
			                   DefaultData := 0);
		END_LOCAL_TAGS

		ROUTINE Logic 
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "SINGLE OR DOUBLE SOLENOID ACTUATED VALVE WITH FEEDBACK$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Trigger alarms when opening time is too long, or when sensors are on at the same time$N"
				    "";
				N: NOP();
				RC: "Mode Selection : Software Auto and Software Manual mode statuses are only active when the HOA switch is in AUTO$N"
				    "";
				N: [XIC(C_SW_AUT) ,XIC(S_SW_AUT) ]XIO(C_SW_MAN)OTE(S_SW_AUT);
				N: XIO(S_SW_AUT)OTE(S_SW_MAN);
				N: XIC(C_REM)XIC(S_SW_AUT)OTE(S_AUT);
				N: XIC(C_REM)XIC(S_SW_MAN)OTE(S_MAN);
				N: XIC(C_IOK_CLS)OTE(S_IOK_CLS);
				N: XIC(C_IOK_OPN)OTE(S_IOK_OPN);
				RC: "Valve Statuses";
				N: XIC(O_OPN)XIC(I_OPN)OTE(S_OPN);
				N: XIC(O_CLS)XIC(I_CLS)OTE(S_CLS);
				N: XIC(O_OPN)XIO(S_OPN)OTE(S_OPG);
				N: XIC(O_CLS)XIO(S_CLS)OTE(S_CLG);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "VALVE LOGIC$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "MANUAL OPERATION PRECONDITIONS $N"
				    "$N"
				    "Open and Close device from HMI - latch broken if Auto mode selected$N"
				    "";
				N: XIC(S_MAN)[XIC(C_MAN_CLS) ,XIC(ManualModeClose) ]XIO(C_MAN_OPN)XIC(S_IOK_CLS)OTE(ManualModeClose);
				N: XIC(S_MAN)[XIC(C_MAN_OPN) ,XIC(ManualModeOpen) ]XIO(C_MAN_CLS)XIC(S_IOK_OPN)OTE(ManualModeOpen);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "VALVE LOGIC$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "AUTO OPERATION PRECONDITIONS $N"
				    "$N"
				    "Open and Close device from PLC Program - latch broken if Manual mode selected$N"
				    "";
				N: XIC(S_AUT)XIC(C_AUT_CLS)XIO(C_AUT_OPN)XIC(S_IOK_CLS)OTE(AutoModeClose);
				N: XIC(S_AUT)XIC(C_AUT_OPN)XIO(C_AUT_CLS)XIC(S_IOK_OPN)OTE(AutoModeOpen);
				RC: "CLOSE ACTUATED VALVE$N"
				    "$N"
				    "MANUAL: OK to energize when no faults, interlocks are healthy, and in manual mode$N"
				    "AUTO: OK to energize when no faults, interlock are healthy and in auto mode$N"
				    "MAINTENANCE / HAND: Energize when HOA switch in in Hand, No interlock used - Single solenoid only$N"
				    "";
				N: [XIC(ManualModeClose) ,XIC(AutoModeClose) ,XIO(C_REM) XIO(C_HND) ]OTL(O_CLS)OTU(O_OPN);
				RC: "OPEN ACTUATED VALVE$N"
				    "$N"
				    "MANUAL: OK to energize when no faults, interlocks are healthy, and in manual mode$N"
				    "AUTO: OK to energize when no faults, interlock are healthy and in auto mode$N"
				    "MAINTENANCE / HAND: Energize when HOA switch in in Hand, No interlock used - Single solenoid only$N"
				    "";
				N: [XIC(ManualModeOpen) ,XIC(AutoModeOpen) ,XIC(C_HND) ]OTL(O_OPN)OTU(O_CLS);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "ALARMS$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "";
				N: MOV(C_CFG_TIMER,WatchdogOpenTimer.PRE);
				N: MOV(C_CFG_TIMER,WatchdogCloseTimer.PRE);
				RC: "Valve opening watchdog timer - make sure valve opens in required time";
				N: XIC(O_OPN)XIO(I_OPN)TON(WatchdogOpenTimer,?,?);
				N: [XIC(WatchdogOpenTimer.DN) ,XIC(A_OPN) XIO(C_RAL) ]OTE(A_OPN);
				RC: "Valve closing watchdog timer - make sure valve closes in required time";
				N: XIC(O_CLS)XIO(I_CLS)TON(WatchdogCloseTimer,?,?);
				N: [XIC(WatchdogCloseTimer.DN) ,XIC(A_CLS) XIO(C_RAL) ]OTE(A_CLS);
				RC: "Check that both open and closed sensors are not on at the same time - this can be a problem for normal fault timer";
				N: MOV(C_CFG_TIMER,BothSensorTMR.PRE);
				N: XIC(I_CLS)XIC(I_OPN)TON(BothSensorTMR,?,?);
				N: [XIC(BothSensorTMR.DN) ,XIC(A_STS) XIO(C_RAL) ]OTE(A_STS);
				N: [XIC(A_OPN) ,XIC(A_CLS) ,XIC(A_STS) ]OTE(S_FLT);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	ADD_ON_INSTRUCTION_DEFINITION a_ValvePositioning (Description := "Positiong Valve",
	                                                  Revision := "1.0",
	                                                  RevisionExtension := "8294",
	                                                  ExecutePrescan := No,
	                                                  ExecutePostscan := No,
	                                                  ExecuteEnableInFalse := No,
	                                                  CreatedDate := "2009-07-16T01:06:22.775Z",
	                                                  CreatedBy := "MAR-RA09-VB\Rockwell2009",
	                                                  EditedDate := "2019-09-26T00:54:06.453Z",
	                                                  EditedBy := "DESKTOP-R0KGE9M\rober",
	                                                  SoftwareRevision := "v32.01",
	                                                  AdditionalHelpText := "Note that data that goes directly to the HMI is shown on the block interface (visible), but is not required. This means the programmer can see the status of the device block from the calling subroutine, but does not have to create intermediate tags for this information.$N$NAll time configurations are in milliseconds, as per the Controllogix standard$N$NEvery comment beginning with HMI can be controlled from the SCADA$N$NMotor reset should be either by area or by all")
		
		PARAMETERS
			EnableIn : BOOL (Description := "Enable Input - System Defined Parameter",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    ExternalAccess := Read Only);
			EnableOut : BOOL (Description := "Enable Output - System Defined Parameter",
			                     Usage := Output,
			                     RADIX := Decimal,
			                     Required := No,
			                     Visible := No,
			                     ExternalAccess := Read Only);
			C_AUT : BOOL (Description := "Auto Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_MAN : BOOL (Description := "Manual Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_MNT : BOOL (Description := "Maintenance Mode Requested",
			                 Usage := Input,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 DefaultData := 0);
			C_PSP : REAL (Description := "Position Command (User Defined Units)",
			                 Usage := Input,
			                 RADIX := Float,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0.00000000e+000);
			C_MSP : REAL (Description := "Position in User Defined Units At Valve Max Position",
			                 Usage := Input,
			                 RADIX := Float,
			                 Required := Yes,
			                 Visible := Yes,
			                 DefaultData := 0.00000000e+000);
			C_Max_Raw : REAL (Description := "Max Raw Counts to Output Module",
			                     Usage := Input,
			                     RADIX := Float,
			                     Required := Yes,
			                     Visible := Yes,
			                     DefaultData := 0.00000000e+000);
			C_WW_AUT : BOOL (Description := "Auto Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_MAN : BOOL (Description := "Manual Mode$NRequest From HMI",
			                    Usage := Input,
			                    RADIX := Decimal,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0);
			C_WW_Pos : REAL (Description := "Manual Mode Position Setpoint From HMI",
			                    Usage := Input,
			                    RADIX := Float,
			                    Required := No,
			                    Visible := No,
			                    DefaultData := 0.00000000e+000);
			C_WW_Pos_HS : BOOL (Description := "Manual Mode Position Setpoint Hand Shake From HMI",
			                       Usage := Input,
			                       RADIX := Decimal,
			                       Required := No,
			                       Visible := No,
			                       DefaultData := 0);
			O_PSP : REAL (Description := "Position Stepoint (Raw Scaled Counts)",
			                 Usage := Output,
			                 RADIX := Float,
			                 Required := Yes,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0.00000000e+000);
			S_AUT : BOOL (Description := "Auto Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MAN : BOOL (Description := "Manual Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_MNT : BOOL (Description := "Maintenance Mode Active",
			                 Usage := Output,
			                 RADIX := Decimal,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0);
			S_PFB : REAL (Description := "Position Feedback (User Defined Units)",
			                 Usage := Output,
			                 RADIX := Float,
			                 Required := No,
			                 Visible := Yes,
			                 ExternalAccess := Read Only,
			                 DefaultData := 0.00000000e+000);
		END_PARAMETERS

		LOCAL_TAGS
			ManualMode : BOOL (Description := "Valve in Manual Mode",
			                     RADIX := Decimal,
			                     ExternalAccess := None,
			                     DefaultData := 0);
			AutomaticMode : BOOL (Description := "Valve in Automatic Mode",
			                        RADIX := Decimal,
			                        ExternalAccess := None,
			                        DefaultData := 0);
			MaintenanceMode : BOOL (Description := "Motor in Maintenance Mode",
			                          RADIX := Decimal,
			                          ExternalAccess := None,
			                          DefaultData := 0);
			PositionCommand : REAL (Description := "Position Command",
			                          RADIX := Float,
			                          ExternalAccess := None,
			                          DefaultData := 0.00000000e+000);
		END_LOCAL_TAGS

		ROUTINE Logic 
				RC: "**************************************************************************************$N"
				    "Positioning Valve Control Block$N"
				    "**************************************************************************************$N"
				    "1. Position Valve$N"
				    "$N"
				    "";
				N: NOP();
				RC: "------------------------------------------------------------------------------------------------------------------$N"
				    "MODE SELECTION$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "Maint";
				N: XIC(C_MNT)[OTL(MaintenanceMode) ,OTU(ManualMode) ,OTU(AutomaticMode) ];
				RC: "Manual mode selected (deselect other possible modes)";
				N: XIC(C_MAN)[OTL(ManualMode) ,OTU(MaintenanceMode) ,OTU(AutomaticMode) ];
				RC: "Automatic mode selected (deselect other possible modes)";
				N: XIC(C_AUT)[OTL(AutomaticMode) ,OTU(MaintenanceMode) ,OTU(ManualMode) ];
				N: XIO(AutomaticMode)XIO(MaintenanceMode)XIO(ManualMode)OTL(ManualMode);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "VALVE POSITION COMMAND$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "";
				N: CPT(O_PSP,C_PSP/C_MSP*C_Max_Raw);
				RC: "$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "VALVE POSITION FEEDBACK$N"
				    "------------------------------------------------------------------------------------------------------------------$N"
				    "$N"
				    "";
				N: CPT(S_PFB,O_PSP*C_MSP/C_Max_Raw);
				RC: "Mode active signals (auto, manual, maintenance)";
				N: XIC(MaintenanceMode)OTE(S_MNT);
				N: XIC(ManualMode)OTE(S_MAN);
				N: XIC(AutomaticMode)OTE(S_AUT);
		END_ROUTINE

	END_ADD_ON_INSTRUCTION_DEFINITION

	TAG
		AC_First_Scan : BOOL (Description := "Autoclave Test Program First Scan Completed",
		            RADIX := Decimal) := 1;
		A_DBL_Valve : a_ValveDiscrete (Description := "Double Solenoid Valve AOI") := [380243015,5000,64,[2689084,5000,0],[3512816,5000,0],[0,5000,0]];
		A_E300_1 : a_E300Ovld_FVNR (Description := "E300 Overload Relay #1 AOI: ") := [152306183,5000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,0,0,32,1467392,0,0,0,0,4096,32,[721637,5000,5000
				],[0,3600000,0],[0,3600000,0],[3839276,3600000,0],[721637,5000,5000],0,[0,0],[[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0,2000,0],[0
				,2000,0],[0,2000,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,2000,0],[0,2000,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0
				,0,0],[0,0,0],[0,0,0],[0,0,0]],[128,0],0,9999,0,0,0,2,16,0,0,[193894,5000,0]];
		A_E300_2 : a_E300Ovld_FVR (Description := "E300 Overload Relay #2 AOI:") := [1218447367,5000,20000,46956544,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0,0,0,0,32,0,0,0,0,0,24576,32,[721513
				,5000,5000],[0,3600000,0],[0,3600000,0],[0,3600000,0],[721513,5000,5000],0,[0,0],[[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0
				,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[128,0],0,9999,0,0,0,0,14
				,0,[3860790,5000,0],[721513,20000,20000],[721513,20000,20000],[3888190,5000,0]];
		A_MotorFVNR_1 : a_MotorFVNR (Description := "Full Voltage Non-Reversing Motor Starter #1 AOI") := [371917447,5000,0,[3513841,5000,0]];
		A_MotorFVR_1 : a_MotorFVR (Description := "Full Voltage Reversing Motor Starter #1 AOI:") := [1160775687,5000,15000,0,[1795253,5000,0],[721637,15000,15000],[721637,15000,15000],[3793183,5000,0]];
		A_NC_Valve : a_ValveDiscrete (Description := "Normally Closed Valve AOI") := [-1498936249,5000,66,[1040771,5000,0],[-1609891049,5000,5000],[0,5000,0]];
		A_NO_Valve : a_ValveDiscrete (Description := "Normally Open Valve AOI") := [-961540985,5000,33,[-1609891024,5000,5000],[1437991,5000,0],[0,5000,0]];
		A_PF525_VFD_1 : a_PF525_VFD (Description := "Powerflex 525 VFD 1 AOI: ") := [554303495,1.72500000e+003,1.72500000e+003,1.72500000e+003,5000,0.00000000e+000,0.00000000e+000
				,0,1,24576,[576991,5000,0],[721738,2000,2000]];
		A_PF755_VFD_1 : a_PF755_VFD (Description := "Powerflex 755 VFD 1 AOI:") := [18219559,1.73500000e+003,1.72500000e+003,1.72500000e+003,1.72500000e+003,5000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0,2,24576,[962318,5000,0],[721513,2000,2000],-2.58750000e+003,2588
				];
		BTC_RNG_1 : A_Uniform_RNG (Description := "Linear Congruential Generator as a Random Number Generator #1") := [3,-1448164318,110351245,12345,0.00000000e+000,1.00000000e+000,1.52824759e-001,-328188685
				,-328188685,1.52824759e-001];
		BTC_RNG_2 : A_Uniform_RNG (Description := "Linear Congruential Generator as a Random Number Generator #2") := [3,-1044812739,110351245,12345,0.00000000e+000,1.00000000e+000,7.78378844e-001,-1671555886
				,475927762,7.78378844e-001];
		CV_1_Auto_Position : REAL (Description := "Control Valve 1 Auto Mode Position$N(0.0 to 100.0%)",
		            RADIX := Float) := 2.50000000e+001;
		CV_1_Output : REAL (Description := "Control Valve 1 Output (Raw Counts)",
		            RADIX := Float) := 7.62000000e+003;
		CV_1_Position : a_ValvePositioning (Description := "Control Valve Positon AOI") := [4359,2.50000000e+001,1.00000000e+002,3.04800000e+004,2.50000000e+001,7.62000000e+003,2.50000000e+001
				,0.00000000e+000];
		DBL_Valve_Close_Timer : TIMER (Description := "Double Solenoid Valve Close Delay Timer",
		            COMMENT.DN := "Double Solenoid Valve Close Delay Timer Done Bit") := [-1609891624,4000,4000];
		DBL_Valve_CLS_PB : BOOL (Description := "Double Solenoid Valve Close Pushbutton Bit",
		            RADIX := Decimal) := 0;
		DBL_Valve_Hnd_SS : BOOL (Description := "Double Solenoid Valve Hand Motde Selector Switch",
		            RADIX := Decimal) := 0;
		DBL_Valve_Off_SS : BOOL (Description := "Double Solenoid Valve Off Motde Selector Switch",
		            RADIX := Decimal) := 0;
		DBL_Valve_Open_Timer : TIMER (Description := "Double Solenoid Valve Open Delay Timer",
		            COMMENT.DN := "Double Solenoid Valve Open Delay Timer Done Bit") := [2693684,4000,0];
		DBL_Valve_OPN_PB : BOOL (Description := "Double Solenoid Valve Open Pushbutton Bit",
		            RADIX := Decimal) := 0;
		DBL_Valve_Rem_SS : BOOL (Description := "Double Solenoid Valve Remote Motde Selector Switch",
		            RADIX := Decimal) := 1;
		DBL_Valve_Sol_CLS OF DO_S1_Data.8 (RADIX := Decimal);
		DBL_Valve_Sol_OPN OF DO_S1_Data.9 (RADIX := Decimal);
		Disable_1 : BOOL (RADIX := Decimal) := 0;
		DI_S2_Data : INT (COMMENT.0 := "Normally Closed Valve Open Limit Switch",
		            COMMENT.1 := "Normally Closed Valve Closed Limit Switch",
		            COMMENT.2 := "Normally Open Valve Open Limit Switch",
		            COMMENT.3 := "Normally Open Valve Closed Limit Switch",
		            COMMENT.4 := "Full Voltage Non-Reversing Motor Starter #1 Running",
		            COMMENT.8 := "Double Solenoid Valve Closed Limit Switch",
		            COMMENT.9 := "Double Solenoid Valve Open Limit Switch",
		            COMMENT.10 := "Full Voltage Reversing Motor Starter #1 Running Forward",
		            COMMENT.11 := "Full Voltage Reversing Motor Starter #1 Running Reverse",
		            RADIX := Decimal) := 0;
		DO_S1_Data : DINT (Description := "Slot #1 1769-OAD Module Buffer Tag",
		            COMMENT.0 := "Normally Closed Valve Solenoid",
		            COMMENT.1 := "Normally Open Valve Solenoid",
		            COMMENT.2 := "Full Voltage Non-Reversing Motor Starter #1",
		            COMMENT.8 := "Double Solenoid Valve Close Solenoid",
		            COMMENT.9 := "Double Solenoid Valve Open Solenoid",
		            COMMENT.10 := "Full Voltage Reversing Motor Starter #1 Forward",
		            COMMENT.11 := "Full Voltage Reversing Motor Starter #1 Reverse",
		            RADIX := Decimal) := 256;
		E300_1_Start_PB : BOOL (Description := "E300 Overload Relay #1 Local Start Pushbutton",
		            RADIX := Decimal) := 0;
		E300_1_Stop_PB : BOOL (Description := "E300 Overload Relay #1 Local Stop Pushbutton",
		            RADIX := Decimal) := 0;
		E300_2_MCP_OK : BOOL (Description := "E300 Overload Relay #2 OK / Not Tripped",
		            RADIX := Decimal) := 0;
		E300_2_Start_FWD_PB : BOOL (Description := "E300 Overload Relay #2 Start Forward Pushbutton",
		            RADIX := Decimal) := 0;
		E300_2_Start_REV_PB : BOOL (Description := "E300 Overload Relay #2 Start Reverse Pushbutton",
		            RADIX := Decimal) := 0;
		E300_2_Stop_PB : BOOL (Description := "E300 Overload Relay #2 Stop Pushbutton",
		            RADIX := Decimal) := 0;
		False : BOOL (Description := "Always False Bit",
		            RADIX := Decimal) := 0;
		FAL_Test_1 : CONTROL (Description := "FAL Test #1 Control") := [0,24,0];
		FAL_Test_Total : REAL (RADIX := Float) := 3.48000000e+002;
		Fault_Reset_Cmd : BOOL (Description := "Fault Reset Command",
		            RADIX := Decimal) := 0;
		Fault_Reset_PB : BOOL (Description := "Fault Reset Pushbutton",
		            RADIX := Decimal) := 0;
		Fault_Reset_Timer : TIMER (Description := "Fault Reset Timer") := [240276,1000,0];
		FFL_Load_1 : CONTROL (Description := "FIFO Load #1 Control") := [536870912,24,24];
		FFU_Trash_1 : REAL (RADIX := Float) := 2.00000000e+000;
		FFU_Unload_1 : CONTROL (Description := "FIFO Unload #1 Control") := [0,24,22];
		FIFO_1_Data : REAL[24] (RADIX := Float) := [3.00000000e+000,4.00000000e+000,5.00000000e+000,6.00000000e+000,7.00000000e+000,8.00000000e+000
				,9.00000000e+000,1.00000000e+001,1.10000000e+001,1.20000000e+001,1.30000000e+001,1.40000000e+001
				,1.50000000e+001,1.60000000e+001,1.70000000e+001,1.80000000e+001,1.90000000e+001,2.00000000e+001
				,2.10000000e+001,2.20000000e+001,2.30000000e+001,2.40000000e+001,2.50000000e+001,2.60000000e+001
				];
		FIFO_1_Data_Source : REAL (Description := "FIFO Load #1 Data Source",
		            RADIX := Float) := 2.60000000e+001;
		Flash_Off : BOOL (Description := "Flash Off Bit",
		            RADIX := Decimal) := 1;
		Flash_Off_PB : BOOL (Description := "Flash Off Pushbutton",
		            RADIX := Decimal) := 0;
		Flash_On : BOOL (Description := "Flasher On Bit",
		            RADIX := Decimal) := 0;
		Flash_Timer : TIMER (Description := "Flasher Timer",
		            COMMENT.DN := "Flasher Timer Done Bit") := [-1073020712,2000,275];
		Gauss_RNG : A_Gauss_RNG (Description := "Gaussian Random Number Generator") := [7,-6.23246014e-001,[0,-1438556186,110351245,12345,0.00000000e+000,1.00000000e+000,7.72504330e-001
				,-1658940441,488543207,7.72504330e-001],-1788605580,-1658940441,[0,-1658940441,110351245,12345
				,0.00000000e+000,1.00000000e+000,8.32884371e-001,-1788605580,358878068,8.32884371e-001],-8.67432296e-001
				,7.18495309e-001];
		Gauss_RNG_Data : REAL[1000] (Description := "Gaussian Random Number Generator Data from CompactLogix PLC",
		            RADIX := Float) := [-4.53829885e-001,5.88091612e-001,3.76977384e-001,8.35757613e-001,1.75132310e+000,-1.64686665e-001
				,1.20763838e+000,-1.00025320e+000,-2.43548822e+000,-3.68828684e-001,-9.66143310e-001,-5.12178242e-001
				,1.79203900e+000,-7.91257977e-001,1.67304695e-001,7.90551066e-001,1.54846000e-002,6.57742441e-001
				,1.80133665e+000,-1.44519567e+000,6.20974183e-001,-8.95607591e-001,1.95025474e-001,4.68149483e-001
				,-1.42610407e+000,-4.22326475e-001,-6.00772321e-001,2.78474778e-001,-1.78624421e-001,9.58840549e-001
				,9.19219971e-001,-1.71038067e+000,-1.93314528e+000,-2.12453127e+000,-5.86595714e-001,-2.47528926e-001
				,-1.64846134e+000,-1.39827216e+000,5.83120108e-001,-1.98251754e-001,1.78472996e-001,-4.47638839e-001
				,-4.56469685e-001,-8.85458410e-001,2.59073861e-002,-1.59160256e-001,-2.83860278e+000,5.09403169e-001
				,-1.52170599e-001,-1.40871012e+000,5.81554770e-001,3.69865745e-001,-1.38414353e-001,-7.69486129e-001
				,5.36680259e-002,-1.73092675e+000,-1.53454614e+000,-1.00402069e+000,7.60790586e-001,4.46929038e-001
				,1.71060160e-001,-3.32905680e-001,-8.16067219e-001,1.14481676e+000,-3.20104390e-001,-1.04715133e+000
				,-3.33250731e-001,4.75677729e-001,-5.63169000e-001,1.16861391e+000,-3.77395064e-001,-5.95633149e-001
				,1.26721799e-001,1.18247366e+000,-5.79503477e-001,5.29870749e-001,-1.61287975e+000,2.85196275e-001
				,4.79001611e-001,-2.82461047e-002,-6.32872522e-001,-9.80359137e-001,-2.60804862e-001,5.71293309e-002
				,-5.04785000e-001,4.14556354e-001,-1.25916529e+000,-4.09462094e-001,8.31402779e-001,9.71998274e-001
				,-6.42465651e-002,-1.67219397e-002,-1.03160048e+000,6.32411480e-001,-1.09143329e+000,7.26490617e-001
				,8.89057815e-001,-3.78086984e-001,-1.12317181e+000,1.57595229e+000,8.98854613e-001,-3.08605097e-002
				,1.06938951e-001,-1.25945938e+000,-1.05450535e+000,3.70016754e-001,-1.63604534e+000,-1.27335489e+000
				,1.33558309e+000,-3.65018189e-001,1.25299498e-001,-9.52798367e-001,1.66847944e+000,-9.42410409e-001
				,-2.90544808e-001,1.09742999e+000,-9.93186533e-002,-1.41954505e+000,-8.72964859e-001,-5.20862579e-001
				,2.70016283e-001,-4.45225745e-001,-2.24656418e-001,1.60035074e-001,7.48064100e-001,-1.25848854e+000
				,2.34704971e-001,-1.48572171e+000,2.06058055e-001,-6.62141860e-001,5.80288395e-002,5.98244309e-001
				,1.63453668e-001,-1.36053100e-001,1.63832709e-001,1.16064799e+000,1.50805616e+000,-2.64427483e-001
				,8.64403129e-001,-9.72520471e-001,-1.54220894e-001,-8.08602720e-002,-2.85481155e-001,-4.16195542e-001
				,6.44622445e-001,-9.76465523e-001,6.65242195e-001,1.01431608e+000,-1.90715110e+000,-5.33046246e-001
				,1.98270798e-001,7.57600248e-001,3.92381668e-001,4.19955194e-001,1.33474767e+000,3.48369062e-001
				,-4.15542781e-001,1.20762289e+000,-6.72272563e-001,1.14120841e+000,-6.80199385e-001,-2.11144400e-001
				,4.96906877e-001,-7.63372300e-001,-2.54946798e-001,-1.03534448e+000,3.86168300e-001,7.33683884e-001
				,2.70518839e-001,-1.01107700e+000,2.18045533e-001,-1.16364770e-001,-1.30744112e+000,-8.28316629e-001
				,1.94300264e-001,7.83034623e-001,2.19788343e-001,4.25316542e-001,-8.72898100e-002,-4.92178559e-001
				,-1.08739984e+000,-3.72942835e-001,4.14478332e-001,9.19812381e-001,6.09018862e-001,3.34933788e-001
				,-6.36200666e-001,1.85366824e-001,1.74670935e+000,2.00188947e+000,-1.36212635e+000,1.01157963e+000
				,3.49247724e-001,-9.87055957e-001,6.35617524e-002,-7.00953960e-001,-3.57789576e-001,1.55982813e-002
				,5.84521532e-001,1.25185049e+000,-1.21185884e-001,3.80022556e-001,1.21259415e+000,-1.08096933e+000
				,-1.20851755e+000,-2.24499732e-001,-3.01377147e-001,-8.10210526e-001,8.58325899e-001,2.46489811e+000
				,-3.90473828e-002,1.03439450e+000,6.88838065e-001,3.05173136e-002,-3.69055271e-001,3.05378389e+000
				,-1.10113800e+000,-6.26501500e-001,1.47713292e+000,5.41596532e-001,1.43075898e-001,-1.55400085e+000
				,-6.15304053e-001,3.43863487e-001,4.89027262e-001,1.62605956e-001,1.15025032e+000,1.04386076e-001
				,1.20144320e+000,1.69066584e+000,-1.65577245e+000,3.03857684e-001,2.28480959e+000,-7.40436435e-001
				,1.59084666e+000,1.00765789e+000,3.39676100e-002,-9.99436677e-001,-6.84706569e-001,5.83456874e-001
				,-3.75533074e-001,5.02306640e-001,8.04195881e-001,8.27081650e-002,-1.12501252e+000,-6.57212555e-001
				,2.38259658e-001,1.11222249e-002,-2.26751223e-001,-8.83281827e-001,4.12676513e-001,5.73748231e-001
				,7.82857239e-001,-5.92122853e-001,3.12268764e-001,7.30410159e-001,7.62304246e-001,-6.58760548e-001
				,-8.82702529e-001,5.37124455e-001,-1.28210747e+000,7.88097500e-001,-1.07347012e+000,-3.95340919e-002
				,-9.69973445e-001,-1.32428800e+000,-3.49940866e-001,2.47786686e-001,-8.94358456e-001,1.74563992e+000
				,5.34211576e-001,8.75737190e-001,-6.14090383e-001,3.49868417e-001,7.18951000e-002,-1.26131073e-001
				,-3.54227163e-002,-1.37693727e+000,-1.45120573e+000,-3.77019376e-001,8.83568883e-001,1.35975300e+000
				,-1.82390630e+000,-1.73984993e+000,-9.37085569e-001,-9.76519346e-001,4.02573407e-001,-1.28755152e+000
				,-4.38596815e-001,2.86564648e-001,-1.65340960e+000,-5.73698692e-002,-9.84019100e-001,1.67060077e+000
				,1.04976547e+000,8.30166399e-001,9.89676952e-001,-3.09928513e+000,9.35610533e-002,1.07982147e+000
				,7.40737557e-001,2.09476173e-001,2.91442931e-001,-1.53715797e-002,2.15914200e+000,6.56655371e-001
				,4.19974774e-001,-3.66982013e-001,1.13840118e-001,7.04270661e-001,-2.73768842e-001,1.22519300e+000
				,4.22121700e-001,6.94806933e-001,1.09035921e+000,-6.52419508e-001,-2.45107878e-002,1.19567549e+000
				,-3.40477467e-001,-1.01883245e+000,-1.43628466e+000,-8.65548730e-001,-2.72635520e-001,-1.47930610e+000
				,-1.22446477e+000,9.84857857e-001,-5.45066833e-001,-8.89625669e-001,-1.95379364e+000,-2.04658642e-001
				,-9.43255424e-001,4.00957763e-001,7.13550687e-001,-9.20982182e-001,2.35244185e-001,-3.81209612e-001
				,-2.46612709e-002,-2.50538647e-001,-1.41140020e+000,-9.89549220e-001,-1.48655081e+000,-1.10599661e+000
				,6.95967793e-001,1.87272930e+000,8.61577332e-001,1.47221661e+000,-2.28088808e+000,-6.05166517e-002
				,6.56443179e-001,-1.36405587e-001,-1.35966325e+000,-6.66194975e-001,1.64952135e+000,4.33857828e-001
				,-1.31193149e+000,3.61938775e-001,6.42874897e-001,4.40807372e-001,2.25343943e-001,-3.33464682e-001
				,1.12511837e+000,-9.01618779e-001,-1.15015137e+000,-1.91629541e+000,1.00881946e+000,1.58260262e+000
				,-6.77508414e-001,3.79719079e-001,-3.05101782e-001,1.80128783e-001,9.10973549e-001,-1.24404585e+000
				,1.39619797e-001,-1.87830791e-001,3.00007798e-002,6.21729791e-001,5.33491433e-001,-2.07605824e-001
				,8.01972985e-001,-1.20944989e+000,1.80158591e+000,1.38107049e+000,-5.89303017e-001,5.27185500e-001
				,2.49655455e-001,-2.07645100e-001,1.10856438e+000,-1.21715806e-001,2.61480540e-001,-3.65742743e-001
				,-1.03983390e+000,-6.14428461e-001,-2.42577910e-001,-4.90921587e-001,-5.01463175e-001,-3.66649359e-001
				,1.82806030e-001,8.19337368e-001,-3.03478390e-001,-2.18573019e-001,2.23495245e+000,1.54534681e-002
				,-8.17913637e-002,-1.76494682e+000,1.10652006e+000,1.58675992e+000,-2.35380426e-001,-9.52166438e-001
				,-6.29744112e-001,1.79109737e-001,-4.78284121e-001,-1.01104605e+000,8.35097790e-001,1.14747322e+000
				,1.23125100e+000,3.63103360e-001,3.68803200e-001,-5.03938973e-001,-5.79587281e-001,1.67489350e+000
				,1.62713814e+000,-2.37270847e-001,4.40944195e-001,-3.18400174e-001,-1.22579741e+000,1.86618614e+000
				,-1.07714856e+000,1.23518240e+000,-8.63104880e-001,-1.31742537e-001,3.14442444e+000,2.65298575e-001
				,3.88624966e-001,-1.52249825e+000,-8.75665098e-002,1.21606231e+000,6.73030436e-001,9.18400168e-001
				,1.55705214e+000,-1.83864343e+000,-9.04255569e-001,-1.03064752e+000,-7.25909948e-001,4.26584542e-001
				,1.45852387e+000,-5.18023729e-001,1.81313038e+000,-7.30670989e-001,1.30143237e+000,-1.59074891e+000
				,7.66157687e-001,5.14620900e-001,-1.79070508e+000,1.38236392e+000,-7.06578970e-001,-1.24830735e+000
				,-1.44915900e+000,-9.12831277e-002,-1.75306216e-001,-1.90195054e-001,-1.73615837e+000,1.60331738e+000
				,5.65203667e-001,-2.01254517e-001,-3.41678882e+000,-2.18052506e+000,1.23128400e+000,-3.68491918e-001
				,1.64210534e+000,-3.04009885e-001,-8.64453197e-001,1.91160440e-001,-1.36942959e+000,7.65881464e-002
				,-4.88266647e-001,-5.50917313e-002,-2.26020789e+000,7.00146675e-001,-1.80279124e+000,3.90278757e-001
				,1.08333755e+000,6.86996877e-001,6.53235734e-001,-5.01398921e-001,-1.81806135e+000,9.48821843e-001
				,-1.42489300e+000,2.55444914e-001,-2.11954176e-001,9.06079233e-001,-2.13988066e-001,1.46957612e+000
				,-4.58456039e-001,1.13237298e+000,-6.17183745e-001,9.21750784e-001,-1.10596061e+000,-1.68362331e+000
				,8.70013654e-001,1.21749747e+000,-1.90021813e-001,-6.72820389e-001,-7.28413820e-001,-1.14694440e+000
				,-5.15327156e-001,-1.18922472e+000,1.49144220e+000,4.62431431e-001,4.85344589e-001,-1.55206132e+000
				,3.68186500e-001,1.97677565e+000,-1.80641592e+000,1.39945805e+000,8.12734425e-001,-6.45566821e-001
				,5.39805532e-001,1.15844989e+000,-1.60365546e+000,-1.01646626e+000,-1.92599225e+000,2.52836086e-002
				,-5.66795766e-001,4.81233262e-002,-2.33979130e+000,4.84210789e-001,-6.84100389e-001,1.83923113e+000
				,9.14785862e-002,-1.07738471e+000,1.47635460e+000,-4.91550006e-002,9.99843776e-001,-2.35712075e+000
				,9.57324028e-001,7.43092954e-001,-4.38674800e-002,-8.32153857e-002,6.64816618e-001,-1.03622600e+000
				,-1.01869893e+000,-8.67066800e-001,2.76979595e-001,1.71933353e-001,7.58843362e-001,-4.21395421e-001
				,-2.80288607e-001,-1.73197997e+000,-2.77952671e-001,8.53201926e-001,7.44062900e-001,1.07042933e+000
				,-1.54851377e+000,4.80285734e-001,-2.12203500e-001,-7.47966766e-001,6.73207641e-002,1.88786075e-001
				,1.87211990e+000,-1.68201947e+000,2.95839286e+000,1.74648726e+000,-8.67065191e-001,-1.30408108e-001
				,1.00564443e-001,-1.07797360e+000,3.28282326e-001,1.83282152e-001,-6.46662712e-001,-1.18323648e+000
				,1.88738620e+000,-2.63905138e-001,1.49862313e+000,-5.61780743e-002,-7.28240728e-001,-6.57391012e-001
				,2.68930411e+000,-5.00384510e-001,-7.87831426e-001,-4.06167179e-001,1.05321598e+000,-6.89773321e-001
				,1.05700624e+000,3.82513046e-001,8.91220756e-003,7.37426639e-001,-2.04000965e-001,-7.92479277e-001
				,-1.99725878e+000,1.71999350e-001,8.16108510e-002,1.21198320e+000,5.26285589e-001,-9.25975740e-001
				,2.08430868e-002,1.00631940e+000,7.86960363e-001,-3.54512364e-001,-1.38101768e+000,-1.03412400e+000
				,-2.20158517e-001,-2.12371826e+000,3.58851400e-001,1.49721800e-001,-1.71691310e+000,6.07712507e-001
				,-1.10306156e+000,-8.44427794e-002,-1.04749465e+000,1.48632336e+000,1.50079906e+000,-1.40616274e+000
				,-3.71762961e-001,3.65567088e-001,1.39343393e+000,9.18821320e-002,7.57802963e-001,-3.93969834e-001
				,6.89039600e-002,3.83751690e-002,-2.74918556e+000,3.25082392e-001,-2.87612289e-001,-6.01262450e-001
				,5.96823812e-001,-1.00090885e+000,-2.00554657e+000,-2.73165441e+000,-7.83526300e-001,7.10588455e-001
				,-1.29955566e+000,-9.34110820e-001,-2.85876125e-001,9.89986598e-001,2.07096562e-001,1.24896578e-001
				,-7.13704000e-002,-4.54837596e-003,2.67585754e-001,8.37226391e-001,-1.71550617e-001,-1.35300124e+000
				,-7.77960420e-001,-1.83327451e-001,2.02218413e-001,-1.93863487e+000,-3.00265193e-001,5.06623387e-001
				,8.28339517e-001,-1.03039670e+000,1.37860096e+000,2.15658233e-001,3.23538300e-001,-2.37311527e-001
				,-1.70184422e+000,1.49590456e+000,4.08253968e-001,3.83448064e-001,1.59950495e+000,2.80833811e-001
				,1.04646254e+000,4.27668899e-001,-7.27877498e-001,-7.99398184e-001,-6.63542986e-001,-5.24795234e-001
				,5.43286500e-001,-1.66783392e+000,-1.69473565e+000,-1.28104126e+000,-3.78227867e-002,-4.79197890e-001
				,1.69764054e+000,-1.37922180e+000,1.03497855e-001,1.02578676e+000,-1.64371669e+000,-2.15795875e+000
				,-1.86513886e-001,4.82787609e-001,-3.41517955e-001,-1.81212008e+000,1.24758875e+000,-1.30135989e+000
				,1.41106260e+000,3.33393872e-001,-9.72049952e-001,4.74488258e-001,1.73386097e+000,-2.04571342e+000
				,-1.87152699e-001,2.47136012e-001,1.71316300e+000,4.35271829e-001,6.29265547e-001,7.95232952e-001
				,1.14334142e+000,2.73712352e-002,-1.66377735e+000,8.18427324e-001,-3.55814576e-001,-2.47934484e+000
				,1.30361810e-001,-6.68739974e-001,-1.54602500e+000,6.55199826e-001,2.17362785e+000,6.28513277e-001
				,1.04999578e+000,4.23968911e-001,-1.08994234e+000,7.97734559e-002,2.94935673e-001,-6.73819959e-001
				,1.02989244e+000,5.81452966e-001,4.00728174e-002,-1.80064008e-001,-8.63334239e-001,-4.53216285e-001
				,-8.11496735e-001,1.59394979e+000,-1.19048107e+000,1.94501281e-001,-1.65879905e-001,-4.95651752e-001
				,-4.78930800e-001,-1.49235591e-001,1.75878763e+000,-8.15595567e-001,1.26441658e+000,5.60131729e-001
				,1.55825481e-001,-1.86971664e-001,-2.99723223e-002,2.05082744e-001,-1.82908106e+000,1.00119495e+000
				,-1.36819016e-002,-4.29494023e-001,-1.58106709e+000,-7.93246269e-001,2.64658868e-001,-6.47756338e-001
				,1.72843800e-002,1.26724631e-001,-5.34847558e-001,3.10188144e-001,-3.64818752e-001,-1.76698208e+000
				,1.45688117e-001,1.33852184e+000,-1.23971426e+000,-1.31973314e+000,-7.76284635e-001,-7.74275422e-001
				,-8.47113848e-001,-1.85429406e+000,2.13627994e-001,-4.32343751e-001,-9.86366868e-001,1.92297786e-001
				,7.77405381e-001,-5.00357568e-001,1.30368257e+000,-5.41381419e-001,1.08448529e+000,3.70033056e-001
				,-7.31963694e-001,7.44375706e-001,2.23333000e-001,9.47271287e-001,-5.69847561e-002,1.70198452e+000
				,-1.65102494e+000,5.83994329e-001,-9.60629344e-001,-1.50075167e-001,1.57675300e+000,7.99653456e-002
				,-1.00499727e-001,-3.84631187e-001,-7.99730793e-002,9.10255075e-001,-2.67158449e-001,-5.52064955e-001
				,-1.80899700e+000,1.28951490e+000,5.07459223e-001,-1.15355933e+000,1.08573794e+000,7.25467980e-001
				,-1.66840363e+000,-4.19032633e-001,6.33188069e-001,2.47415472e-002,5.69669366e-001,6.66010976e-001
				,4.64631505e-002,1.85603067e-001,-6.55451894e-001,-6.48569167e-001,3.03205431e-001,-4.38212961e-001
				,-1.08906865e+000,2.51669437e-001,-8.90292451e-002,1.10355866e+000,-2.88644135e-001,3.92391294e-001
				,1.50078166e+000,8.43910873e-001,5.09728372e-001,-4.13308799e-001,-9.05134976e-001,-1.20877790e+000
				,-1.80746329e+000,-1.65276468e-001,6.97507262e-001,4.99634355e-001,-2.53337175e-001,-7.74926782e-001
				,8.20582271e-001,-4.55808312e-001,-1.89645326e+000,-1.26300693e+000,-1.21743238e+000,-9.65311468e-001
				,-1.01507999e-001,1.25143147e+000,1.14591098e+000,-1.20007165e-001,9.03784513e-001,7.23842025e-001
				,8.46446097e-001,-7.26512969e-001,-8.45999300e-001,4.91414189e-001,-3.06575060e-001,2.45478693e-002
				,1.23387000e+000,1.30583063e-001,-3.46447453e-002,8.69641185e-001,-2.79594398e+000,1.14079487e+000
				,2.01904607e+000,-2.96885639e-001,1.90893859e-001,-1.40196279e-001,7.94129014e-001,2.03221846e+000
				,2.47087336e+000,1.24497092e+000,-7.48634636e-001,6.29393995e-001,3.88149112e-001,6.60667658e-001
				,-1.03044558e+000,5.60425639e-001,-1.64681137e-001,-1.81655729e+000,-1.01657510e+000,-5.95671117e-001
				,-2.61882674e-002,1.27088928e+000,5.14240861e-001,7.95802414e-001,-1.59129700e+000,-1.76796138e+000
				,7.41788800e-001,-9.41800028e-002,-1.47746229e+000,1.24308895e-002,-2.26001740e-001,-1.37297034e+000
				,1.06392479e+000,-1.34138155e+000,-1.45535243e+000,-1.57628100e-001,5.75941861e-001,-1.96600616e+000
				,-2.75099993e-001,1.22510530e-001,-8.52364957e-001,1.24966788e+000,-1.22731888e+000,-3.52710426e-001
				,8.88207793e-001,-4.34227079e-001,-1.26873636e+000,-1.26091000e+000,-3.09388846e-001,-2.72527500e-002
				,-6.88755095e-001,-1.70897746e+000,1.09457827e+000,1.73121691e+000,1.98670737e-002,-5.97228348e-001
				,4.62842166e-001,-1.14226556e+000,-7.46285379e-001,9.30667877e-001,1.05457282e+000,9.31819528e-002
				,-1.34994626e+000,-2.24493051e+000,9.29166198e-001,6.22789323e-001,5.70100129e-001,7.67431200e-001
				,2.08241016e-001,1.27092000e-001,-8.67556989e-001,1.06021452e+000,3.15152347e-001,-9.33893323e-001
				,-1.83975800e-001,-7.55416632e-001,5.22096515e-001,3.78532410e-001,-1.24013031e+000,-1.81545100e+000
				,1.21780705e+000,-5.72014570e-001,7.39511371e-001,-9.51759994e-001,-2.55627483e-001,-6.32056117e-001
				,-1.07796700e+000,-1.02595913e+000,-1.46697474e+000,1.38894367e+000,-1.83654940e+000,4.55922782e-001
				,-2.05341600e+000,3.24456066e-001,4.77520563e-002,-1.34471560e+000,-1.65612566e+000,8.16399217e-001
				,4.48933333e-001,5.59531033e-001,1.81258768e-001,-4.10012424e-001,-1.04142940e+000,-1.10966057e-001
				,1.73938021e-001,-1.84775198e+000,-6.83021605e-001,4.82219458e-002,1.55429486e-002,-6.96403921e-001
				,-9.66441214e-001,9.08682644e-001,-1.22297823e+000,-1.92144191e+000,-9.03439400e-001,6.40582442e-001
				,6.34478390e-001,-1.25357759e+000,-2.12140894e+000,1.34070444e+000,4.86971438e-001,6.23959899e-001
				,4.63583022e-001,-4.56265926e-001,-1.35934854e+000,-6.13451362e-001,-3.75172906e-002,5.50238669e-001
				,-5.22376955e-001,-2.94644952e-001,2.90046751e-001,-5.75885117e-001,6.64234757e-001,7.01195000e-001
				,-1.11621690e+000,6.39278233e-001,1.68465388e+000,1.49540544e+000,3.62267435e-001,-1.79775083e+000
				,-1.06234872e+000,-1.05905807e+000,-2.08401918e+000,-6.53826118e-001,1.26439559e+000,9.39494073e-001
				,-2.98904000e-001,3.82932037e-001,8.05272311e-002,-1.20648265e+000,-1.44735247e-001,1.28372312e-001
				,6.16375387e-001,-1.31682694e-001,-1.33965030e-001,-1.71101296e+000];
		GRNG_Index : INT (RADIX := Decimal) := 557;
		Int : INT[10] (RADIX := Decimal) := [0,16716,0,0,0,0,0,0,0,0];
		MotorFVNR_1_AUX OF DI_S2_Data.4 (RADIX := Decimal);
		MotorFVNR_1_ISO : BOOL (Description := "Full Voltage Non-Reversing Motor Starter #1 Local Disconnect Closed",
		            RADIX := Decimal) := 1;
		MotorFVNR_1_MS OF DO_S1_Data.2 (RADIX := Decimal);
		MotorFVNR_1_OL : BOOL (Description := "Full Voltage Non-Reversing Motor Starter #1 Motor Overload OK",
		            RADIX := Decimal) := 1;
		MotorFVNR_1_Start_PB : BOOL (Description := "Full Voltage Non-Reversing Motor Starter Local Start Pushbutton",
		            RADIX := Decimal) := 0;
		MotorFVNR_1_Stop_PB : BOOL (Description := "Full Voltage Non-Reversing Motor Starter Local Stop Pushbutton",
		            RADIX := Decimal) := 0;
		MotorFVNR_1_Toggle : BOOL (Description := "Full Voltage Non-Reversing Motor Starter Auto Toggle",
		            RADIX := Decimal) := 1;
		MotorFVR_1_Auto_Run : BOOL (Description := "Full Voltage Reversing Motor Starter #1 Auto Run Command",
		            RADIX := Decimal) := 0;
		MotorFVR_1_Auto_Run_Toggle : BOOL (Description := "Full Voltage Reversing Motor Starter #1 Auto Run Toggle",
		            RADIX := Decimal) := 0;
		MotorFVR_1_Direction_Toggle : BOOL (Description := "Full Voltage Reversing Motor Starter #1 Direction Toggle Bit",
		            RADIX := Decimal) := 0;
		MotorFVR_1_Fwd_AUX OF DI_S2_Data.10 (RADIX := Decimal);
		MotorFVR_1_Fwd_IPB : BOOL (Description := "Full Voltage Reversing Motor Starter #1 Internal Forward Pushbutton (On for 1 Scan)",
		            RADIX := Decimal) := 0;
		MotorFVR_1_Fwd_MS OF DO_S1_Data.10 (RADIX := Decimal);
		MotorFVR_1_Fwd_SS : BOOL (Description := "Full Voltage Reversing Motor Starter #1 Forward Selector Switch",
		            RADIX := Decimal) := 1;
		MotorFVR_1_ISO : BOOL (Description := "Full Voltage Reversing Motor Starter #1 Local Disconnect Closed",
		            RADIX := Decimal) := 1;
		MotorFVR_1_OL : BOOL (Description := "Full Voltage Reversing Motor Starter #1 Overload OK",
		            RADIX := Decimal) := 1;
		MotorFVR_1_Rev_AUX OF DI_S2_Data.11 (RADIX := Decimal);
		MotorFVR_1_Rev_IPB : BOOL (Description := "Full Voltage Reversing Motor Starter #1 Internal Reverse Pushbutton (On for 1 Scan)",
		            RADIX := Decimal) := 0;
		MotorFVR_1_Rev_MS OF DO_S1_Data.11 (RADIX := Decimal);
		MotorFVR_1_Rev_SS : BOOL (Description := "Full Voltage Reversing Motor Starter #1 Reverse Selector Switch",
		            RADIX := Decimal) := 0;
		MotorFVR_1_Start_FWD_PB : BOOL (Description := "Full Voltage Reversing Motor Starter Local Start Forward Pushbutton",
		            RADIX := Decimal) := 0;
		MotorFVR_1_Start_REV_PB : BOOL (Description := "Full Voltage Reversing Motor Starter Local Start Reverse Pushbutton",
		            RADIX := Decimal) := 0;
		MotorFVR_1_Stop_PB : BOOL (Description := "Full Voltage Reversing Motor Starter Local Stop Pushbutton",
		            RADIX := Decimal) := 0;
		NC_Valve_Closed_LS OF DI_S2_Data.1 (RADIX := Decimal);
		NC_Valve_Close_Timer : TIMER (Description := "Normally Closed Valve Close Delay Timer",
		            COMMENT.DN := "Normally Closed Valve Close Delay Timer Done Bit") := [3341040,4000,0];
		NC_Valve_Hnd_SS : BOOL (Description := "Normally Closed Valve Hand Mode Selector Switch",
		            RADIX := Decimal) := 0;
		NC_Valve_Off_SS : BOOL (Description := "Normally Closed Valve Off Motde Selector Switch",
		            RADIX := Decimal) := 0;
		NC_Valve_Open_LS OF DI_S2_Data.0 (RADIX := Decimal);
		NC_Valve_Open_Timer : TIMER (Description := "Normally Closed Valve Open Delay Timer",
		            COMMENT.DN := "Normally Closed Valve Open Delay Timer Done Bit") := [1050591,4000,0];
		NC_Valve_Rem_SS : BOOL (Description := "Normally Closed Valve Remote Motde Selector Switch",
		            RADIX := Decimal) := 1;
		NC_Valve_Sol OF DO_S1_Data.0 (RADIX := Decimal);
		NC_Valve_Toggle : BOOL (Description := "Nromally Closed Valve Toggle Bit",
		            RADIX := Decimal) := 0;
		NO_Valve_Closed_LS OF DI_S2_Data.3 (RADIX := Decimal);
		NO_Valve_Close_Timer : TIMER (Description := "Normally Open Valve Close Delay Timer",
		            COMMENT.DN := "Normally Open Valve Close Delay Timer Done Bit") := [1445771,4000,0];
		NO_Valve_Hnd_SS : BOOL (Description := "Normally Open Valve Hand Mode Selector Switch",
		            RADIX := Decimal) := 0;
		NO_Valve_Off_SS : BOOL (Description := "Normally Open Valve Off Selector Switch",
		            RADIX := Decimal) := 0;
		NO_Valve_Open_LS OF DI_S2_Data.2 (RADIX := Decimal);
		NO_Valve_Open_Timer : TIMER (Description := "Normally Open Valve Open Delay Timer",
		            COMMENT.DN := "Normally Open Valve Open Delay Timer Done Bit") := [3341040,4000,0];
		NO_Valve_Rem_SS : BOOL (Description := "Normally Open Valve Remote Mode Selector Switch",
		            RADIX := Decimal) := 1;
		NO_Valve_Sol OF DO_S1_Data.1 (RADIX := Decimal);
		NO_Valve_Toggle : BOOL (Description := "Nromally Open Valve Toggle Bit",
		            RADIX := Decimal) := 0;
		One_Shot : BOOL[32] (Description := "One Shot Bit",
		            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0];
		PF525_VFD_1_ISO : BOOL (Description := "Powerflex VFD 1 Local Disconnect Closed",
		            RADIX := Decimal) := 1;
		PF525_VFD_1_LOC_Start_PB : BOOL (Description := "Powerflex 525 VFD 1 Local Start Pushbutton",
		            RADIX := Decimal) := 0;
		PF525_VFD_1_LOC_Stop_PB : BOOL (Description := "Powerflex 525 VFD 1 Local Stop Pushbutton",
		            RADIX := Decimal) := 0;
		PF525_VFD_1_Run_Cmd : BOOL (Description := "Powerflex 525 VFD 1 Run Command",
		            RADIX := Decimal) := 0;
		PF755_VFD_1_ISO : BOOL (RADIX := Decimal) := 1;
		PF755_VFD_1_Max_EU : REAL (Description := "Powerflex 755 VFD 1 Maximum Speed in Engineering Units",
		            RADIX := Float) := 1.72500000e+003;
		PF755_VFD_1_Run_Cmd : BOOL (Description := "Powerflex 755 VFD 1 Run Command",
		            RADIX := Decimal) := 0;
		PF755_VFD_1_Start_PB : BOOL (Description := "Powerflex 755 VFD 1 Local Start Pushbutton",
		            RADIX := Decimal) := 0;
		PF755_VFD_1_Stop_PB : BOOL (Description := "Powerflex 755 VFD 1 Local Stop Pushbutton",
		            RADIX := Decimal) := 0;
		PID_Cycle_Done : BOOL (Description := "One PID Instruction Cycle Completed$N (50 PIDs / 1.0 sec)",
		            RADIX := Decimal) := 0;
		PID_Cycle_Index : INT (RADIX := Decimal) := 0;
		PID_Enable : BOOL[32] (COMMENT[1] := "Ramp and Soak PIDE Instruction Enable",
		            COMMENT[2] := "PIDE Test #1 Enable Command",
		            COMMENT[3] := "PIDE Test #2 Enable Command",
		            RADIX := Decimal) := [2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
				,2#0,2#0,2#0,2#0,2#0];
		PID_Index : INT (Description := "PID Instruction Index Counter",
		            RADIX := Decimal) := 11;
		Real : REAL (RADIX := Float) := 1.27500000e+001;
		RMPS_Auto_PB : BOOL (Description := "Ramp and Soak 1 PIDE Auto Mode Pushbutton",
		            RADIX := Decimal) := 0;
		RMPS_Done : BOOL (Description := "Ramp & Soak 1 Sequence Done",
		            RADIX := Decimal) := 0;
		RMPS_Hold : BOOL (Description := "Ramp & Soak 1 Hold Command",
		            RADIX := Decimal) := 0;
		RMPS_Hold_Time : REAL[11] (Description := "Ramp & Soak 1 Segment Hold Times in Hours",
		            COMMENT[0] := "Segment 0 Hold Time in Hours",
		            COMMENT[1] := "Segment 1 Hold Time in Hours",
		            COMMENT[2] := "Segment 2 Hold Time in Hours",
		            COMMENT[3] := "Segment 3 Hold Time in Hours",
		            COMMENT[4] := "Segment 4 Hold Time in Hours",
		            COMMENT[5] := "Segment 5 Hold Time in Hours",
		            COMMENT[6] := "Segment 6 Hold Time in Hours",
		            COMMENT[7] := "Segment 7 Hold Time in Hours",
		            COMMENT[8] := "Segment 8 Hold Time in Hours",
		            COMMENT[9] := "Segment 9 Hold Time in Hours",
		            COMMENT[10] := "Segment 10 Hold Time in Hours",
		            RADIX := Float) := [0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000];
		RMPS_Init : BOOL (Description := "Ramp & SoaK 1 Initialize Command",
		            RADIX := Decimal) := 0;
		RMPS_Man_PB : BOOL (Description := "Ramp and Soak 1 PIDE Manual Mode Pushbutton",
		            RADIX := Decimal) := 0;
		RMPS_PIDE : PID_ENHANCED (Description := "Ramp and Soak1 PIDE Instruction") := [0,8921088,0.00000000e+000,1.00000000e+002,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,1.00000000e+002,0.00000000e+000,1.00000000e+000,1.00000000e+000,1.00000000e+000
				,1.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,1.00000000e+002,0.00000000e+000,1.00000000e+002,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,3.00000000e-001,5.50000000e+001,0.00000000e+000,0.00000000e+000
				,3.40282347e+038,3.40282347e+038,-3.40282347e+038,-3.40282347e+038,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,3.40282347e+038,3.40282347e+038,3.40282347e+038,3.40282347e+038
				,0.00000000e+000,1,1.00000000e+000,1,0,0,0,37748800,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,1.00000000e+000,1.00000000e+000
				,0,0,0,0.00000000e+000,4.56732330e+001,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,3.00000000e-001,9.16666687e-001,0.00000000e+000,1.00000000e+000,3.00000000e-001
				,5.50000000e+001,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,1.41060040e-037,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,1.40129846e-042,1.01014421e-039
				,0.00000000e+000,5.39906285e-041,1.00000000e+000,1.78805684e-042,1.01014562e-039,7.89211295e-042
				,1.27600000e+000];
		RMPS_PIDE_Auto_Restart : BOOL (Description := "Ramp & Soak 1 PIDE Instruction Auto Restart Command (Three Progam to Run Transitions)",
		            RADIX := Decimal) := 0;
		RMPS_PIDE_Auto_Start : BOOL (Description := "Ramp & Soak 1 PIDE Instruction Auto Mode Start Command",
		            RADIX := Decimal) := 0;
		RMPS_PIDE_Man_Out : REAL (Description := "Ramp & Soak 1 PIDE Manual Output (percent)",
		            RADIX := Float) := 0.00000000e+000;
		RMPS_PIDE_Out : REAL (Description := "Ramp & Soak 1 PIDE Output (percent)",
		            RADIX := Float) := 0.00000000e+000;
		RMPS_Run_Cmd : BOOL (Description := "Ramp & Soak 1 Run Command",
		            RADIX := Decimal) := 0;
		RMPS_Segs : INT (Description := "Ramp & Soak 1 Number of Segment / Steps",
		            RADIX := Decimal) := 3;
		RMPS_Seg_Time : REAL[11] (Description := "Ramp & Soak 1 Segment Times in Hours",
		            COMMENT[0] := "Segment 0 Segment Time in Hours",
		            COMMENT[1] := "Segment 1 Segment Time in Hours",
		            COMMENT[2] := "Segment 2 Segment Time in Hours",
		            COMMENT[3] := "Segment 3 Segment Time in Hours",
		            COMMENT[4] := "Segment 4 Segment Time in Hours",
		            COMMENT[5] := "Segment 5 Segment Time in Hours",
		            COMMENT[6] := "Segment 6 Segment Time in Hours",
		            COMMENT[7] := "Segment 7 Segment Time in Hours",
		            COMMENT[8] := "Segment 8 Segment Time in Hours",
		            COMMENT[9] := "Segment 9 Segment Time in Hours",
		            COMMENT[10] := "Segment 10 Segment Time in Hours",
		            RADIX := Float) := [0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000];
		RMPS_SP : REAL[11] (RADIX := Float) := [0.00000000e+000,5.00000000e+001,5.00000000e+001,0.00000000e+000,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000];
		RMPS_Time_SP : REAL[11] (COMMENT[0] := "Segment 0 Time (hrs)",
		            COMMENT[1] := "Segment 1 Time (hrs)",
		            COMMENT[2] := "Segment 2 Time (hrs)",
		            COMMENT[3] := "Segment 3 Time (hrs)",
		            COMMENT[4] := "Segment 4 Time (hrs)",
		            COMMENT[5] := "Segment 5 Time (hrs)",
		            COMMENT[6] := "Segment 6 Time (hrs)",
		            COMMENT[7] := "Segment 7 Time (hrs)",
		            COMMENT[8] := "Segment 8 Time (hrs)",
		            COMMENT[9] := "Segment 9 Time (hrs)",
		            COMMENT[10] := "Segment 10 Time (hrs)",
		            RADIX := Float) := [0.00000000e+000,1.00000000e-001,1.00000000e-001,1.00000000e-001,0.00000000e+000,0.00000000e+000
				,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000];
		SM01_First_Scan : BOOL (Description := "Sheet Machine #1 AOI Test Program First Scan Completed",
		            RADIX := Decimal) := 1;
		SS_E300_1_Local : BOOL (Description := "E300 Motor Overload #1 Relay Motor Starter Local Selector Switch",
		            RADIX := Decimal) := 0;
		SS_E300_1_Remote : BOOL (Description := "E300 Motor Oveload #1 Relay Motor Starter Remote Selector Switch",
		            RADIX := Decimal) := 1;
		SS_E300_2_Local : BOOL (Description := "E300 Motor Oveload #2 Relay Motor Starter Local Selector Switch",
		            RADIX := Decimal) := 0;
		SS_E300_2_Remote : BOOL (Description := "E300 Motor Oveload #2 Relay Motor Starter Remote Selector Switch",
		            RADIX := Decimal) := 1;
		SS_MotorFVNR_1_Local : BOOL (Description := "Full Voltage Non_Reversing Motor Starter Local Selector Switch",
		            RADIX := Decimal) := 0;
		SS_MotorFVNR_1_Remote : BOOL (Description := "Full Voltage Non-Reversing Motor Starter Remote Selector Switch",
		            RADIX := Decimal) := 1;
		SS_MotorFVR_1_Local : BOOL (Description := "Full Voltage Reversing Motor Starter Local Selector Switch",
		            RADIX := Decimal) := 0;
		SS_MotorFVR_1_Remote : BOOL (Description := "Full Voltage Reversing Motor Starter Remote Selector Switch",
		            RADIX := Decimal) := 1;
		SS_PF525_1_Loc : BOOL (Description := "Powerflex 525 VFD 1 Local Mode Selector Switch",
		            RADIX := Decimal) := 0;
		SS_PF525_1_Rem : BOOL (Description := "Powerflex 525 VFD 1 Remote Mode Selector Switch",
		            RADIX := Decimal) := 1;
		SS_PF755_1_Rem : BOOL (Description := "Powerflex 755 VFD 1 Remote Mode Selector Switch",
		            RADIX := Decimal) := 1;
		SS_PF755_Loc_SS : BOOL (Description := "Powerflex 755 VFD 1 Local Mode Selector Switch",
		            RADIX := Decimal) := 0;
		Toggle_1 : BOOL (RADIX := Decimal) := 0;
		Toggle_2 : BOOL (RADIX := Decimal) := 0;
		Toggle_3 : BOOL (RADIX := Decimal) := 0;
		Toggle_4 : BOOL (RADIX := Decimal) := 0;
		Toggle_5 : BOOL (RADIX := Decimal) := 0;
		Toggle_6 : BOOL (RADIX := Decimal) := 0;
		Total_Start_1 : BOOL (RADIX := Decimal) := 0;
		True : BOOL (Description := "Always True Bit",
		            RADIX := Decimal) := 1;
	END_TAG

	PROGRAM P01_AC_AOI_Test (Description := "Autoclave AOI Test Program",
	                         MAIN := "R001_RMPS_Main",
	                         MODE := 0,
	                         DisableFlag := 0)
			TAG
				a_RMPS_01 : a_RMPS (Description := "Ramp & Soak 1 AOI:",
				            COMMENT.RUN_MODE := "Ramp & Soak 1 AOI: in Run Mode") := [259,0.00000000e+000,0,0.00000000e+000,0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
						,[[0,0,0],[0,360000,0],[0,360000,0],[0,360000,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0],[2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0],[0,2147483600
						,0],[[0,0,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0],[0,0,0]],0.00000000e+000,[1165567
						,180000,180000]];
				a_RMPS_02 : a_RMPS  := [259,0.00000000e+000,3,0.00000000e+000,0,0.00000000e+000,0.00000000e+000,0.00000000e+000,0.00000000e+000
						,[[0,0,0],[0,600000,0],[0,1200000,0],[0,1800000,0],[0,2400000,0],[0,3000000,0],[0,3600000,0],[0,4200000,0],[0,4200000,0],[0,5400000
						,0],[0,6000000,0]],[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0],[2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0],[0,2147483600,0],[[0,2147483600,0],[0,2147483600,0],[0,2147483600
						,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600,0],[0,2147483600
						,0],[0,2147483600,0]],0.00000000e+000,[722113,180000,180000]];
				PIDE_ONS : BOOL[32] (Description := "PIDE One Shot Bit",
				            RADIX := Decimal) := [2#1,2#0,2#1,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0,2#0
						,2#0,2#0,2#0,2#0,2#0];
			END_TAG

			ROUTINE R001_RMPS_Main 
					N: JSR(R020_RMPS_PIDE_Lad,0);
					N: JSR(R030_RMPS_PIDE_FB,0);
					N: OTE(AC_First_Scan);
			END_ROUTINE

			ROUTINE R020_RMPS_PIDE_Lad 
					N: NOP();
					N: [XIO(AC_First_Scan) MOV(0,PID_Index) ,ADD(PID_Index,1,PID_Index) ,GRT(PID_Index,50) [OTE(PID_Cycle_Done) ,MOV(0,PID_Index) ] ];
					RC: "******$N"
					    "Ramp and Soak PIDE Restart Control$N"
					    "******$N"
					    "";
					N: [[XIO(AC_First_Scan) ,XIO(a_RMPS_01.RUN_MODE) ] MOV(0,PID_Cycle_Index) ,XIC(RMPS_PIDE.Manual) XIC(RMPS_Hold) [XIC(a_RMPS_01.RUN_MODE) XIC(PID_Cycle_Done) ADD(PID_Cycle_Index,1,PID_Cycle_Index) ,EQU(PID_Cycle_Index,3) OTE(RMPS_PIDE_Auto_Restart) ] ];
					N: [XIC(Toggle_1) OTU(Toggle_1) OTE(RMPS_Init) ,[XIC(Toggle_2) OTU(Toggle_2) ,XIC(a_RMPS_01.RUN_MODE) XIO(a_RMPS_01.DONE) ] [XIO(RMPS_Run_Cmd) XIC(AC_First_Scan) OTE(RMPS_PIDE_Auto_Start) ,XIO(RMPS_Init) OTE(RMPS_Run_Cmd) ] ];
					N: [XIC(Toggle_3) OTU(Toggle_3) ,XIO(AC_First_Scan) ,XIC(RMPS_Hold) XIC(a_RMPS_01.RUN_MODE) ]XIO(Toggle_4)XIO(RMPS_PIDE_Auto_Restart)OTE(RMPS_Hold);
					N: XIO(RMPS_Hold)OTU(Toggle_4);
					N: [XIO(AC_First_Scan) MOV(RMPS_PIDE_Out,RMPS_PIDE_Man_Out) ,XIO(a_RMPS_01.RUN_MODE) ONS(PIDE_ONS[0]) [OTE(RMPS_Done) ,MOV(0.0,RMPS_PIDE_Man_Out) ] ,[XIC(RMPS_Man_PB) OTU(RMPS_Man_PB) ,XIC(RMPS_Done) ,XIO(AC_First_Scan) ,XIC(RMPS_PIDE.ProgManualReq) ] XIO(RMPS_PIDE_Auto_Start) XIO(RMPS_PIDE_Auto_Restart) XIO(RMPS_Auto_PB) OTE(RMPS_PIDE.ProgManualReq) ,XIO(RMPS_PIDE.ProgManualReq) [OTU(RMPS_Auto_PB) ,OTE(RMPS_PIDE.ProgAutoReq) ] ,EQU(PID_Index,1) OTE(PID_Enable[1]) ];
			END_ROUTINE

			FBD_ROUTINE R030_RMPS_PIDE_FB (SheetSize := "Tabloid - 11 x 17 in",
			                               SheetOrientation := Landscape)
				SHEET  (Name := "RMPS_PIDE")
					IREF  (ID := 0,
					       X := 1060,
					       Y := 300,
					       Operand := "1",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 1,
					       X := 1060,
					       Y := 220,
					       Operand := "PID_Enable[1]",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 2,
					       X := 380,
					       Y := 380,
					       Operand := "RMPS_Hold",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 3,
					       X := 420,
					       Y := 460,
					       Operand := "RMPS_Init",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 4,
					       X := 960,
					       Y := 340,
					       Operand := "RMPS_PIDE_Man_Out",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 5,
					       X := 380,
					       Y := 200,
					       Operand := "RMPS_PIDE_Out",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 6,
					       X := 420,
					       Y := 120,
					       Operand := "RMPS_Run_Cmd",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 7,
					       X := 360,
					       Y := 300,
					       Operand := "RMPS_Segs",
					       HideDescription := No)
					END_IREF

					OREF  (ID := 8,
					       X := 1400,
					       Y := 220,
					       Operand := "RMPS_PIDE_Out",
					       HideDescription := No)
					END_OREF

					PIDE_BLOCK  (ID := 9,
					             X := 1120,
					             Y := 160,
					             Operand := "RMPS_PIDE",
					             VisiblePins := "EnableIn, PV, SPProg, CVProg, ProgProgReq, ProgAutoReq, ProgManualReq, CVEU, CV, SP, ProgOper, Auto, Manual",
					             HideDescription := No,
					             AutotuneTag := "")
					END_PIDE_BLOCK

					ADD_ON_INSTRUCTION a_RMPS (ID := 10,
					                           X := 540,
					                           Y := 220,
					                           Operand := "a_RMPS_02",
					                           VisiblePins := "RUN_CMD, PV, NUM_SEG, HOLD, INIT, SP, CUR_SEG, SEG_TIME_LEFT, SEG_TIME_EXP, TOT_TIME, CYC_TIME, RUN_MODE, DONE, SEG_TIME_SP, SEG_SP, SEG_TIME, SEG_HOLD_TIME",
					                           HideDescription := "No")
						FBD_PARAMETERS  (SEG_TIME_SP := RMPS_Time_SP,
						                 SEG_SP := RMPS_SP,
						                 SEG_TIME := RMPS_Seg_Time,
						                 SEG_HOLD_TIME := RMPS_Hold_Time)
						END_FBD_PARAMETERS

					END_ADD_ON_INSTRUCTION

					WIRE  (FromElementID := 0,
					       FromParameter := "",
					       ToElementID := 9,
					       ToParameter := "ProgProgReq")
					END_WIRE

					WIRE  (FromElementID := 1,
					       FromParameter := "",
					       ToElementID := 9,
					       ToParameter := "EnableIn")
					END_WIRE

					WIRE  (FromElementID := 2,
					       FromParameter := "",
					       ToElementID := 10,
					       ToParameter := "HOLD")
					END_WIRE

					WIRE  (FromElementID := 3,
					       FromParameter := "",
					       ToElementID := 10,
					       ToParameter := "INIT")
					END_WIRE

					WIRE  (FromElementID := 4,
					       FromParameter := "",
					       ToElementID := 9,
					       ToParameter := "CVProg")
					END_WIRE

					WIRE  (FromElementID := 5,
					       FromParameter := "",
					       ToElementID := 10,
					       ToParameter := "PV")
					END_WIRE

					WIRE  (FromElementID := 6,
					       FromParameter := "",
					       ToElementID := 10,
					       ToParameter := "RUN_CMD")
					END_WIRE

					WIRE  (FromElementID := 7,
					       FromParameter := "",
					       ToElementID := 10,
					       ToParameter := "NUM_SEG")
					END_WIRE

					WIRE  (FromElementID := 9,
					       FromParameter := "CVEU",
					       ToElementID := 8,
					       ToParameter := "")
					END_WIRE

					WIRE  (FromElementID := 9,
					       FromParameter := "CVEU",
					       ToElementID := 9,
					       ToParameter := "PV")
					END_WIRE

					WIRE  (FromElementID := 10,
					       FromParameter := "SP",
					       ToElementID := 9,
					       ToParameter := "SPProg")
					END_WIRE

				END_SHEET

			END_FBD_ROUTINE

	END_PROGRAM

	PROGRAM P01_AOI_Test_IO_Buffer (MAIN := "R001_IO_Buffer_Main",
	                                MODE := 0,
	                                DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE R001_IO_Buffer_Main 
					RC: "******$N"
					    "PLC IO Test IO Buffer Main Routine$N"
					    "******$N"
					    "";
					N: NOP();
					N: JSR(R010_Discrete_IO,0);
			END_ROUTINE

			ROUTINE R010_Discrete_IO 
					RC: "******$N"
					    "PLC IO Test IO Discrete Module Buffer Routine$N"
					    "******$N"
					    "";
					N: NOP();
					N: MOV(DO_S1_Data,Local:1:O.Data);
					N: COP(Local:2:I.Data,DI_S2_Data,1);
			END_ROUTINE

	END_PROGRAM

	PROGRAM P01_SM01_AOI_Test (Description := "Sheet Machine 1 AOI Test Program",
	                           MAIN := "R001_SM01_AOI_Main",
	                           MODE := 0,
	                           DisableFlag := 0)
			TAG
				BNOT_01 : FBD_BOOLEAN_NOT  := [1,3,5.60519386e-045];
				TOT_01 : TOTALIZER  := [101,1.00000000e+000,1,1.00000000e+000,5.00000000e-001,0.00000000e+000,0.00000000e+000,0.00000000e+000
						,0.00000000e+000,1,2.50000000e-002,1,0,123,5.00000000e-001,5.00000000e-001,2.50000000e-002
						,0,3.50324616e-044,1.01193087e-039,0.00000000e+000,7.89351425e-042,2.50000000e-002,0.00000000e+000
						,2.43966063e-041,8.33333377e-003,1.00000000e+000,1.75000000e+000,0.00000000e+000];
			END_TAG

			ROUTINE R001_SM01_AOI_Main (Description := "Sheet Machine 1 AOI Test Main Routine")
					N: NOP();
					N: [OTE(True) ,OTU(False) ];
					N: [XIO(Flash_Timer.DN) TON(Flash_Timer,?,?) ,XIC(Flash_Timer.DN) XIC(Flash_On) OTE(Flash_Off_PB) ,[XIC(Flash_Timer.DN) XIO(Flash_On) ,XIC(Flash_On) ] XIO(Flash_Off_PB) OTE(Flash_On) ,XIO(Flash_On) OTE(Flash_Off) ];
					N: [XIC(Fault_Reset_PB) OTU(Fault_Reset_PB) ,XIC(Fault_Reset_Timer.TT) ][TON(Fault_Reset_Timer,?,?) ,OTE(Fault_Reset_Cmd) ];
					N: JSR(R010_NC_Valve,0)JSR(R020_NO_Valve,0)JSR(R030_DBL_Valve,0)JSR(R040_CV_Position,0);
					N: JSR(R050_MotorFVNR_1,0)JSR(R060_MotorFVR_1,0)JSR(R090_E300_1,0)JSR(R100_E300_2,0);
					N: JSR(R070_PF525_VFD_1,0)JSR(R080_PF755_VFD_1,0);
					N: JSR(R200_Totalizer_1,0);
					N: JSR(R300_FAL_1,0);
					N: XIC(False)JSR(R999_Saved_Rungs,0);
					N: OTE(SM01_First_Scan);
			END_ROUTINE

			ROUTINE R010_NC_Valve 
					N: XIC(A_NC_Valve.S_AUT)XIC(A_NC_Valve.S_MAN)XIC(A_NC_Valve.C_HND)XIC(A_NC_Valve.S_SW_AUT)XIC(A_NC_Valve.S_SW_MAN)XIC(A_NC_Valve.S_IOK_OPN)XIC(A_NC_Valve.S_IOK_CLS)XIC(A_NC_Valve.S_OPN)XIC(A_NC_Valve.S_CLS)NOP();
					N: [XIC(NC_Valve_Rem_SS) OTE(A_NC_Valve.C_REM) ,XIO(NC_Valve_Rem_SS) OTE(NC_Valve_Off_SS) ,XIC(NC_Valve_Off_SS) XIC(NC_Valve_Hnd_SS) OTE(A_NC_Valve.C_HND) ,[XIC(A_NC_Valve.C_WW_AUT) OTU(A_NC_Valve.C_WW_AUT) ,XIC(S:FS) ] OTE(A_NC_Valve.C_SW_AUT) ,XIC(A_NC_Valve.C_WW_MAN) OTU(A_NC_Valve.C_WW_MAN) OTE(A_NC_Valve.C_SW_MAN) ];
					N: [XIC(NC_Valve_Toggle) OTE(A_NC_Valve.C_AUT_OPN) ,XIO(NC_Valve_Toggle) OTE(A_NC_Valve.C_AUT_CLS) ];
					N: [XIC(A_NC_Valve.C_WW_OPN) OTU(A_NC_Valve.C_WW_OPN) OTE(A_NC_Valve.C_MAN_OPN) ,XIC(A_NC_Valve.C_WW_CLS) OTU(A_NC_Valve.C_WW_CLS) OTE(A_NC_Valve.C_MAN_CLS) ];
					N: XIC(Fault_Reset_Cmd)OTE(A_NC_Valve.C_RAL);
					N: [XIC(NC_Valve_Open_LS) TON(NC_Valve_Open_Timer,?,?) ,XIC(NC_Valve_Open_Timer.DN) OTE(A_NC_Valve.I_OPN) ,XIC(NC_Valve_Closed_LS) TON(NC_Valve_Close_Timer,?,?) ,XIC(NC_Valve_Close_Timer.DN) OTE(A_NC_Valve.I_CLS) ];
					N: [OTE(A_NC_Valve.C_IOK_CLS) ,OTE(A_NC_Valve.C_IOK_OPN) ];
					N: a_ValveDiscrete(A_NC_Valve,A_NC_Valve.C_REM,A_NC_Valve.C_HND,A_NC_Valve.C_IOK_OPN,A_NC_Valve.C_IOK_CLS,5000,A_NC_Valve.I_CLS,A_NC_Valve.I_OPN,A_NC_Valve.O_CLS,NC_Valve_Sol);
			END_ROUTINE

			ROUTINE R020_NO_Valve 
					N: XIC(A_NO_Valve.S_AUT)XIC(A_NO_Valve.S_MAN)XIC(A_NO_Valve.C_HND)XIC(A_NO_Valve.S_SW_AUT)XIC(A_NO_Valve.S_SW_MAN)XIC(A_NO_Valve.S_IOK_OPN)XIC(A_NO_Valve.S_IOK_CLS)XIC(A_NO_Valve.S_OPN)XIC(A_NO_Valve.S_CLS)NOP();
					N: [XIC(NO_Valve_Rem_SS) OTE(A_NO_Valve.C_REM) ,XIO(NO_Valve_Rem_SS) OTE(NO_Valve_Off_SS) ,XIC(NO_Valve_Off_SS) XIC(NO_Valve_Hnd_SS) OTE(A_NO_Valve.C_HND) ,[XIC(A_NO_Valve.C_WW_AUT) OTU(A_NO_Valve.C_WW_AUT) ,XIC(S:FS) ] OTE(A_NO_Valve.C_SW_AUT) ,XIC(A_NO_Valve.C_WW_MAN) OTU(A_NO_Valve.C_WW_MAN) OTE(A_NO_Valve.C_SW_MAN) ];
					N: [XIC(NO_Valve_Toggle) OTE(A_NO_Valve.C_AUT_CLS) ,XIO(NO_Valve_Toggle) OTE(A_NO_Valve.C_AUT_OPN) ];
					N: [XIC(A_NO_Valve.C_WW_OPN) OTU(A_NO_Valve.C_WW_OPN) OTE(A_NO_Valve.C_MAN_OPN) ,XIC(A_NO_Valve.C_WW_CLS) OTU(A_NO_Valve.C_WW_CLS) OTE(A_NO_Valve.C_MAN_CLS) ];
					N: XIC(Fault_Reset_Cmd)OTE(A_NO_Valve.C_RAL);
					N: [XIC(NO_Valve_Closed_LS) TON(NO_Valve_Close_Timer,?,?) ,XIC(NO_Valve_Close_Timer.DN) OTE(A_NO_Valve.I_CLS) ,XIC(NO_Valve_Open_LS) TON(NO_Valve_Open_Timer,?,?) ,XIC(NO_Valve_Open_Timer.DN) OTE(A_NO_Valve.I_OPN) ];
					N: [OTE(A_NO_Valve.C_IOK_CLS) ,OTE(A_NO_Valve.C_IOK_OPN) ];
					N: a_ValveDiscrete(A_NO_Valve,A_NO_Valve.C_REM,A_NO_Valve.C_HND,A_NO_Valve.C_IOK_OPN,A_NO_Valve.C_IOK_CLS,5000,A_NO_Valve.I_CLS,A_NO_Valve.I_OPN,NO_Valve_Sol,A_NO_Valve.O_OPN);
			END_ROUTINE

			ROUTINE R030_DBL_Valve 
					N: XIC(A_DBL_Valve.S_AUT)XIC(A_DBL_Valve.S_MAN)XIC(A_DBL_Valve.C_HND)XIC(A_DBL_Valve.S_SW_AUT)XIC(A_DBL_Valve.S_SW_MAN)XIC(A_DBL_Valve.S_IOK_OPN)XIC(A_DBL_Valve.S_IOK_CLS)XIC(A_DBL_Valve.S_OPN)XIC(A_DBL_Valve.S_CLS)NOP();
					N: [XIC(DBL_Valve_Rem_SS) OTE(A_DBL_Valve.C_REM) ,XIO(DBL_Valve_Rem_SS) OTE(DBL_Valve_Off_SS) ,XIC(DBL_Valve_Off_SS) XIC(DBL_Valve_Hnd_SS) OTE(A_DBL_Valve.C_HND) ,[XIC(A_DBL_Valve.C_WW_AUT) OTU(A_DBL_Valve.C_WW_AUT) ,XIC(S:FS) ] OTE(A_DBL_Valve.C_SW_AUT) ,XIC(A_DBL_Valve.C_WW_MAN) OTU(A_DBL_Valve.C_WW_MAN) OTE(A_DBL_Valve.C_SW_MAN) ];
					N: [[XIC(DBL_Valve_CLS_PB) ,XIC(S:FS) ,XIC(A_DBL_Valve.C_AUT_CLS) ] XIO(DBL_Valve_OPN_PB) OTE(A_DBL_Valve.C_AUT_CLS) ,[XIC(DBL_Valve_OPN_PB) ,XIC(A_DBL_Valve.C_AUT_OPN) ] XIO(DBL_Valve_CLS_PB) OTE(A_DBL_Valve.C_AUT_OPN) ,XIC(DBL_Valve_CLS_PB) OTU(DBL_Valve_CLS_PB) ,XIC(DBL_Valve_OPN_PB) OTU(DBL_Valve_OPN_PB) ];
					N: [XIC(A_DBL_Valve.C_WW_OPN) OTU(A_DBL_Valve.C_WW_OPN) OTE(A_DBL_Valve.C_MAN_OPN) ,XIC(A_DBL_Valve.C_WW_CLS) OTU(A_DBL_Valve.C_WW_CLS) OTE(A_DBL_Valve.C_MAN_CLS) ];
					N: XIC(Fault_Reset_Cmd)OTE(A_DBL_Valve.C_RAL);
					N: [XIC(DBL_Valve_Sol_CLS) XIO(DBL_Valve_Open_Timer.TT) TON(DBL_Valve_Close_Timer,?,?) ,XIC(DBL_Valve_Close_Timer.DN) OTE(A_DBL_Valve.I_CLS) ,XIC(DBL_Valve_Sol_OPN) XIO(DBL_Valve_Close_Timer.TT) TON(DBL_Valve_Open_Timer,?,?) ,XIC(DBL_Valve_Open_Timer.DN) OTE(A_DBL_Valve.I_OPN) ];
					N: [OTE(A_DBL_Valve.C_IOK_CLS) ,OTE(A_DBL_Valve.C_IOK_OPN) ];
					N: a_ValveDiscrete(A_DBL_Valve,A_DBL_Valve.C_REM,A_DBL_Valve.C_HND,A_DBL_Valve.C_IOK_OPN,A_DBL_Valve.C_IOK_CLS,5000,A_DBL_Valve.I_CLS,A_DBL_Valve.I_OPN,DBL_Valve_Sol_CLS,DBL_Valve_Sol_OPN);
			END_ROUTINE

			ROUTINE R040_CV_Position (Description := "Control Valve Position Routine")
					RC: "******$N"
					    "Control Valve Position Routine$N"
					    "******$N"
					    "";
					N: [[XIC(CV_1_Position.C_WW_AUT) OTU(CV_1_Position.C_WW_AUT) ,XIO(S:FS) ] OTE(CV_1_Position.C_AUT) ,XIC(CV_1_Position.C_WW_MAN) OTU(CV_1_Position.C_WW_MAN) OTE(CV_1_Position.C_MAN) ,OTU(CV_1_Position.C_MNT) ];
					N: XIC(CV_1_Position.S_AUT)MOV(CV_1_Auto_Position,CV_1_Position.C_PSP)MOV(CV_1_Auto_Position,CV_1_Position.C_WW_Pos);
					N: XIC(CV_1_Position.C_WW_Pos_HS)OTU(CV_1_Position.C_WW_Pos_HS)XIC(CV_1_Position.S_MAN)MOV(CV_1_Position.C_WW_Pos,CV_1_Position.C_PSP);
					N: a_ValvePositioning(CV_1_Position,CV_1_Position.C_PSP,100.0,30480.0,CV_1_Output);
			END_ROUTINE

			ROUTINE R050_MotorFVNR_1 (Description := "Full Voltage Non-Reversing Motor Starter Subroutine")
					RC: "******$N"
					    "Full Voltage Non-Reversing Motor Starter #1 Logic$N"
					    "******$N"
					    "";
					N: XIC(A_MotorFVNR_1.S_AUT)XIC(A_MotorFVNR_1.S_MAN)XIC(A_MotorFVNR_1.C_MNT)XIC(A_MotorFVNR_1.S_SW_AUT)XIC(A_MotorFVNR_1.S_SW_MAN)XIC(A_MotorFVNR_1.S_IOK)XIC(A_MotorFVNR_1.S_FLT)XIC(A_MotorFVNR_1.S_RUN)NOP();
					N: [XIC(SS_MotorFVNR_1_Remote) OTE(A_MotorFVNR_1.C_REM) ,XIO(SS_MotorFVNR_1_Remote) OTE(SS_MotorFVNR_1_Local) ,XIC(SS_MotorFVNR_1_Local) OTE(A_MotorFVNR_1.C_LOC) ,[XIC(A_MotorFVNR_1.C_WW_AUT) OTU(A_MotorFVNR_1.C_WW_AUT) ,XIC(S:FS) ] OTE(A_MotorFVNR_1.C_SW_AUT) ,XIC(A_MotorFVNR_1.C_WW_MAN) OTU(A_MotorFVNR_1.C_WW_MAN) OTE(A_MotorFVNR_1.C_SW_MAN) ,OTU(A_MotorFVNR_1.C_MNT) ];
					N: XIC(MotorFVNR_1_Toggle)OTE(A_MotorFVNR_1.C_RUN);
					N: [XIC(A_MotorFVNR_1.C_WW_Stop) OTU(A_MotorFVNR_1.C_WW_Stop) XIC(A_MotorFVNR_1.S_MAN) ,XIC(MotorFVNR_1_Stop_PB) OTU(MotorFVNR_1_Stop_PB) XIC(A_MotorFVNR_1.S_LOC) ]OTL(A_MotorFVNR_1.StopReq);
					N: [XIC(A_MotorFVNR_1.C_WW_Start) OTU(A_MotorFVNR_1.C_WW_Start) XIC(A_MotorFVNR_1.S_MAN) ,XIC(MotorFVNR_1_Start_PB) OTU(MotorFVNR_1_Start_PB) XIC(A_MotorFVNR_1.S_LOC) ,XIC(A_MotorFVNR_1.S_RUN) ,XIC(A_MotorFVNR_1.C_JOG) [XIC(A_MotorFVNR_1.S_MAN) ,XIC(A_MotorFVNR_1.S_LOC) ] ]XIO(A_MotorFVNR_1.StopReq)XIC(A_MotorFVNR_1.C_IOK)XIO(A_MotorFVNR_1.S_FLT)OTE(A_MotorFVNR_1.C_JOG);
					N: XIO(A_MotorFVNR_1.C_JOG)XIO(A_MotorFVNR_1.S_RUN)OTU(A_MotorFVNR_1.StopReq);
					N: [XIC(MotorFVNR_1_ISO) OTE(A_MotorFVNR_1.I_ISO) ,XIC(MotorFVNR_1_OL) OTE(A_MotorFVNR_1.I_MCP) ];
					N: XIC(Fault_Reset_Cmd)OTE(A_MotorFVNR_1.C_RAL);
					N: OTE(A_MotorFVNR_1.C_IOK);
					N: a_MotorFVNR(A_MotorFVNR_1,A_MotorFVNR_1.C_REM,A_MotorFVNR_1.C_LOC,5000,MotorFVNR_1_AUX,A_MotorFVNR_1.I_ISO,A_MotorFVNR_1.I_MCP,MotorFVNR_1_MS);
			END_ROUTINE

			ROUTINE R060_MotorFVR_1 (Description := "Full Voltage Reversing Motor Starter #1 Subroutine")
					RC: "******$N"
					    "Full Voltage Reversing Motor Starter #1 Logic$N"
					    "******$N"
					    "";
					N: XIC(A_MotorFVR_1.S_AUT)XIC(A_MotorFVR_1.S_MAN)XIC(A_MotorFVR_1.C_MNT)XIC(A_MotorFVR_1.S_SW_AUT)XIC(A_MotorFVR_1.S_SW_MAN)XIC(A_MotorFVR_1.S_IOK)XIC(A_MotorFVR_1.S_FLT)XIC(A_MotorFVR_1.S_RUF)XIC(A_MotorFVR_1.S_RUR)NOP();
					N: [XIC(SS_MotorFVR_1_Remote) OTE(A_MotorFVR_1.C_REM) ,XIO(SS_MotorFVNR_1_Remote) OTE(SS_MotorFVR_1_Local) ,XIC(SS_MotorFVR_1_Local) OTE(A_MotorFVR_1.C_LOC) ,[XIC(A_MotorFVR_1.C_WW_AUT) OTU(A_MotorFVR_1.C_WW_AUT) ,XIC(S:FS) ] OTE(A_MotorFVR_1.C_SW_AUT) ,XIC(A_MotorFVR_1.C_WW_MAN) OTU(A_MotorFVR_1.C_WW_MAN) OTE(A_MotorFVR_1.C_SW_MAN) ,OTU(A_MotorFVR_1.C_MNT) ];
					N: [XIC(MotorFVR_1_Direction_Toggle) [XIO(MotorFVR_1_Fwd_SS) OTU(MotorFVR_1_Direction_Toggle) OTE(MotorFVR_1_Fwd_IPB) ,XIO(MotorFVR_1_Rev_SS) OTU(MotorFVR_1_Direction_Toggle) OTE(MotorFVR_1_Rev_IPB) ] ,[XIC(MotorFVR_1_Rev_IPB) ,XIC(MotorFVR_1_Rev_SS) ] XIO(MotorFVR_1_Fwd_IPB) OTE(MotorFVR_1_Rev_SS) ,XIO(MotorFVR_1_Rev_SS) OTE(MotorFVR_1_Fwd_SS) ];
					N: XIC(MotorFVR_1_Auto_Run_Toggle)XIC(A_MotorFVR_1.S_IOK)XIO(A_MotorFVR_1.S_FLT)OTE(MotorFVR_1_Auto_Run);
					N: XIC(MotorFVR_1_Auto_Run)[XIC(MotorFVR_1_Fwd_SS) OTE(A_MotorFVR_1.C_RUF) ,XIC(MotorFVR_1_Rev_SS) OTE(A_MotorFVR_1.C_RUR) ];
					N: [XIC(A_MotorFVR_1.C_WW_Stop) OTU(A_MotorFVR_1.C_WW_Stop) XIC(A_MotorFVR_1.S_MAN) ,XIC(MotorFVR_1_Stop_PB) OTU(MotorFVR_1_Stop_PB) XIC(A_MotorFVR_1.S_LOC) ]OTL(A_MotorFVR_1.StopReq);
					N: [XIC(A_MotorFVR_1.C_WW_STF) OTU(A_MotorFVR_1.C_WW_STF) XIC(A_MotorFVR_1.S_MAN) ,XIC(MotorFVR_1_Start_FWD_PB) OTU(MotorFVR_1_Start_FWD_PB) XIC(A_MotorFVR_1.S_LOC) ,XIC(A_MotorFVR_1.S_RUF) ,XIC(A_MotorFVR_1.C_JOF) [XIC(A_MotorFVR_1.S_MAN) ,XIC(A_MotorFVR_1.S_LOC) ] ]XIO(A_MotorFVR_1.StopReq)XIO(A_MotorFVR_1.C_JOR)XIC(A_MotorFVR_1.S_IOK)XIO(A_MotorFVR_1.S_FLT)OTE(A_MotorFVR_1.C_JOF);
					N: [XIC(A_MotorFVR_1.C_WW_STR) OTU(A_MotorFVR_1.C_WW_STR) XIC(A_MotorFVR_1.S_MAN) ,XIC(MotorFVR_1_Start_REV_PB) OTU(MotorFVR_1_Start_REV_PB) XIC(A_MotorFVR_1.S_LOC) ,XIC(A_MotorFVR_1.S_RUR) ,XIC(A_MotorFVR_1.C_JOR) [XIC(A_MotorFVR_1.S_MAN) ,XIC(A_MotorFVR_1.S_LOC) ] ]XIO(A_MotorFVR_1.StopReq)XIO(A_MotorFVR_1.C_JOF)XIC(A_MotorFVR_1.S_IOK)XIO(A_MotorFVR_1.S_FLT)OTE(A_MotorFVR_1.C_JOR);
					N: XIO(A_MotorFVR_1.C_JOF)XIO(A_MotorFVR_1.C_JOR)OTU(A_MotorFVR_1.StopReq);
					N: [XIC(Fault_Reset_Cmd) ,XIC(MotorFVR_1_ISO) XIC(A_MotorFVR_1.A_ISO) ]OTE(A_MotorFVR_1.C_RAL);
					N: [XIC(MotorFVR_1_ISO) OTE(A_MotorFVR_1.I_ISO) ,XIC(MotorFVR_1_OL) OTE(A_MotorFVR_1.I_MCP) ];
					N: OTE(A_MotorFVR_1.C_IOK);
					N: a_MotorFVR(A_MotorFVR_1,A_MotorFVR_1.C_REM,A_MotorFVR_1.C_LOC,5000,15000,MotorFVR_1_Fwd_AUX,MotorFVR_1_Rev_AUX,A_MotorFVR_1.I_ISO,A_MotorFVR_1.I_MCP,MotorFVR_1_Fwd_MS,MotorFVR_1_Rev_MS);
			END_ROUTINE

			ROUTINE R070_PF525_VFD_1 (Description := "Powerflex 525 VFD #1 Subroutine")
					RC: "******$N"
					    "PF525_VFD_1$N"
					    "Powerflex 525 Variable Frequency Drive #1$N"
					    "******$N"
					    "";
					N: XIC(A_PF525_VFD_1.S_AUT)XIC(A_PF525_VFD_1.S_MAN)XIC(A_PF525_VFD_1.S_LOC)XIC(A_PF525_VFD_1.S_SW_AUT)XIC(A_PF525_VFD_1.S_SW_MAN)XIC(A_PF525_VFD_1.S_IOK)XIC(A_PF525_VFD_1.S_FLT)XIC(A_PF525_VFD_1.S_RUN)NOP();
					N: GSV(Module,PF_525_VFD_1,EntryStatus,A_PF525_VFD_1.EntryStatus)MEQ(A_PF525_VFD_1.EntryStatus,61440,16384)OTE(A_PF525_VFD_1.C_COM);
					N: [XIC(SS_PF525_1_Rem) OTE(A_PF525_VFD_1.C_REM) ,XIO(SS_PF525_1_Rem) OTE(SS_PF525_1_Loc) ,XIC(SS_PF525_1_Loc) OTE(A_PF525_VFD_1.C_LOC) ,[XIC(A_PF525_VFD_1.C_WW_AUT) OTU(A_PF525_VFD_1.C_WW_AUT) ,XIC(S:FS) ] OTE(A_PF525_VFD_1.C_SW_AUT) ,XIC(A_PF525_VFD_1.C_WW_MAN) OTU(A_PF525_VFD_1.C_WW_MAN) OTE(A_PF525_VFD_1.C_SW_MAN) ,OTE(PF_525_VFD_1:O.Forward) OTU(PF_525_VFD_1:O.Reverse) OTU(A_PF525_VFD_1.C_MNT) OTE(PF525_VFD_1_ISO) ];
					N: XIC(PF525_VFD_1_Run_Cmd)OTE(A_PF525_VFD_1.C_RUN);
					N: [XIC(A_PF525_VFD_1.C_WW_Stop) OTU(A_PF525_VFD_1.C_WW_Stop) XIC(A_PF525_VFD_1.S_MAN) ,XIC(PF525_VFD_1_LOC_Stop_PB) OTU(PF525_VFD_1_LOC_Stop_PB) XIC(A_PF525_VFD_1.S_LOC) ]OTL(A_PF525_VFD_1.StopReq);
					N: [XIC(A_PF525_VFD_1.C_WW_Start) OTU(A_PF525_VFD_1.C_WW_Start) XIC(A_PF525_VFD_1.S_MAN) ,XIC(PF525_VFD_1_LOC_Start_PB) OTU(PF525_VFD_1_LOC_Start_PB) XIC(A_PF525_VFD_1.S_LOC) ,XIC(A_PF525_VFD_1.S_RUN) ,XIC(A_PF525_VFD_1.C_JOG) [XIC(A_PF525_VFD_1.S_MAN) ,XIC(A_PF525_VFD_1.S_LOC) ] ]XIO(A_PF525_VFD_1.StopReq)XIO(A_PF525_VFD_1.S_FLT)XIO(A_PF525_VFD_1.S_INH)OTE(A_PF525_VFD_1.C_JOG);
					N: XIO(A_PF525_VFD_1.C_JOG)XIO(A_PF525_VFD_1.S_MAN)OTU(A_PF525_VFD_1.C_WW_Stop);
					N: XIC(A_PF525_VFD_1.S_AUT)MOV(A_PF525_VFD_1.C_WW_Speed,A_PF525_VFD_1.C_SSP);
					N: XIC(A_PF525_VFD_1.S_MAN)MOV(A_PF525_VFD_1.C_WW_Speed,A_PF525_VFD_1.C_SSP);
					N: XIC(Fault_Reset_Cmd)OTE(A_PF525_VFD_1.C_RAL);
					N: XIC(PF_525_VFD_1:I.DriveStatus_param_SafetyActive)OTE(A_PF525_VFD_1.C_IOK);
					N: a_PF525_VFD(A_PF525_VFD_1,PF_525_VFD_1:I,PF_525_VFD_1:O,A_PF525_VFD_1.C_REM,A_PF525_VFD_1.C_LOC,A_PF525_VFD_1.C_SSP,1725.0,5000)NOP();
			END_ROUTINE

			ROUTINE R080_PF755_VFD_1 (Description := "Powerflex 755 VFD #1 Subroutine")
					RC: "******$N"
					    "PF525_VFD_1$N"
					    "Powerflex 525 Variable Frequency Drive #1$N"
					    "******$N"
					    "";
					N: XIC(A_PF755_VFD_1.S_AUT)XIC(A_PF755_VFD_1.S_MAN)XIC(A_PF755_VFD_1.S_LOC)XIC(A_PF755_VFD_1.S_SW_AUT)XIC(A_PF755_VFD_1.S_SW_MAN)XIC(A_PF755_VFD_1.S_IOK)XIC(A_PF755_VFD_1.S_FLT)XIC(A_PF755_VFD_1.S_RUN)NOP();
					RC: "******$N"
					    "PF755_VFD_1$N"
					    "Powerflex 755 Variable Frequency Drive #1$N"
					    "******$N"
					    "";
					N: GSV(Module,PF755_VFD_1,EntryStatus,A_PF755_VFD_1.EntryStatus)MEQ(A_PF755_VFD_1.EntryStatus,61440,16384)OTE(A_PF755_VFD_1.C_COM);
					N: [XIC(SS_PF755_1_Rem) OTE(A_PF755_VFD_1.C_REM) ,XIO(SS_PF755_1_Rem) OTE(SS_PF755_Loc_SS) ,XIC(SS_PF755_Loc_SS) OTE(A_PF755_VFD_1.C_LOC) ,[XIC(A_PF755_VFD_1.C_WW_AUT) OTU(A_PF755_VFD_1.C_WW_AUT) ,XIO(A_PF755_VFD_1.S_MAN) ] OTE(A_PF755_VFD_1.C_SW_AUT) ,XIC(A_PF755_VFD_1.C_WW_MAN) OTU(A_PF755_VFD_1.C_WW_MAN) OTE(A_PF755_VFD_1.C_SW_MAN) ,OTE(PF755_VFD_1:O.LogicCommand_Forward) OTU(PF755_VFD_1:O.LogicCommand_Reverse) OTE(PF755_VFD_1_ISO) OTU(A_PF755_VFD_1.C_MNT) ];
					N: XIC(A_PF755_VFD_1.S_AUT)XIC(PF755_VFD_1_Run_Cmd)OTE(A_PF755_VFD_1.C_RUN);
					N: [XIC(A_PF755_VFD_1.C_WW_Stop) OTU(A_PF755_VFD_1.C_WW_Stop) XIC(A_PF755_VFD_1.S_MAN) ,XIC(PF755_VFD_1_Stop_PB) OTU(PF755_VFD_1_Stop_PB) XIC(A_PF755_VFD_1.S_LOC) ]OTL(A_PF755_VFD_1.StopReq);
					N: [XIC(A_PF755_VFD_1.C_WW_Start) OTU(A_PF755_VFD_1.C_WW_Start) XIC(A_PF755_VFD_1.S_MAN) ,XIC(PF755_VFD_1_Start_PB) OTU(PF755_VFD_1_Start_PB) XIC(A_PF755_VFD_1.S_LOC) ,XIC(A_PF755_VFD_1.S_RUN) XIC(A_PF755_VFD_1.S_AUT) ,XIC(A_PF755_VFD_1.C_JOG) [XIC(A_PF755_VFD_1.S_MAN) ,XIC(A_PF755_VFD_1.S_LOC) ] ]XIO(A_PF755_VFD_1.StopReq)XIO(A_PF755_VFD_1.S_FLT)XIO(A_PF755_VFD_1.S_INH)OTE(A_PF755_VFD_1.C_JOG);
					N: XIO(A_PF755_VFD_1.C_JOG)XIO(A_PF755_VFD_1.S_RUN)OTU(A_PF755_VFD_1.StopReq);
					N: XIC(A_PF755_VFD_1.S_MAN)MOV(A_PF755_VFD_1.C_WW_Speed,A_PF755_VFD_1.C_SSP);
					N: XIC(A_PF755_VFD_1.S_AUT)[MOV(A_PF755_VFD_1.C_WW_Speed,A_PF755_VFD_1.C_SSP) ,ADD(A_PF755_VFD_1.C_WW_Speed,10.0,A_PF755_VFD_1.C_SSP) ];
					N: XIC(Fault_Reset_Cmd)OTE(A_PF755_VFD_1.C_RAL);
					N: OTE(A_PF755_VFD_1.C_IOK);
					N: a_PF755_VFD(A_PF755_VFD_1,PF755_VFD_1:I,PF755_VFD_1:O,A_PF755_VFD_1.C_REM,A_PF755_VFD_1.C_LOC,A_PF755_VFD_1.C_SSP,PF755_VFD_1_Max_EU,1725,5000,PF755_VFD_1_ISO);
			END_ROUTINE

			ROUTINE R090_E300_1 (Description := "Rockwell 193-ECM-ETR E300 w/ Full Voltage Non-Reversing Motor Starter Subroutine")
					RC: "******$N"
					    "193-ECM-ETR E300 Overload Relay with Full Voltage Non-Reversing Motor Starter AOI Test Routine$N"
					    "******$N"
					    "";
					N: XIC(A_E300_1.S_AUT)XIC(A_E300_1.S_MAN)XIC(A_E300_1.C_MNT)XIC(A_E300_1.S_SW_AUT)XIC(A_E300_1.S_SW_MAN)XIC(A_E300_1.S_IOK)XIC(A_E300_1.S_FLT)XIC(A_E300_1.S_RUN)NOP();
					N: GSV(Module,E300_1,EntryStatus,A_E300_1.EntryStatus)MEQ(A_E300_1.EntryStatus,61440,16384)OTE(A_E300_1.C_COM);
					N: [XIC(SS_E300_1_Remote) OTE(A_E300_1.C_REM) ,XIO(SS_E300_1_Remote) OTE(SS_E300_1_Local) ,XIC(SS_E300_1_Local) OTE(A_E300_1.C_LOC) ,[XIC(A_E300_1.C_WW_AUT) OTU(A_E300_1.C_WW_AUT) ,XIC(S:FS) ] OTE(A_E300_1.C_SW_AUT) ,XIC(A_E300_1.C_WW_MAN) OTU(A_E300_1.C_WW_MAN) OTE(A_E300_1.C_SW_MAN) ,OTU(A_E300_1.C_MNT) ];
					N: XIC(Toggle_5)XIO(A_E300_1.S_FLT)OTE(A_E300_1.C_RUN);
					N: [XIC(A_E300_1.C_WW_Stop) OTU(A_E300_1.C_WW_Stop) XIC(A_E300_1.S_MAN) ,XIC(E300_1_Stop_PB) OTU(E300_1_Stop_PB) XIC(A_E300_1.S_LOC) ]OTL(A_E300_1.StopReq);
					N: [XIC(A_E300_1.C_WW_Start) OTU(A_E300_1.C_WW_Start) XIC(A_E300_1.S_MAN) ,XIC(E300_1_Start_PB) OTU(E300_1_Start_PB) XIC(A_E300_1.S_LOC) ,XIC(A_E300_1.S_RUN) ,XIC(A_E300_1.C_JOG) [XIC(A_E300_1.S_MAN) ,XIC(A_E300_1.S_LOC) ] ]XIO(A_E300_1.StopReq)XIC(A_E300_1.C_IOK)XIO(A_E300_1.S_FLT)OTE(A_E300_1.C_JOG);
					N: XIO(A_E300_1.C_JOG)XIO(A_E300_1.S_RUN)OTU(A_E300_1.StopReq);
					N: [XIC(Fault_Reset_Cmd) ,XIC(A_E300_1.S_OLR) ,XIC(A_E300_1.S_ISO) XIC(A_E300_1.A_ISO) ]OTE(A_E300_1.C_RAL);
					N: XIC(A_E300_1.C_WW_RT)OTU(A_E300_1.C_WW_RT)OTE(A_E300_1.C_TRIP);
					N: OTE(A_E300_1.C_IOK);
					N: a_E300Ovld_FVNR(A_E300_1,E300_1:I,E300_1:O,A_E300_1.C_REM,A_E300_1.C_LOC,5000);
			END_ROUTINE

			ROUTINE R100_E300_2 (Description := "Rockwell 193-ECM-ETR E300 w/ Full Voltage Non-Reversing Motor Starter Subroutine")
					RC: "******$N"
					    "193-ECM-ETR E300 Overload Relay with Full Voltage Reversing Starter AOI Test Routine$N"
					    "******$N"
					    "";
					N: XIC(A_E300_2.S_AUT)XIC(A_E300_2.S_MAN)XIC(A_E300_2.C_MNT)XIC(A_E300_2.S_SW_AUT)XIC(A_E300_2.S_SW_MAN)XIC(A_E300_2.S_IOK)XIC(A_E300_2.S_FLT)XIC(A_E300_2.S_RUF)XIC(A_E300_2.S_RUR)NOP();
					N: GSV(Module,E300_2,EntryStatus,A_E300_2.EntryStatus)MEQ(A_E300_2.EntryStatus,61440,16384)OTE(A_E300_2.C_COM);
					N: [XIC(SS_E300_2_Remote) OTE(A_E300_2.C_REM) ,XIO(A_E300_2.C_REM) OTE(SS_E300_2_Local) ,XIC(SS_E300_2_Local) OTE(A_E300_2.C_LOC) ,[XIC(A_E300_2.C_WW_AUT) OTU(A_E300_2.C_WW_AUT) ,XIC(S:FS) ] XIO(A_E300_2.S_AUT) XIC(A_E300_2.C_REM) OTE(A_E300_2.C_SW_AUT) ,XIC(A_E300_2.C_WW_MAN) OTU(A_E300_2.C_WW_MAN) XIO(A_E300_2.S_MAN) OTE(A_E300_2.C_SW_MAN) ,OTU(A_E300_2.C_MNT) ];
					N: XIO(A_E300_2.S_FLT)[XIC(False) XIO(A_E300_2.C_RUR) OTE(A_E300_2.C_RUF) ,XIC(False) XIO(A_E300_2.C_RUF) OTE(A_E300_2.C_RUR) ];
					N: [XIC(A_E300_2.C_WW_Stop) OTU(A_E300_2.C_WW_Stop) XIC(A_E300_2.S_MAN) ,XIC(E300_2_Stop_PB) OTU(E300_2_Stop_PB) XIC(A_E300_2.S_LOC) ]OTL(A_E300_2.StopReq);
					N: [XIC(A_E300_2.C_WW_STF) OTU(A_E300_2.C_WW_STF) XIC(A_E300_2.S_MAN) ,XIC(E300_2_Start_FWD_PB) OTU(E300_2_Start_FWD_PB) XIC(A_E300_2.S_LOC) ,XIC(A_E300_2.S_RUF) ,XIC(A_E300_2.C_JOF) [XIC(A_E300_2.S_MAN) ,XIC(A_E300_2.S_LOC) ] ]XIO(A_E300_2.StopReq)XIO(A_E300_2.C_JOR)XIC(A_E300_2.S_IOK)XIO(A_E300_2.S_FLT)OTE(A_E300_2.C_JOF);
					N: [XIC(A_E300_2.C_WW_STR) OTU(A_E300_2.C_WW_STR) XIC(A_E300_2.S_MAN) ,XIC(E300_2_Start_REV_PB) OTU(E300_2_Start_REV_PB) XIC(A_E300_2.S_LOC) ,XIC(A_E300_2.S_RUR) ,XIC(A_E300_2.C_JOR) [XIC(A_E300_2.S_MAN) ,XIC(A_E300_2.S_LOC) ] ]XIO(A_E300_2.StopReq)XIO(A_E300_2.C_JOF)XIC(A_E300_2.S_IOK)XIO(A_E300_2.S_FLT)OTE(A_E300_2.C_JOR);
					N: XIO(A_E300_2.C_JOF)XIO(A_E300_2.C_JOR)OTU(A_E300_2.StopReq);
					N: [XIC(Fault_Reset_Cmd) ,XIC(A_E300_2.S_OLR) ,XIC(A_E300_2.S_ISO) XIC(A_E300_2.A_ISO) ]OTE(A_E300_2.C_RAL);
					N: XIC(A_E300_2.C_WW_RT)OTU(A_E300_2.C_WW_RT)OTE(A_E300_2.C_TRIP);
					N: [XIO(A_E300_2.S_IOFault) XIO(A_E300_2.S_Trip) OTE(E300_2_MCP_OK) ,OTE(A_E300_2.C_IOK) ];
					N: a_E300Ovld_FVR(A_E300_2,E300_2:I,E300_2:O,A_E300_2.C_REM,A_E300_2.C_LOC,5000,20000);
			END_ROUTINE

			FBD_ROUTINE R200_Totalizer_1 (Description := "Totalizer Instruction Test Routine 1",
			                              SheetSize := "Letter - 8.5 x 11 in",
			                              SheetOrientation := Landscape)
				SHEET  (Name := "")
					IREF  (ID := 0,
					       X := 380,
					       Y := 260,
					       Operand := "0.5",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 1,
					       X := 380,
					       Y := 280,
					       Operand := "1",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 2,
					       X := 380,
					       Y := 240,
					       Operand := "1.0",
					       HideDescription := No)
					END_IREF

					IREF  (ID := 3,
					       X := 220,
					       Y := 400,
					       Operand := "Total_Start_1",
					       HideDescription := No)
					END_IREF

					BNOT_BLOCK  (ID := 4,
					             X := 300,
					             Y := 340,
					             Operand := "BNOT_01",
					             VisiblePins := "In, Out",
					             HideDescription := No)
					END_BNOT_BLOCK

					TOT_BLOCK  (ID := 5,
					            X := 520,
					            Y := 180,
					            Operand := "TOT_01",
					            VisiblePins := "In, ResetValue, ProgProgReq, ProgOperReq, ProgStartReq, ProgStopReq, ProgResetReq, Total, OldTotal, ProgOper, RunStop, ProgResetDone, DeltaT",
					            HideDescription := No)
					END_TOT_BLOCK

					WIRE  (FromElementID := 0,
					       FromParameter := "",
					       ToElementID := 5,
					       ToParameter := "ResetValue")
					END_WIRE

					WIRE  (FromElementID := 1,
					       FromParameter := "",
					       ToElementID := 5,
					       ToParameter := "ProgProgReq")
					END_WIRE

					WIRE  (FromElementID := 2,
					       FromParameter := "",
					       ToElementID := 5,
					       ToParameter := "In")
					END_WIRE

					WIRE  (FromElementID := 3,
					       FromParameter := "",
					       ToElementID := 4,
					       ToParameter := "In")
					END_WIRE

					WIRE  (FromElementID := 3,
					       FromParameter := "",
					       ToElementID := 5,
					       ToParameter := "ProgStartReq")
					END_WIRE

					WIRE  (FromElementID := 4,
					       FromParameter := "Out",
					       ToElementID := 5,
					       ToParameter := "ProgResetReq")
					END_WIRE

					WIRE  (FromElementID := 4,
					       FromParameter := "Out",
					       ToElementID := 5,
					       ToParameter := "ProgStopReq")
					END_WIRE

				END_SHEET

			END_FBD_ROUTINE

			ROUTINE R300_FAL_1 (Description := "File Arithmetic Logic (FAL) Test Routine")
					N: [XIC(Total_Start_1) NOP() ,CPS(Int[0],Real,1) ];
					N: XIC(Toggle_6)ONS(One_Shot[0])[XIO(Disable_1) MOV(23,FFU_Unload_1.POS) FFU(FIFO_1_Data[0],FFU_Trash_1,FFU_Unload_1,?,?) ,XIO(Disable_1) MOV(23,FFL_Load_1.POS) FFL(FIFO_1_Data_Source,FIFO_1_Data[0],FFL_Load_1,?,?) ,RES(FAL_Test_1) ,MOV(0.0,FAL_Test_Total) FAL(FAL_Test_1,?,?,ALL,FAL_Test_Total,FIFO_1_Data[FAL_Test_1.POS]+FAL_Test_Total) ,OTU(Toggle_6) ];
			END_ROUTINE

			ROUTINE R999_Saved_Rungs 
					N: NOP();
			END_ROUTINE

	END_PROGRAM

	PROGRAM P02_Random (Description := "Gaussian Random Number Generator Program",
	                    MAIN := "R001_Main",
	                    MODE := 0,
	                    DisableFlag := 0)
			TAG
			END_TAG

			ROUTINE R001_Main (Description := "Random Number Generator Main Routine")
					RC: "******$N"
					    "Call Linear Congruential Generator Routine$N"
					    "******$N"
					    "";
					N: JSR(R010_LCG,0);
					RC: "******$N"
					    "Call Gaussian Random Number Generator Routine$N"
					    "******$N"
					    "";
					N: JSR(R020_Gauss_RNG,0);
			END_ROUTINE

			ROUTINE R010_LCG (Description := "Random Number Generator Subroutine")
					N: XIC(S:FS)MOV(0,BTC_RNG_2.Seed_Out);
					N: A_Uniform_RNG(BTC_RNG_1,BTC_RNG_2.Seed_Out,BTC_RNG_1.A,BTC_RNG_1.B,BTC_RNG_1.Out_lo,BTC_RNG_1.Out_hi,BTC_RNG_1.Output_scaled,BTC_RNG_1.Seed_Out)A_Uniform_RNG(BTC_RNG_2,BTC_RNG_1.Seed_Out,BTC_RNG_2.A,BTC_RNG_2.B,BTC_RNG_2.Out_lo,BTC_RNG_2.Out_hi,BTC_RNG_2.Output_scaled,BTC_RNG_2.Seed_Out);
			END_ROUTINE

			ROUTINE R020_Gauss_RNG (Description := "Gaussian Random Number Generator Routine")
					N: [XIC(S:FS) MOV(0,GRNG_Index) ,ADD(GRNG_Index,1,GRNG_Index) ,GRT(GRNG_Index,999) MOV(0,GRNG_Index) ,MOV(Gauss_RNG.GNG_Out,Gauss_RNG_Data[GRNG_Index]) ];
					N: A_Gauss_RNG(Gauss_RNG,Gauss_RNG.GNG_Out);
			END_ROUTINE

	END_PROGRAM

	TASK AOI_Test (Type := PERIODIC,
	               Rate := 25,
	               Priority := 10,
	               Watchdog := 500,
	               DisableUpdateOutputs := No,
	               InhibitTask := No)
			P01_AOI_Test_IO_Buffer;
			P01_SM01_AOI_Test;
			P01_AC_AOI_Test;
			P02_Random;
	END_TASK

	TREND Gaussian_RNG (Description := "Gaussian Random Number Generator Data",
	                    SamplePeriod := 10,
	                    NumberOfCaptures := 1,
	                    CaptureSizeType := Samples,
	                    CaptureSize := 60000,
	                    StartTriggerType := No Trigger,
	                    StopTriggerType := No Trigger,
	                    TrendxVersion := "5.2")
			Template := [208,207,17,224,161,177,26,225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,3,0,254,255,9,0,6,0,0,0,0,0,0,0
,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,16,0,0,2,0,0,0,1,0,0,0,254,255,255,255,0,0,0,0,0,0,0,0
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,255,255,255,254,255,255,255
,254,255,255,255,4,0,0,0,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,82,0,111,0,111,0,116,0,32,0,69,0,110,0,116,0
,114,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,22,0,5,0,255,255,255,255,255,255,255,255,1,0,0,0,14,52,81,191,9,48,205,65,159,190,222,136,174,167,50,40
,0,0,0,0,0,0,0,0,0,0,0,0,80,29,44,44,93,191,213,1,3,0,0,0,192,3,0,0,0,0,0,0,67,0,111,0,110,0,116,0
,101,0,110,0,116,0,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,2,1,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,3,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255
,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0
,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,254,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,4,0,0,0,8,152,0,0,159,74,0,0,0,0,0,0,13,0,0,0,255,254,255,12,71,0,97,0,117,0,115,0
,115,0,105,0,97,0,110,0,95,0,82,0,78,0,71,0,0,0,0,0,0,0,0,0,255,255,255,255,200,0,0,0,255,157,3,0,255,1,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,1,96,234,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0
,0,0,0,8,3,0,0,1,0,255,255,1,0,13,0,67,86,105,101,119,76,105,110,101,73,110,102,111,3,0,0,0,1,0,0,0,0,0,64,192
,0,0,64,64,255,254,255,0,255,254,255,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0
,255,254,255,17,71,0,97,0,117,0,115,0,115,0,95,0,82,0,78,0,71,0,46,0,71,0,78,0,71,0,95,0,79,0,117,0,116,0,32,1
,0,0,0,255,254,255,0,255,254,255,0,9,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1
,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,255
,0,0,0,0,0,3,0,0,0,4,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,200,66,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,1,0,0,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,1,0,0,0,0,0,255,255,255
,255,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,128,128,128,0,128,128,128,0,255,239,255,254,255,191,255,247,126,116,10,94,1,0,0,0,108,2,0,0,136,116,10
,94,1,0,0,0,108,2,0,0,255,254,255,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,2,0,0,0,40,0,0,0,50,0,0,0,0
,0,0,0,0,0,0,0,92,0,0,0,245,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,255,254,255,5,65,0,114,0,105,0,97,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,0,32,1,0
,0,0,255,254,255,0,255,254,255,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,0,32,1,0,0,0,255
,254,255,0,255,254,255,0,0,0,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,1
,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,255,255,1,0,9,0,67,76,105,110,101,73,110,102,111,3,0,0,0,1,0,0,0
,0,0,64,192,0,0,64,64,255,254,255,0,255,254,255,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0
,255,254,255,0,255,254,255,17,71,0,97,0,117,0,115,0,115,0,95,0,82,0,78,0,71,0,46,0,71,0,78,0,71,0,95,0,79,0,117,0
,116,0,32,1,0,0,0,255,254,255,0,255,254,255,0,0,0,0,0,0,0,0,0,1,0,0,0,0,69,0,116,0,104,0,101,0,114,0,78,0
,101,0,116,0,47,0,73,0,80,0,32,0,65,0,100,0,97,0,112,0,116,0,101,0,114,0,0,0,0,0,0,0,207,19,54,207,0,0,8,255
,136,155,64,31,38,0,0,0,39,0,0,0,0,0,0,0,123,0,70,0,54,0,70,0,56,0,57,0,55,0,65,0,50,0,45,0,65,0,55,0
,66,0,49,0,45,0,49,0,49,0,100,0,48,0,45,0,65,0,68,0,53,0,68,0,45,0,48,0,48,0,67,0,0,0,0,0,127,75,3,0
];
		PEN Gauss_RNG.GNG_Out (Color := 16#00ff_0000,
		                       Visible := 1,
		                       Style := 0,
		                       Type := Analog,
		                       Width := 1,
		                       Marker := 0,
		                       Min := -3.0,
		                       Max := 3.0)
		END_PEN

	END_TREND

	TREND RMPS_01 (Description := "Ramp & Soak 1 Trend",
	               SamplePeriod := 100,
	               NumberOfCaptures := 1,
	               CaptureSizeType := Time Period,
	               CaptureSize := 1440000,
	               StartTriggerType := No Trigger,
	               StopTriggerType := No Trigger,
	               TrendxVersion := "5.2")
			Template := [208,207,17,224,161,177,26,225,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,62,0,3,0,254,255,9,0,6,0,0,0,0,0,0,0
,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,16,0,0,2,0,0,0,1,0,0,0,254,255,255,255,0,0,0,0,0,0,0,0
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,253,255,255,255,254,255,255,255
,254,255,255,255,4,0,0,0,5,0,0,0,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,82,0,111,0,111,0,116,0,32,0,69,0,110,0,116,0
,114,0,121,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,22,0,5,0,255,255,255,255,255,255,255,255,1,0,0,0,14,52,81,191,9,48,205,65,159,190,222,136,174,167,50,40
,0,0,0,0,0,0,0,0,0,0,0,0,208,76,113,170,225,59,213,1,3,0,0,0,0,6,0,0,0,0,0,0,67,0,111,0,110,0,116,0
,101,0,110,0,116,0,115,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,2,1,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,213,5,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255
,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,6,0,0,0
,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0
,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,254,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255
,255,255,255,255,255,255,255,255,4,0,0,0,195,146,0,0,120,54,0,0,0,0,0,0,13,0,0,0,255,254,255,7,82,0,77,0,80,0,83,0
,95,0,48,0,49,0,0,0,0,0,0,0,0,0,255,255,255,255,200,0,0,0,255,157,3,0,255,1,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,255,254,255,0,255,254,255,0,1,96,234,0,0,0,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,100,5,0,0,3,0,255
,255,1,0,13,0,67,86,105,101,119,76,105,110,101,73,110,102,111,3,0,0,0,1,0,0,0,0,0,160,192,0,0,200,66,255,254,255,1,32,0
,255,254,255,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,28,80,0,48,0
,49,0,95,0,65,0,67,0,95,0,65,0,79,0,73,0,95,0,84,0,101,0,115,0,116,0,92,0,97,0,95,0,82,0,77,0,80,0,83,0
,95,0,48,0,49,0,46,0,83,0,80,0,32,1,0,0,0,255,254,255,0,255,254,255,0,1,128,3,0,0,0,1,0,0,0,0,0,160,192,0
,0,200,66,255,254,255,1,32,0,255,254,255,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255
,0,255,254,255,13,82,0,77,0,80,0,83,0,95,0,80,0,73,0,68,0,69,0,95,0,79,0,117,0,116,0,32,1,0,0,0,255,254,255,0
,255,254,255,0,1,128,3,0,0,0,1,0,0,0,205,204,204,189,0,0,32,65,255,254,255,1,32,0,255,254,255,0,0,0,0,0,0,0,0,0
,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,37,80,0,48,0,49,0,95,0,65,0,67,0,95,0,65,0
,79,0,73,0,95,0,84,0,101,0,115,0,116,0,92,0,97,0,95,0,82,0,77,0,80,0,83,0,95,0,48,0,49,0,46,0,67,0,117,0
,114,0,114,0,101,0,110,0,116,0,95,0,83,0,101,0,103,0,32,1,0,0,0,255,254,255,0,255,254,255,0,9,0,0,0,1,0,0,0,0
,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1
,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0,255,0,0,0,0,255,0,0,255,128,64,0,0,0,0,0,1,0,0,0,4,0,0
,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,200,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
,0,3,0,1,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,1,0,0,0,1,0,0,0,1
,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,128,128,0,128,128,128,0,255,239,255
,254,255,191,255,247,160,215,45,93,1,0,0,0,253,1,0,0,64,221,45,93,1,0,0,0,253,1,0,0,255,254,255,0,1,0,0,0,1,0,0
,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,40,0,0,0,50,0,0,0,0,0,0,0,0,0,0,0,92,0,0,0,245
,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,254,255,5,65
,0,114,0,105,0,97,0,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,0,32,1,0,0,0,255,254,255,0,255,254,255,0,3,0
,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,0,32,1,0,0,0,255,254,255,0,255,254,255,0,0,0,0,0,0
,0,0,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0
,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,255,255,1,0,9,0,67,76,105,110,101,73,110,102,111,3,0,0,0
,1,0,0,0,0,0,160,192,0,0,200,66,255,254,255,1,32,0,255,254,255,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254
,255,0,255,254,255,0,255,254,255,0,255,254,255,28,80,0,48,0,49,0,95,0,65,0,67,0,95,0,65,0,79,0,73,0,95,0,84,0,101,0
,115,0,116,0,92,0,97,0,95,0,82,0,77,0,80,0,83,0,95,0,48,0,49,0,46,0,83,0,80,0,32,1,0,0,0,255,254,255,0,255
,254,255,0,5,128,3,0,0,0,1,0,0,0,0,0,160,192,0,0,200,66,255,254,255,1,32,0,255,254,255,0,0,0,0,0,0,0,0,0,3
,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254,255,13,82,0,77,0,80,0,83,0,95,0,80,0,73,0,68,0,69
,0,95,0,79,0,117,0,116,0,32,1,0,0,0,255,254,255,0,255,254,255,0,5,128,3,0,0,0,1,0,0,0,205,204,204,189,0,0,32,65
,255,254,255,1,32,0,255,254,255,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,255,254,255,0,255,254,255,0,255,254,255,0,255,254
,255,37,80,0,48,0,49,0,95,0,65,0,67,0,95,0,65,0,79,0,73,0,95,0,84,0,101,0,115,0,116,0,92,0,97,0,95,0,82,0
,77,0,80,0,83,0,95,0,48,0,49,0,46,0,67,0,117,0,114,0,114,0,101,0,110,0,116,0,95,0,83,0,101,0,103,0,32,1,0,0
,0,255,254,255,0,255,254,255,0,0,0,0,0,0,0,0,0,1,0,0,0,113,0,0,66,0,0,0,0,0,0,0,8,2,0,0,13,0,2,0
,0,0,1,0,1,113,0,0,21,0,0,0,0,0,0,0,160,0,0,0,13,0,2,0,0,0,0,0,244,33,3,0];
		PEN P01_AC_AOI_Test\a_RMPS_01.SP (Description := " ",
		                                  Color := 16#0000_00ff,
		                                  Visible := 1,
		                                  Style := 0,
		                                  Type := Analog,
		                                  Width := 1,
		                                  Marker := 0,
		                                  Min := -5.0,
		                                  Max := 100.0)
		END_PEN

		PEN RMPS_PIDE_Out (Description := " ",
		                   Color := 16#0000_ff00,
		                   Visible := 1,
		                   Style := 0,
		                   Type := Analog,
		                   Width := 1,
		                   Marker := 0,
		                   Min := -5.0,
		                   Max := 100.0)
		END_PEN

		PEN P01_AC_AOI_Test\a_RMPS_01.Current_Seg (Description := " ",
		                                           Color := 16#0040_80ff,
		                                           Visible := 1,
		                                           Style := 0,
		                                           Type := Analog,
		                                           Width := 1,
		                                           Marker := 0,
		                                           Min := -0.1,
		                                           Max := 10.0)
		END_PEN

	END_TREND

CONFIG ASCII(XONXOFFEnable := 0,
	             DeleteMode := 0,
	             EchoMode := 0,
	             TerminationChars := 65293,
	             AppendChars := 2573,
	             BufferSize := 82) END_CONFIG

CONFIG CST(SystemTimeMasterID := 0) END_CONFIG

CONFIG DF1(DuplicateDetection := 1,
	           ErrorDetection := BCC Error,
	           EmbeddedResponseEnable := 0,
	           DF1Mode := Pt to Pt,
	           ACKTimeout := 50,
	           NAKReceiveLimit := 3,
	           ENQTransmitLimit := 3,
	           TransmitRetries := 3,
	           StationAddress := 0,
	           ReplyMessageWait := 5,
	           PollingMode := 1,
	           MasterMessageTransmit := 0,
	           NormalPollNodeFile := "<NA>",
	           NormalPollGroupSize := 0,
	           PriorityPollNodeFile := "<NA>",
	           ActiveStationFile := "<NA>",
	           SlavePollTimeout := 3000,
	           EOTSuppression := 0,
	           MaxStationAddress := 31,
	           TokenHoldFactor := 1,
	           EnableStoreFwd := 0,
	           StoreFwdFile := "<NA>") END_CONFIG

CONFIG SerialPort(BaudRate := 19200,
	                  Parity := No Parity,
	                  DataBits := 8 Bits of Data,
	                  StopBits := 1 Stop Bit,
	                  ComDriverId := DF1,
	                  PendingComDriverId := DF1,
	                  RTSOffDelay := 0,
	                  RTSSendDelay := 0,
	                  ControlLine := No Handshake,
	                  PendingControlLine := No Handshake,
	                  RemoteModeChangeFlag := 0,
	                  PendingRemoteModeChangeFlag := 0,
	                  ModeChangeAttentionChar := 27,
	                  PendingModeChangeAttentionChar := 27,
	                  SystemModeCharacter := 83,
	                  PendingSystemModeCharacter := 83,
	                  UserModeCharacter := 85,
	                  PendingUserModeCharacter := 85,
	                  DCDWaitDelay := 0) END_CONFIG

CONFIG TimeSynchronize(Priority1 := 128,
	                                 Priority2 := 128,
	                                 PTPEnable := 1) END_CONFIG

CONFIG WallClockTime(LocalTimeAdjustment := 0,
	                     TimeZone := 0) END_CONFIG

END_CONTROLLER

